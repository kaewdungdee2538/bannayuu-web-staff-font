{"version":3,"sources":["assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","constants/constants.utils.js","constants/api-route.js","utils/httpClient.utils.js","constants/message.constant.js","utils/funcImage.utils.js","actions/company/company-edit.action.js","actions/main/main.action.js","actions/login/login.action.js","actions/logout/logout.action.js","components/Navbars/AdminNavbarLinks.js","assets/jss/material-dashboard-react/components/customInputStyle.js","components/CustomInput/CustomInput.js","assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js","components/Navbars/RTLNavbarLinks.js","views/Main/Main-page.js","views/Company/Add/Company-style.js","components/Grid/GridItem.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","assets/jss/material-dashboard-react/components/cardFooterStyle.js","components/Card/CardFooter.js","components/DateTime/DateMaterialUi.js","components/Select/SelectBox.js","components/Select/SelectBox-style.js","views/Company/data/Company-data.js","assets/jss/material-dashboard-react/components/cardIconStyle.js","components/Card/CardIcon.js","components/CheckBox/CheckBox.js","components/RadioBox/RadioBox.js","components/Input/InputFile.js","actions/company/company-add.action.js","views/Company/Add/Company-add.js","components/Table/TableCustom.js","views/Company/Edit/data/Company-edit-data.js","components/Button/ButtonSearchStyle.js","components/Button/ButtonSearch.js","views/Company/Edit/Company-edit-style.js","components/Avatar/Avatar-form.js","components/Label/Label.js","utils/modalStyle.utils.js","views/Company/Edit/modal/Company-edit-modal-info.js","views/Company/Edit/modal/Company-edit-modal-disable.js","actions/company/company-disable.action.js","actions/company/company-enable.action.js","views/Company/Edit/modal/Company-edit-modal.js","views/Company/Edit/Company-edit.js","views/Home/main/Home-main-style.js","actions/home/home-import-excel.action.js","actions/home/home-get-all.action.js","views/Home/data/Home-data.js","views/Home/main/Home-main.js","actions/villager/villager-import-excel.action.js","actions/villager/villager-get-all.action.js","views/Villager/data/Villager-data.js","views/Villager/main/Villager-main-style.js","views/Villager/main/Villager-main.js","views/styles/card.style.js","utils/btnStyle.utils.js","actions/company/company-selected.action.js","views/user/main/User-main.js","routes.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","hooks/useRouteName.js","assets/jss/material-dashboard-react/components/footerStyle.js","components/Footer/Footer.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","views/Home/import/Home-import-style.js","components/Excel/ExcelFormMaterialUi.js","views/Home/import/Home-import.js","views/Home/home-list/Home-list.js","views/Villager/import/Villager-import-style.js","views/Villager/import/Villager-import.js","views/Villager/villager-list/Villager-list.js","views/user/add/User-add-select-company.js","components/TransferList/TransferList.js","actions/privilege/privilege-all.action.js","actions/company/company-list.action.js","utils/formatCharacter.util.js","views/user/add/User-add.js","actions/user/user-add.action.js","views/user/edit-info/User-edit-select-company.js","actions/user/user-get-list.action.js","actions/user/user-select.action.js","views/user/data/User.data.js","views/user/edit-info/User-edit-list.js","actions/user/user-get-info.action.js","actions/user/user-edit-info.action.js","views/user/edit-info/User-edit-info.js","views/user/change-privilege/User-change-privilege-select-company.js","views/user/change-privilege/User-change-privilege-list.js","actions/user/user-change-privilege.action.js","views/user/change-privilege/User-change-privilege.js","actions/company/company-list-not-cit-company.action.js","views/user/change-main-company/User-change-company-select-company.js","views/user/change-main-company/User-change-company-list.js","views/user/change-main-company/User-change-company-modal.js","actions/user/user-change-main-company.action.js","views/user/change-main-company/User-change-company.js","views/user/reset-password/User-reset-password-select-company.js","views/user/reset-password/User-reset-password-select-user.js","actions/user/user-reset-password.action.js","views/user/reset-password/User-reset-password.js","views/user/addordelete-companylist/User-addordelete-listcompany-select-company.js","views/user/addordelete-companylist/User-addordelete-listcompany-list.js","actions/user/user-addordelete.action.js","views/user/addordelete-companylist/User-addordelete-listcompany.js","layouts/Admin.js","secondroutes.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","layouts/images/sidebar-3.jpg","layouts/images/logo-big.svg","views/ErrorPage/PageLoading.js","views/Login/logo-big.svg","views/Login/Login-page.js","views/ErrorPage/Page500.js","reducers/login/login.reducer.js","reducers/logout/logout.reducer.js","reducers/main/main.reducer.js","reducers/company/company-selected.reducer.js","reducers/company/company-get-all.reducer.js","reducers/company/company-list-get-all.recuder.js","reducers/home/home-import-excel.reducer.js","reducers/home/home-get-all.reducer.js","reducers/villager/villager-import-excel.reducer.js","reducers/villager/villager-get-all.reducer.js","reducers/privilege/privilege-get-all.reducer.js","reducers/user/user-list-get-all.reducer.js","reducers/user/user-select.reducer.js","reducers/index.js","index.js"],"names":["hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","drawerWidth","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","buttonStyle","button","minWidth","backgroundColor","position","fontSize","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","display","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","useStyles","makeStyles","styles","RegularButton","props","classes","children","size","className","muiClasses","rest","btnClasses","classNames","Button","dropdownStyle","theme","buttonLink","breakpoints","down","links","zIndex","linkText","popperClose","popperResponsive","float","WebkitBoxShadow","popperNav","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","search","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","SUCCESS_MESSAGE","FAILED_MESSAGE","CLEAR_VALUE_MESSAGE","GET_DATA_SUCCESSFULLY","HTTP_FETCHING","HTTP_SUCCESS","HTTP_FAILED","LOGIN_FAILED_MESSAGE","HTTP_LOGIN_CLEARVALUES","HTTP_LOGIN_FETCHING","HTTP_LOGIN_SUCCESS","HTTP_LOGIN_FAILED","HTTP_LOGOUT_FETCHING","HTTP_LOGOUT_SUCCESS","HTTP_SELECT_COMPANY_SUCCESS","HTTP_SELECT_COMPANY_CLEAR","HTTP_GET_COMPANY_ALL_FETCHING","HTTP_GET_COMPANY_ALL_SUCCESS","HTTP_GET_COMPANY_ALL_FAILED","HTTP_GET_COMPANY_ALL_CLEARSTORE","HTTP_GET_COMPANY_ALL_GETDATASUCCESS","HTTP_GET_COMPANY_LIST_ALL_SUCCESS","HTTP_GET_COMPANY_LIST_CLEAR","HTTP_HOME_SELECT_COMPANY_SUCCESS","HTTP_HOME_CLEAR_COMPANY","HTTP_GET_HOME_ALL_SUCCESS","HTTP_GET_HOME_CLEAR","HTTP_VILLAGER_SELECT_COMPANY_SUCCESS","HTTP_GET_VILLAGER_ALL_SUCCESS","HTTP_VILLAGER_CLEAR_COMPANY","HTTP_GET_VILLAGER_CLEAR","HTTP_GET_PRIVILEGE_ALL_SUCCESS","HTTP_GET_PRIVILEGE_CLEAR","HTTP_GET_USER_LIST_ALL_SUCCESS","HTTP_GET_USER_LIST_CLEAR","HTTP_SELECT_USER_SUCCESS","HTTP_SELECT_USER_CLEAR","MAIN_URL","window","origin","GET_COMPANY_BYID_API","GET_USER_BYID_API","httpClientGetMethod","a","urlClient","valuesObj","access_token","config","headers","Authorization","url","axios","get","then","res","data","catch","err","console","log","httpClientGetMethodWithPost","authStore","bodyParameters","post","httpClientPOSTMethodNotAuth","result","error","message","httpClientPOSTMethodVerifyAuth","httpClientPOSTMethodFormData","bodyFormData","FormData","Object","entries","key","value","append","MESSAGE_COMPANYCODE_NOTFOUND","MESSAGE_COMPANYNAME_NOTFOUND","MESSAGE_PRICEOFCARDLOST_NOTFOUND","MESSAGE_NOTSELECT_PRO_COMPANY","MESSAGE_NOTSELECTIMAGE","MESSAGE_FILE_IMAGE_INVALID","MESSAGE_GET_COMPANY_ALL_FAILED","MESSAGE_REMARKNOTFOUND","MESSAGE_EXCELROW_NOTFOUND","MESSAGE_EXCELCOLUMN_NOTCOMPLETE","MESSAGE_COMPANYID_NOTFOUND","MESSAGE_FIRST_NAME_NOTFOUND","MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL","MESSAGE_LAST_NAME_NOTFOUND","MESSAGE_LAST_NAME_PROHIBIT_SPECIAL","MESSAGE_ADDRESS_PROHITBIT_SPECIAL","MESSAGE_MOBILE_NOT_NUMBER","MESSAGE_MOBILE_NOT_10_CHARACTER","MESSAGE_LINE_FORMAT_INVALID","MESSAGE_EMAIL_FORMAT_INVALID","MESSAGE_NOT_SELECT_PRIVILEGE","MESSAGE_USER_NOT_FOUND","MESSAGE_USER_NOT_END_OR_NUMBER","MESSAGE_PASSWORD_NOT_FOUND","MESSAGE_PASSWORD_NOT_END_OR_NUMBER","MESSAGE_PASSWORD_NOT_EQUAL","MESSAGE_COMPANY_ID_NOTFOUND","MESSAGE_REMARK_NOT_FOUND","MESSAGE_REMARK_SPECIAL","MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY","MESSAGE_NOT_SELECT_NEW_COMPANY","MESSAGE_EMPLOYEE_ID_NOTFOUND","MESSAGE_HOLDTIME_NOT_FOUND","getExtension","filename","parts","split","isImage","toLowerCase","setGetCompanyAllSuccess","payload","type","GetCompanyAllAction","history","credential","dispatch","setFetching","setFailed","swal","setSuccess","GetCompanyByID","editCompanyMiddleware","company_code","company_name","price_of_cardloss","company_promotion","image","name","remark","checkJWTTOKENAction","loginReducer","resetValuesAll","push","loginAction","logoutAction","mapDispatchToProps","connect","logoutReducer","useDispatch","useHistory","React","useState","openProfile","setOpenProfile","handleCloseProfile","onLogOutClick","innerWidth","onClick","event","contains","target","currentTarget","icons","Hidden","mdUp","implementation","Popper","open","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","id","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","MenuItem","Divider","light","customInputStyle","underline","borderColor","borderWidth","underlineError","underlineSuccess","labelRoot","labelRootError","labelRootSuccess","feedback","formControl","labelRTL","CustomInput","formControlProps","labelText","labelProps","inputProps","rtlActive","labelClasses","underlineClasses","undefined","newInputProps","maxLength","minLength","step","FormControl","InputLabel","htmlFor","Input","root","RTLNavbarLinks","setOpen","handleToggle","handleClose","placeholder","mainReducer","useSelector","store","useEffect","cardCategoryWhite","cardTitleWhite","grid","GridItem","Grid","item","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","borderBottom","overflow","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","icon","cardHeaderClasses","cardBodyStyle","cardBody","flex","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","cardFooterStyle","cardFooter","alignItems","cardFooterProfile","cardFooterPlain","cardFooterStats","cardFooterChart","CardFooter","cardFooterClasses","DateMaterialUi","selectedDate","setSelectedDate","currentTime","moment","utils","DateFnsUtils","FormLabel","format","label","onChange","ampm","formControlSelectBox","SelectBox","setValue","items","itemsSelectElem","map","text","Select","labelId","onClose","onOpen","itemSelectBoxs","itemRadioBoxs","cardIconStyle","cardIcon","CardIcon","cardIconClasses","CheckBox","setCheck","check","FormControlLabel","control","Checkbox","checked","RadioBox","radioItemsElem","Radio","component","RadioGroup","InputFile","fullWidth","accept","files","CreateCompanyAction","createCompanyMiddleware","location","reload","Store","state","dStart","dEnd","add","dateStart","setDateStart","dateEnd","setDateEnd","promotion","setPromotion","checkCal","setCheckCal","checkSecureEstampVisitor","setCheckSecureEstampVisitor","checkSecureEstampBooking","setCheckSecureEstampBooking","checkLineNotificationBoardcast","setCheckLineNotificationBoardcast","selectExceptDay","setSelectExceptDay","setImage","companyInfo","setCompanyInfo","xs","md","date","newMoment","subtract","Icon","cardCategory","toString","company_start_date","set","hour","minute","company_expire_date","calculate_enable","except_time_split_from_day","booking_estamp_verify","visitor_estamp_verify","line_notification_broadcast","useStyles1","flexShrink","spacing","TableCustom","useTheme","count","page","rowsPerPage","onChangePage","IconButton","direction","Math","ceil","max","headerTable","getStatus","status","maxWidth","iconButton","divider","ButtonSearch","searchFunc","setText","InputBase","e","preventDefault","editCompantStyle","tableRowBtn","btnInRow","square","palette","getContrastText","deepOrange","normalStatus","green","expireStatus","red","disableStatus","grey","notopenStatus","yellow","AvatarForm","getStyle","Label","modalStyle","paper","headModalAdd","headModalEdit","btnCancel","btnSave","btnEnable","btnSelect","btnImportExcel","btnUpload","btnNextPage","CompanyEditModalInfo","setRemark","setLineConfig","lineConfig","statusAvatarElem","formCreateDataElem","create_date","TextField","defaultValue","variant","create_by","formUpdateDataElem","update_date","update_by","formDisableDataElem","delete_date","delete_by","DialogContent","dividers","scroll","company_id","multiline","rows","CompanyEditModalDisable","disableCompanyMiddleware","enableCompanyMiddleware","CompanyEditModal","showModal","setShowModal","company_remark","line_company_data","showFormInfo","setShowFormInfo","showFormDisable","setShowFormDisable","showFormEnable","setShowFormEnable","headerTextModal","setHeaderTextModal","values","getData","JSON","stringify","onCloseModal","loadEditForm","btnDisableElem","btnEditSaveElem","btnEnableElem","endIcon","formInfoElem","formBottomElemInfo","DialogActions","formDisableElem","formBottomElemDisable","formEnableElem","formBottomElemEnable","Dialog","DialogTitle","useStyles2","companyGetAllReducer","rowsLength","classes2","setPage","setRowsPerPage","emptyRows","min","selectRow","setSelectRow","loadCompanyEditForm","textSearch","company_code_or_name","styleTableHeader","onShowModal","getAttribute","modalEditElem","onSearchClick","TableContainer","Table","table","TableHead","TableRow","TableCell","align","TableBody","slice","row","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","ActionsComponent","setSelectCompanySuccess","setClearSelectCompany","ImportExcelHomeAction","newCredential","newItems","home_address","setGetHomeAllSuccess","setClearHomeAll","GetHomeAllAction","getHomeMiddleware","goBack","headerHomeListTable","homeImportExcelReducer","homeGetAllReducer","classesModal","loadHomeMainForm","setVillagerSelectCompanySuccess","setVillagerClearSelectCompany","setGetVillagerAllSuccess","setClearVillagerAll","GetVillagerAllAction","getVillagerMiddleware","headerVillagerListTable","villagerImportExcelReducer","villagerGetAllReducer","btnAdd","btnEdit","classesBtn","dashboardRoutes","path","rtlName","Dashboard","MainPage","layout","Business","CompanyAdd","CompanyEdit","HomeWork","HomeMain","Group","VillagerMain","AccountBalance","UserMain","headerStyle","appBar","appResponsive","Header","routeName","routes","forEach","route","href","indexOf","useRouteName","loginStore","appBarClasses","AppBar","Toolbar","first_name_th","last_name_th","smDown","handleDrawerToggle","footerStyle","footer","bottom","list","inlineBlock","Footer","List","ListItem","Date","getYear","sidebarStyle","drawerPaper","visibility","overflowY","drawerPaperRTL","logo","content","logoLink","logoLinkRTL","logoImage","maxHeight","img","backgroundSize","backgroundPosition","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","orange","sidebarWrapper","overflowScrolling","activePro","stypeLogoHeader","Sidebar","useLocation","activeRoute","pathname","logoText","secondRoutes","prop","listItemClasses","whiteFontClasses","to","activeClassName","ListItemText","disableTypography","brand","src","alt","Drawer","anchor","ModalProps","keepMounted","backgroundImage","useStylesExcelArea","excelArea","ExcelFormMaterialUi","setItemExcel","file","document","body","file_name_string","file_name_array","readXlsxFile","excel_values","acceptedFiles","filesLimit","dropzoneText","getPreviewIcon","fileObject","iconProps","startsWith","Theaters","Description","PictureAsPdf","AttachFile","importExcel","classesExcel","excelItems","setExcelItems","loadHomeImportExcelForm","formExcelElem","find","homeImportReducer","arrExcel","String","itemFromExcel","valueObj","uploadData","home_code","home_id","loadVillagerImportExcelForm","villagerImportReducer","shift","first_name","last_name","tel_number","loadVillagerMainForm","villager_code","villager_id","not","b","filter","intersection","TransferList","titleLeft","titleRight","leftItems","setLeftItems","rightItems","setRightItems","setChecked","leftChecked","rightChecked","numberOfChecked","handleToggleAll","checkBoxHandle","customList","avatar","indeterminate","subheader","dense","listid","currentIndex","newChecked","splice","ListItemIcon","tabIndex","disableRipple","justify","concat","setGetPrivilegeAllSuccess","GetPrivilegeAllAction","setGetCompanyListAllSuccess","GetCompanyListAllAction","isNotEngCharOrNumber","allnumeric","inputtxt","match","ValidateEmail","mail","ValidateLine","IsProhibitSpecial","IsHomeProbitSpecial","privilegeGetAllReducer","companyListGetAllReducer","address","mobile","line","email","username","password","password_confirm","userInfo","setUserInfo","privilege","messageErr","setMessageErr","selectPrivilege","setSelectPrivilege","companyListItemRight","setCompanyListItemRight","companyListItemLeft","setCompanyListItemLeft","companySelectedReducer","loadMainForm","privilegeItems","employee_privilege_type","employee_privilege_id","employee_privilege_name_th","fil","onBlur","pass","employee_type","company_list","moblie","createUserMiddleware","CreateUserAction","setGetUserListAllSuccess","setSelectUserSuccess","setClearSelectUser","userHeaderTable","itemSelectBoxsHoldTime","userListGetAllReducer","full_name","employee_id","GetUserByID","EditUserAction","companyStore","userStore","userSelectReducer","employee_mobile","employee_line","employee_email","editInfoUserMiddleware","ChangePrivilegeUserAction","changePrivilegeUserMiddleware","GetCompanyListAndNotCitCompanyAllAction","loadChangeCompanyForm","UserChangeCompanyModal","setSelectNewCompany","onSelectCompay","overflowX","ChangeMainCompanyUserAction","selectNewCompany","new_company","old_company_id","new_company_id","changeMainCompanyUserMiddleware","loadCompanyResetPasswordForm","loadUserListForm","ResetPasswordUserAction","url_reset_password","hold_time","holdTime","setHoldTime","resetPasswordUserMiddleware","loadListCompanyListSelectCompanyForm","loadAddOrDeleteCompanyForm","AddOrDeleteCompanyListUserAction","ps","companylist","parse","company_list_from_get","company_list_right","comList","company_list_left","addOrDeleteCompanyListUserMiddleware","HomeImportData","HomeList","VillagerImportData","VillagerList","UserAddSelectCompany","UserAdd","UserEditSelectCompany","UserEditList","UserEditInfo","UserChangePrivilegeSelectCompany","UserChangePrivilegeList","UserChangePrivilege","UserChangeComapnySelectCompany","UserChangeCompanyList","UserChangeCompany","UserResetPassowrdSelectCompany","UserResetPasswordList","UserResetPassword","UserAddOrDeleteListComapnySelectCompany","UserAddOrDeleteListCompanyList","UserAddOrDeleteListCompany","appStyle","wrapper","mainPanel","modal","shadows","PageLoading","Modal","closeAfterTransition","BackdropComponent","Backdrop","disableBackdropClick","BackdropProps","timeout","Fade","in","CircularProgress","switchRoutes","from","userName","setUserName","setPassword","onLoginClick","loginMiddleware","Page500","initialState","isFetching","isError","globalState","isReady","combineReducers","localStr","localStorage","setItem","removeItem","getItem","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReduxApp","exact","LoginPage","mainStore","createRef","mobileOpen","setMobileOpen","getRoute","resizeFunction","navigator","platform","PerfectScrollbar","current","suppressScrollX","suppressScrollY","addEventListener","destroy","removeEventListener","imagine3","ref","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.701e8a10.chunk.js","sourcesContent":["/*!\r\n\r\n =========================================================\r\n * Material Dashboard React - v1.10.0 based on Material Dashboard - v1.2.0\r\n =========================================================\r\n\r\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\r\n * Copyright 2021 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n =========================================================\r\n\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n */\r\n\r\n// ##############################\r\n// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n// #############################\r\nconst hexToRgb = (input) => {\r\n  input = input + \"\";\r\n  input = input.replace(\"#\", \"\");\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error(\"input is not a valid hex color.\");\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return (\r\n    parseInt(first, 16) +\r\n    \", \" +\r\n    parseInt(second, 16) +\r\n    \", \" +\r\n    parseInt(last, 16)\r\n  );\r\n};\r\n\r\n// ##############################\r\n// // // Variables - Styles that are used on more than one component\r\n// #############################\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\r\n};\r\n\r\nconst container = {\r\n  paddingRight: \"15px\",\r\n  paddingLeft: \"15px\",\r\n  marginRight: \"auto\",\r\n  marginLeft: \"auto\",\r\n};\r\n\r\nconst defaultFont = {\r\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  fontWeight: \"300\",\r\n  lineHeight: \"1.5em\",\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n  \"#999\",\r\n  \"#777\",\r\n  \"#3C4858\",\r\n  \"#AAAAAA\",\r\n  \"#D2D2D2\",\r\n  \"#DDD\",\r\n  \"#b4b4b4\",\r\n  \"#555555\",\r\n  \"#333\",\r\n  \"#a9afbb\",\r\n  \"#eee\",\r\n  \"#e7e7e7\",\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\n\r\nconst boxShadow = {\r\n  boxShadow:\r\n    \"0 10px 30px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 4px 25px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(primaryColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst infoBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(infoColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst successBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(successColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst warningBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(warningColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst dangerBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(dangerColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst roseBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(roseColor[0]) +\r\n    \",.4)\",\r\n};\r\n\r\nconst warningCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n  ...warningBoxShadow,\r\n};\r\nconst successCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n  ...successBoxShadow,\r\n};\r\nconst dangerCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n  ...dangerBoxShadow,\r\n};\r\nconst infoCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n  ...infoBoxShadow,\r\n};\r\nconst primaryCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n  ...primaryBoxShadow,\r\n};\r\nconst roseCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n  ...roseBoxShadow,\r\n};\r\n\r\nconst cardActions = {\r\n  margin: \"0 20px 10px\",\r\n  paddingTop: \"10px\",\r\n  borderTop: \"1px solid \" + grayColor[10],\r\n  height: \"auto\",\r\n  ...defaultFont,\r\n};\r\n\r\nconst cardHeader = {\r\n  margin: \"-20px 15px 0\",\r\n  borderRadius: \"3px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst card = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  margin: \"25px 0\",\r\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n  borderRadius: \"3px\",\r\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n  background: whiteColor,\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n  border: \"0\",\r\n  borderRadius: \"3px\",\r\n  boxShadow:\r\n    \"0 10px 20px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 3px 20px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n  padding: \"10px 0\",\r\n  transition: \"all 150ms ease 0s\",\r\n};\r\n\r\nconst title = {\r\n  color: grayColor[2],\r\n  textDecoration: \"none\",\r\n  fontWeight: \"300\",\r\n  marginTop: \"30px\",\r\n  marginBottom: \"25px\",\r\n  minHeight: \"32px\",\r\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n  \"& small\": {\r\n    color: grayColor[1],\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\",\r\n  },\r\n};\r\n\r\nconst cardTitle = {\r\n  ...title,\r\n  marginTop: \"0\",\r\n  marginBottom: \"3px\",\r\n  minHeight: \"auto\",\r\n  \"& a\": {\r\n    ...title,\r\n    marginTop: \".625rem\",\r\n    marginBottom: \"0.75rem\",\r\n    minHeight: \"auto\",\r\n  },\r\n};\r\n\r\nconst cardSubtitle = {\r\n  marginTop: \"-.375rem\",\r\n};\r\n\r\nconst cardLink = {\r\n  \"& + $cardLink\": {\r\n    marginLeft: \"1.25rem\",\r\n  },\r\n};\r\n\r\nexport {\r\n  hexToRgb,\r\n  //variables\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n  boxShadow,\r\n  card,\r\n  defaultFont,\r\n  primaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  cardActions,\r\n  cardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n  cardTitle,\r\n  cardSubtitle,\r\n  cardLink,\r\n};\r\n","import {\r\n  grayColor,\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  roseColor,\r\n  whiteColor,\r\n  blackColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst buttonStyle = {\r\n  button: {\r\n    minHeight: \"auto\",\r\n    minWidth: \"auto\",\r\n    backgroundColor: grayColor[0],\r\n    color: whiteColor,\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.12)\",\r\n    border: \"none\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    padding: \"12px 30px\",\r\n    margin: \".3125rem 1px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"400\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0\",\r\n    willChange: \"box-shadow, transform\",\r\n    transition:\r\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\r\n    lineHeight: \"1.42857143\",\r\n    textAlign: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    verticalAlign: \"middle\",\r\n    touchAction: \"manipulation\",\r\n    cursor: \"pointer\",\r\n    \"&:hover,&:focus\": {\r\n      color: whiteColor,\r\n      backgroundColor: grayColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      marginTop: \"-1em\",\r\n      marginBottom: \"-1em\",\r\n      fontSize: \"1.1rem\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\",\r\n    },\r\n    \"& svg\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      width: \"18px\",\r\n      height: \"18px\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\",\r\n    },\r\n    \"&$justIcon\": {\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        marginTop: \"0px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        transform: \"none\",\r\n        left: \"0px\",\r\n        top: \"0px\",\r\n        height: \"100%\",\r\n        lineHeight: \"41px\",\r\n        fontSize: \"20px\",\r\n      },\r\n    },\r\n  },\r\n  white: {\r\n    \"&,&:focus,&:hover\": {\r\n      backgroundColor: whiteColor,\r\n      color: grayColor[0],\r\n    },\r\n  },\r\n  rose: {\r\n    backgroundColor: roseColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: roseColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  simple: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: whiteColor,\r\n      background: \"transparent\",\r\n      boxShadow: \"none\",\r\n    },\r\n    \"&$rose\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: roseColor[0],\r\n      },\r\n    },\r\n    \"&$primary\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: primaryColor[0],\r\n      },\r\n    },\r\n    \"&$info\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: infoColor[0],\r\n      },\r\n    },\r\n    \"&$success\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: successColor[0],\r\n      },\r\n    },\r\n    \"&$warning\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: warningColor[0],\r\n      },\r\n    },\r\n    \"&$danger\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: dangerColor[0],\r\n      },\r\n    },\r\n  },\r\n  transparent: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: \"inherit\",\r\n      background: \"transparent\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  disabled: {\r\n    opacity: \"0.65\",\r\n    pointerEvents: \"none\",\r\n  },\r\n  lg: {\r\n    padding: \"1.125rem 2.25rem\",\r\n    fontSize: \"0.875rem\",\r\n    lineHeight: \"1.333333\",\r\n    borderRadius: \"0.2rem\",\r\n  },\r\n  sm: {\r\n    padding: \"0.40625rem 1.25rem\",\r\n    fontSize: \"0.6875rem\",\r\n    lineHeight: \"1.5\",\r\n    borderRadius: \"0.2rem\",\r\n  },\r\n  round: {\r\n    borderRadius: \"30px\",\r\n  },\r\n  block: {\r\n    width: \"100% !important\",\r\n  },\r\n  link: {\r\n    \"&,&:hover,&:focus\": {\r\n      backgroundColor: \"transparent\",\r\n      color: grayColor[0],\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  justIcon: {\r\n    paddingLeft: \"12px\",\r\n    paddingRight: \"12px\",\r\n    fontSize: \"20px\",\r\n    height: \"41px\",\r\n    minWidth: \"41px\",\r\n    width: \"41px\",\r\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\r\n      marginRight: \"0px\",\r\n    },\r\n    \"&$lg\": {\r\n      height: \"57px\",\r\n      minWidth: \"57px\",\r\n      width: \"57px\",\r\n      lineHeight: \"56px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"32px\",\r\n        lineHeight: \"56px\",\r\n      },\r\n      \"& svg\": {\r\n        width: \"32px\",\r\n        height: \"32px\",\r\n      },\r\n    },\r\n    \"&$sm\": {\r\n      height: \"30px\",\r\n      minWidth: \"30px\",\r\n      width: \"30px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"17px\",\r\n        lineHeight: \"29px\",\r\n      },\r\n      \"& svg\": {\r\n        width: \"17px\",\r\n        height: \"17px\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default buttonStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function RegularButton(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    round,\r\n    children,\r\n    disabled,\r\n    simple,\r\n    size,\r\n    block,\r\n    link,\r\n    justIcon,\r\n    className,\r\n    muiClasses,\r\n    ...rest\r\n  } = props;\r\n  const btnClasses = classNames({\r\n    [classes.button]: true,\r\n    [classes[size]]: size,\r\n    [classes[color]]: color,\r\n    [classes.round]: round,\r\n    [classes.disabled]: disabled,\r\n    [classes.simple]: simple,\r\n    [classes.block]: block,\r\n    [classes.link]: link,\r\n    [classes.justIcon]: justIcon,\r\n    [className]: className,\r\n  });\r\n  return (\r\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nRegularButton.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"rose\",\r\n    \"white\",\r\n    \"transparent\",\r\n  ]),\r\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\r\n  simple: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  link: PropTypes.bool,\r\n  justIcon: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  // use this to pass the classes props from Material-UI\r\n  muiClasses: PropTypes.object,\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n  primaryColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  defaultFont,\r\n  blackColor,\r\n  grayColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst dropdownStyle = (theme) => ({\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      marginLeft: \"30px\",\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  links: {\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n      color: grayColor[9],\r\n      marginRight: \"15px\",\r\n    },\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n  },\r\n  popperClose: {\r\n    pointerEvents: \"none\",\r\n  },\r\n  popperResponsive: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      zIndex: \"1640\",\r\n      position: \"static\",\r\n      float: \"none\",\r\n      width: \"auto\",\r\n      marginTop: \"0\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"0\",\r\n      WebkitBoxShadow: \"none\",\r\n      boxShadow: \"none\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n  popperNav: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static !important\",\r\n      left: \"unset !important\",\r\n      top: \"unset !important\",\r\n      transform: \"none !important\",\r\n      willChange: \"unset !important\",\r\n      \"& > div\": {\r\n        boxShadow: \"none !important\",\r\n        marginLeft: \"0rem\",\r\n        marginRight: \"0rem\",\r\n        transition: \"none !important\",\r\n        marginTop: \"0px !important\",\r\n        marginBottom: \"0px !important\",\r\n        padding: \"0px !important\",\r\n        backgroundColor: \"transparent !important\",\r\n        \"& ul li\": {\r\n          color: whiteColor + \" !important\",\r\n          margin: \"10px 15px 0!important\",\r\n          padding: \"10px 15px !important\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    borderRadius: \"3px\",\r\n    border: \"0\",\r\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\r\n    top: \"100%\",\r\n    zIndex: \"1000\",\r\n    minWidth: \"160px\",\r\n    padding: \"5px 0\",\r\n    margin: \"2px 0 0\",\r\n    fontSize: \"14px\",\r\n    textAlign: \"left\",\r\n    listStyle: \"none\",\r\n    backgroundColor: whiteColor,\r\n    WebkitBackgroundClip: \"padding-box\",\r\n    backgroundClip: \"padding-box\",\r\n  },\r\n  dropdownItem: {\r\n    ...defaultFont,\r\n    fontSize: \"13px\",\r\n    padding: \"10px 20px\",\r\n    margin: \"0 5px\",\r\n    borderRadius: \"2px\",\r\n    WebkitTransition: \"all 150ms linear\",\r\n    MozTransition: \"all 150ms linear\",\r\n    OTransition: \"all 150ms linear\",\r\n    MsTransition: \"all 150ms linear\",\r\n    transition: \"all 150ms linear\",\r\n    display: \"block\",\r\n    clear: \"both\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1.42857143\",\r\n    color: grayColor[8],\r\n    whiteSpace: \"nowrap\",\r\n    height: \"unset\",\r\n    minHeight: \"unset\",\r\n    \"&:hover\": {\r\n      backgroundColor: primaryColor[0],\r\n      color: whiteColor,\r\n      ...primaryBoxShadow,\r\n    },\r\n  },\r\n});\r\n\r\nexport default dropdownStyle;\r\n","import {\r\n  defaultFont,\r\n  dangerColor,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\r\n\r\nconst headerLinksStyle = (theme) => ({\r\n  ...dropdownStyle(theme),\r\n  search: {\r\n    \"& > div\": {\r\n      marginTop: \"0\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"10px 15px !important\",\r\n      float: \"none !important\",\r\n      paddingTop: \"1px\",\r\n      paddingBottom: \"1px\",\r\n      padding: \"0!important\",\r\n      width: \"60%\",\r\n      marginTop: \"40px\",\r\n      \"& input\": {\r\n        color: whiteColor,\r\n      },\r\n    },\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n    margin: \"0px\",\r\n  },\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      margin: \"10px 15px 0\",\r\n      width: \"-webkit-fill-available\",\r\n      \"& svg\": {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& > span\": {\r\n        justifyContent: \"flex-start\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  },\r\n  searchButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"-50px !important\",\r\n      marginRight: \"22px\",\r\n      float: \"right\",\r\n    },\r\n  },\r\n  margin: {\r\n    zIndex: \"4\",\r\n    margin: \"0\",\r\n  },\r\n  searchIcon: {\r\n    width: \"17px\",\r\n    zIndex: \"4\",\r\n  },\r\n  notifications: {\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      top: \"2px\",\r\n      border: \"1px solid \" + whiteColor,\r\n      right: \"4px\",\r\n      fontSize: \"9px\",\r\n      background: dangerColor[0],\r\n      color: whiteColor,\r\n      minWidth: \"16px\",\r\n      height: \"16px\",\r\n      borderRadius: \"10px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"16px\",\r\n      verticalAlign: \"middle\",\r\n      display: \"block\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      ...defaultFont,\r\n      fontSize: \"14px\",\r\n      marginRight: \"8px\",\r\n    },\r\n  },\r\n  manager: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n  searchWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"-webkit-fill-available\",\r\n      margin: \"10px 15px 0\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\nexport default headerLinksStyle;\r\n","export const SUCCESS_MESSAGE = 'เรียบร้อย'\r\nexport const FAILED_MESSAGE = 'ล้มเหลว'\r\nexport const CLEAR_VALUE_MESSAGE = 'Clear Data'\r\nexport const GET_DATA_SUCCESSFULLY = 'Get Data Successfully'\r\n\r\nexport const HTTP_FETCHING = 'HTTP_FETCHING'\r\nexport const HTTP_SUCCESS = 'HTTP_SUCCESS'\r\nexport const HTTP_FAILED = 'HTTP_FAILED'\r\n\r\nexport const LOGIN_FAILED_MESSAGE = 'Username หรือ Password ไม่ถูกต้อง !'\r\nexport const HTTP_LOGIN_CLEARVALUES = 'HTTP_LOGIN_CLEARVALUES'\r\nexport const HTTP_LOGIN_FETCHING = 'HTTP_LOGIN_FETCHING'\r\nexport const HTTP_LOGIN_SUCCESS = 'HTTP_LOGIN_SUCCESS'\r\nexport const HTTP_LOGIN_FAILED = 'HTTP_LOGIN_FAILED'\r\n\r\nexport const HTTP_LOGOUT_FETCHING = 'HTTP_LOGOUT_FETCHING'\r\nexport const HTTP_LOGOUT_SUCCESS = 'HTTP_LOGOUT_SUCCESS'\r\n\r\nexport const HTTP_SELECT_COMPANY_SUCCESS = 'HTTP_SELECT_COMPANY_SUCCESS'\r\nexport const HTTP_SELECT_COMPANY_CLEAR = 'HTTP_SELECT_COMPANY_CLEAR'\r\n\r\nexport const HTTP_GET_COMPANY_ALL_FETCHING = 'HTTP_GET_COMPANY_ALL_FETCHING'\r\nexport const HTTP_GET_COMPANY_ALL_SUCCESS = 'HTTP_GET_COMPANY_ALL_SUCCESS'\r\nexport const HTTP_GET_COMPANY_ALL_FAILED = 'HTTP_GET_COMPANY_ALL_FAILED'\r\nexport const HTTP_GET_COMPANY_ALL_CLEARSTORE = 'HTTP_GET_COMPANY_ALL_CLEARSTORE'\r\nexport const HTTP_GET_COMPANY_ALL_GETDATASUCCESS = 'HTTP_GET_COMPANY_ALL_GETDATASUCCESS'\r\nexport const HTTP_GET_COMPANY_LIST_ALL_SUCCESS = 'HTTP_GET_COMPANT_LIST_ALL_SUCCESS'\r\nexport const HTTP_GET_COMPANY_LIST_CLEAR = 'HTTP_GET_COMPANT_LIST_CLEAR'\r\n\r\n\r\nexport const HTTP_HOME_SELECT_COMPANY_SUCCESS = 'HTTP_HOME_SELECT_COMPANY_SUCCESS'\r\nexport const HTTP_HOME_CLEAR_COMPANY = 'HTTP_HOME_CLEAR_COMPANY'\r\nexport const HTTP_GET_HOME_ALL_SUCCESS = 'HTTP_GET_HOME_ALL_SUCCESS'\r\nexport const HTTP_GET_HOME_CLEAR = 'HTTP_GET_HOME_CLEAR'\r\n\r\nexport const HTTP_VILLAGER_SELECT_COMPANY_SUCCESS = 'HTTP_VILLAGER_SELECT_COMPANY_SUCCESS'\r\nexport const HTTP_GET_VILLAGER_ALL_SUCCESS = 'HTTP_GET_VILLAGER_ALL_SUCCESS'\r\nexport const HTTP_VILLAGER_CLEAR_COMPANY = 'HTTP_VILLAGER_CLEAR_COMPANY'\r\nexport const HTTP_GET_VILLAGER_CLEAR = 'HTTP_GET_VILLAGER_CLEAR'\r\n\r\nexport const HTTP_GET_PRIVILEGE_ALL_SUCCESS = 'HTTP_GET_PRIVILEGE_ALL_SUCCESS'\r\nexport const HTTP_GET_PRIVILEGE_CLEAR = 'HTTP_GET_PRIVILEGE_CLEAR'\r\n\r\nexport const HTTP_GET_USER_LIST_ALL_SUCCESS = 'HTTP_GET_USER_LIST_ALL_SUCCESS'\r\nexport const HTTP_GET_USER_LIST_CLEAR = 'HTTP_GET_USER_LIST_CLEAR'\r\nexport const HTTP_SELECT_USER_SUCCESS = 'HTTP_SELECT_USER_SUCCESS'\r\nexport const HTTP_SELECT_USER_CLEAR = 'HTTP_SELECT_USER_CLEAR'\r\n\r\n\r\n","// export const MAIN_URL = 'https://admin.bannayuu.com/bannayuu/admin/api/v1'\r\nexport const MAIN_URL = `${window.origin}/bannayuu/admin/api/v1`\r\n// export const MAIN_URL = 'http://127.0.0.1:4501/bannayuu/admin/api/v1'\r\nexport const WEB_USER_MANAGEMENT_RESET_PASSWORD_URL = 'https://cit.bannayuu.com/reset'\r\nexport const LOGIN_API = '/authen/login'\r\nexport const CREATE_COMPANY_API = '/company/add'\r\nexport const GET_COMPANY_ALL_API = '/company/get-all'\r\nexport const GET_COMPANY_ALL_AND_NOT_CIT_COMPANY_API = '/company/get-companylist-all-not-cit-company'\r\nexport const GET_COMPANY_BYID_API = '/company/get-by-id'\r\nexport const EDIT_COMPANY_INFO_API = '/company/edit-info'\r\nexport const DISABLE_COMPANY_API = '/company/disable'\r\nexport const ENABLE_COMPANY_API = '/company/enable'\r\nexport const GET_COMPANY_LIST_ALL_API = '/company/get-companylist-all'\r\nexport const IMPORT_EXCEL_HOME_API = '/home/import-array'\r\nexport const GET_HOME_ALL_API = '/home/get-all'\r\nexport const IMPORT_EXCEL_VILLAGER_API = '/villager/import-array'\r\nexport const GET_VILLAGER_ALL_API = '/villager/get-all'\r\nexport const GET_PRIVILEGE_ALL_API = '/user/get-privilege'\r\nexport const CREATE_USER_API = '/user/create-user'\r\nexport const GET_USER_LIST_ALL_API = '/user/get-user'\r\nexport const GET_USER_IS_BELOW_MYSELF_ALL_API = '/user/get-user-is-below-myself'\r\nexport const GET_USER_BYID_API = '/user/get-userinfo-byid'\r\nexport const EDIT_USER_INFO_API = '/user/edit-userinfo'\r\nexport const RESET_PASSWORD_USER_API = '/user/reset-password'\r\nexport const CHANGE_PRIVILEGE_USER_API = '/user/change-privilege'\r\nexport const ADD_OR_DELETE_COMPANY_LIST_USER_API = '/user/addordelete-company-list'\r\nexport const CHANGE_MAIN_COMPANY_USER_API = '/user/change-main-company'","import axios from \"axios\";\r\n\r\nexport const httpClientGetMethod = async (props) => {\r\n    const { urlClient, valuesObj } = props\r\n    const access_token = valuesObj ? valuesObj.access_token : '';\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n    };\r\n    const url = urlClient;\r\n    return axios.get(url, config)\r\n        .then((res) => {\r\n            return res.data;\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n};\r\nexport const httpClientGetMethodWithPost = async (props) => {\r\n    const { urlClient, valuesObj, authStore } = props\r\n    const access_token = authStore ? authStore.access_token : '';\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n    };\r\n    const bodyParameters = {\r\n        ...valuesObj\r\n    };\r\n    const url = urlClient;\r\n    return axios.post(url, bodyParameters, config)\r\n        .then((res) => {\r\n            return res.data;\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n};\r\n//----------------------------Post\r\nexport const httpClientPOSTMethodNotAuth = async (props) => {\r\n    const { urlClient, valuesObj } = props;\r\n    const bodyParameters = {\r\n        ...valuesObj\r\n    };\r\n    const url = urlClient;\r\n    try {\r\n        const res = await axios.post(url, bodyParameters);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err)\r\n        return {\r\n            result: null,\r\n            error: true,\r\n            message: `เชื่อมต่อ API : ${url} ล้มเหลว`\r\n        };\r\n    }\r\n};\r\n\r\nexport const httpClientPOSTMethodVerifyAuth = async (props) => {\r\n    const { urlClient, valuesObj, authStore } = props;\r\n    const bodyParameters = {\r\n        ...valuesObj\r\n    };\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${authStore.access_token}` }\r\n    }\r\n    const url = urlClient;\r\n    try {\r\n        const res = await axios.post(url, bodyParameters, config);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err)\r\n        return {\r\n            result: null,\r\n            error: true,\r\n            message: `เชื่อมต่อ API : ${url} ล้มเหลว`\r\n        };\r\n    }\r\n};\r\n\r\nexport const httpClientPOSTMethodFormData = async (props) => {\r\n    var bodyFormData = new FormData();\r\n    const { urlClient, valuesObj, authStore } = props;\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${authStore.access_token}` }\r\n    }\r\n    const url = urlClient;\r\n    //-------------Setup data to body form-data\r\n    for (const [key, value] of Object.entries(valuesObj)) {\r\n        bodyFormData.append(key, value)\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(url, bodyFormData, config);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err)\r\n        return {\r\n            result: null,\r\n            error: true,\r\n            message: `เชื่อมต่อ API : ${url} ล้มเหลว`\r\n        };\r\n    }\r\n}\r\n","\r\n\r\nexport const MESSAGE_COMPANYCODE_NOTFOUND = \"กรุณากรอกรหัสโครงการ\"\r\nexport const MESSAGE_COMPANYNAME_NOTFOUND = \"กรุณากรอกชื่อโครงการ\"\r\nexport const MESSAGE_PRICEOFCARDLOST_NOTFOUND = \"กรุณากรอกค่าปรับบัตรหาย\"\r\nexport const MESSAGE_NOTSELECT_PRO_COMPANY = \"กรุณาเลือก Pro\"\r\n\r\nexport const MESSAGE_NOTSELECTIMAGE = \"กรุณาเลือกรูปภาพ\"\r\nexport const MESSAGE_FILE_IMAGE_INVALID = \"รูปภาพต้องเป็นประเภท .jpg .bmp .png เท่านั้น\" \r\n\r\nexport const MESSAGE_GET_COMPANY_ALL_FAILED = \"เรียกดูข้อมูลบริษัท ล้มเหลว\"\r\nexport const MESSAGE_REMARKNOTFOUND = \"กรุณากรอกเหตุผล\"\r\nexport const MESSAGE_EXCELROW_NOTFOUND = \"ข้อมูลในไฟล์ Excel จากต้องมากกว่า 1 แถว\"\r\nexport const MESSAGE_EXCELCOLUMN_NOTCOMPLETE = \"จำนวนคอลัมน์ไม่ถูกต้อง\"\r\nexport const MESSAGE_SUCCESS = \"เรียบร้อย\"\r\nexport const MESSAGE_COMPANYID_NOTFOUND = 'ทำรายการผิดพลาด เลือกโครงการใหม่อีกครั้ง'\r\nexport const MESSAGE_FIRST_NAME_NOTFOUND = 'กรุณากรอกชื่อ'\r\nexport const MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL = 'ชื่อ ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_LAST_NAME_NOTFOUND = 'กรุณากรอกนามสกุล'\r\nexport const MESSAGE_LAST_NAME_PROHIBIT_SPECIAL = 'นามสกุล ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_ADDRESS_PROHITBIT_SPECIAL = 'ที่อยู่ ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_MOBILE_NOT_NUMBER = 'เบอร์โทรศัพท์ต้องเป็นตัวเลขเท่านั้น'\r\nexport const MESSAGE_MOBILE_NOT_10_CHARACTER = 'เบอร์โทรศัพท์ต้องมี 10 ตัวอักษร'\r\nexport const MESSAGE_LINE_FORMAT_INVALID = 'รูปแบบไลน์ไม่ถูกต้อง'\r\nexport const MESSAGE_EMAIL_FORMAT_INVALID = 'รูปแบบอีเมลไม่ถูกต้อง'\r\nexport const MESSAGE_NOT_SELECT_PRIVILEGE = 'กรุณาเลือกสิทธิ์การเข้าใช้งานระบบ'\r\nexport const MESSAGE_USER_NOT_FOUND = 'กรุณากรอก Username'\r\nexport const MESSAGE_USER_NOT_END_OR_NUMBER = 'Username ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น'\r\nexport const MESSAGE_PASSWORD_NOT_FOUND = 'กรุณากรอก Password'\r\nexport const MESSAGE_PASSWORD_NOT_END_OR_NUMBER = 'Password ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น'\r\nexport const MESSAGE_PASSWORD_NOT_EQUAL = 'Password ไม่ตรงกัน'\r\nexport const MESSAGE_COMPANY_ID_NOTFOUND = 'กรุณาเลือกโครงการใหม่อีกครั้ง'\r\nexport const MESSAGE_REMARK_NOT_FOUND = 'กรุณากรอกเหตุผล'\r\nexport const MESSAGE_REMARK_SPECIAL = 'เหตุผล ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY  = 'โครงการใหม่ต้องไม่ซ้ำกับโครงการเดิม'\r\nexport const MESSAGE_NOT_SELECT_NEW_COMPANY = 'กรุณาเลือกโครงการใหม่'\r\nexport const MESSAGE_EMPLOYEE_ID_NOTFOUND = 'ไม่พบรหัสพนักงานกรุณาเลือกพนักงานใหม่อีกครั้ง'\r\nexport const MESSAGE_HOLDTIME_NOT_FOUND = 'ไม่พบเวลาที่จะต้อง Reset password กรุณาเลือกเวลา'","export function getExtension(filename) {\r\n    var parts = filename.split('.');\r\n    return parts[parts.length - 1];\r\n  }\r\n  \r\nexport function isImage(filename) {\r\n    var ext = getExtension(filename);\r\n    switch (ext.toLowerCase()) {\r\n      case 'jpg':\r\n      case 'bmp':\r\n      case 'png':\r\n        //etc\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_COMPANY_ALL_FETCHING,\r\n    HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_ALL_FAILED,\r\n    HTTP_GET_COMPANY_ALL_CLEARSTORE,\r\n    HTTP_GET_COMPANY_ALL_GETDATASUCCESS,\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYCODE_NOTFOUND,\r\n    MESSAGE_COMPANYNAME_NOTFOUND,\r\n    MESSAGE_PRICEOFCARDLOST_NOTFOUND,\r\n    MESSAGE_NOTSELECT_PRO_COMPANY,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_REMARKNOTFOUND,\r\n    MESSAGE_FILE_IMAGE_INVALID\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_COMPANY_ALL_API, GET_COMPANY_BYID_API, EDIT_COMPANY_INFO_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost, httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nexport const setGetCompanyAllFetching = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FETCHING\r\n})\r\n\r\nexport const setGetCompanyAllSuccess = (payload) => ({\r\n    type: HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setGetCompanyFailed = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FAILED\r\n})\r\n\r\nexport const setGetCompanyAllClearStore = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_CLEARSTORE\r\n})\r\n\r\nexport const setGetCompanyAllGetDataSuccess = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_GETDATASUCCESS\r\n})\r\n\r\n\r\nexport const GetCompanyAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        dispatch(setGetCompanyAllFetching());\r\n        const urlClient = `${MAIN_URL}${GET_COMPANY_ALL_API}`\r\n        const valuesObj = { ...credential }\r\n        const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            dispatch(setGetCompanyFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            if (result.result)\r\n                dispatch(setGetCompanyAllSuccess(result.result));\r\n            else\r\n                dispatch(setGetCompanyAllSuccess([]));\r\n            dispatch(setSuccess());\r\n        }\r\n    }\r\n}\r\n\r\nexport async function GetCompanyByID(dispatch, credential, authStore) {\r\n    dispatch(setFetching());\r\n    const urlClient = `${MAIN_URL}${GET_COMPANY_BYID_API}`\r\n    const valuesObj = { ...credential }\r\n    const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n    if (result.error) {\r\n        dispatch(setFailed());\r\n    } else\r\n        dispatch(setSuccess());\r\n    return result;\r\n}\r\n\r\nexport const EditCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (editCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${EDIT_COMPANY_INFO_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction editCompanyMiddleware(valuesObj) {\r\n    if (!valuesObj.company_code) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYCODE_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_name) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYNAME_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.price_of_cardloss) {\r\n        swal(\"Warning!\", MESSAGE_PRICEOFCARDLOST_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_promotion) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECT_PRO_COMPANY, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.remark) {\r\n        swal(\"Warning!\", MESSAGE_REMARKNOTFOUND, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}","import {\r\n    HTTP_FETCHING,\r\n    HTTP_SUCCESS,\r\n    HTTP_FAILED\r\n} from 'constants/constants.utils'\r\nimport { MAIN_URL } from 'constants/api-route'\r\nimport { httpClientGetMethod } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\nimport {setGetCompanyAllClearStore} from 'actions/company/company-edit.action'\r\n\r\nexport const setFetching = () => ({\r\n    type: HTTP_FETCHING\r\n})\r\n\r\nexport const setSuccess = () => ({\r\n    type: HTTP_SUCCESS,\r\n})\r\n\r\nexport const setFailed = () => ({\r\n    type: HTTP_FAILED\r\n})\r\n\r\nexport const checkJWTTOKENAction = (history,authStore) => {\r\n    const valuesObj = authStore.loginReducer.result;\r\n    return async dispatch => {\r\n        resetValuesAll(dispatch);\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}`\r\n        const result = await httpClientGetMethod({ urlClient,valuesObj })\r\n        if(!result){\r\n            dispatch(setFailed());\r\n            history.push('/page500');\r\n        }\r\n        else if(result.error){\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n            history.push('/login');\r\n        }else{\r\n            dispatch(setSuccess())\r\n        }\r\n    }\r\n}\r\n\r\nfunction resetValuesAll(dispatch){\r\n    //------reset store for company get all\r\n    dispatch(setGetCompanyAllClearStore());\r\n}","import {\r\n    HTTP_LOGIN_FETCHING,\r\n    HTTP_LOGIN_SUCCESS,\r\n    HTTP_LOGIN_FAILED,\r\n    HTTP_LOGIN_CLEARVALUES,\r\n} from '../../constants/constants.utils'\r\nimport { MAIN_URL, LOGIN_API } from '../../constants/api-route'\r\nimport { httpClientPOSTMethodNotAuth } from '../../utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\nimport {setFetching,setSuccess} from '../main/main.action'\r\nexport const setLoginFetching = () => ({\r\n    type: HTTP_LOGIN_FETCHING\r\n})\r\n\r\nexport const setLoginSuccess = (payload) => ({\r\n    type: HTTP_LOGIN_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setLoginFailed = () => ({\r\n    type: HTTP_LOGIN_FAILED\r\n})\r\n\r\nexport const setLoginClearStore = () => ({\r\n    type: HTTP_LOGIN_CLEARVALUES\r\n})\r\n\r\n\r\nexport const loginAction = (history, credential) => {\r\n    return async dispatch => {\r\n        dispatch(setLoginFetching());\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${LOGIN_API}`\r\n        const valuesObj = { ...credential }\r\n        const result = await httpClientPOSTMethodNotAuth({ urlClient, valuesObj })\r\n        if(result.error){\r\n            dispatch(setLoginFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        }else{\r\n            dispatch(setLoginSuccess(result.result))\r\n            history.push('/main');\r\n        }\r\n        dispatch(setSuccess());\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    HTTP_LOGOUT_FETCHING,\r\n    HTTP_LOGOUT_SUCCESS,\r\n} from '../../constants/constants.utils'\r\nexport const setLogoutFetching = () => ({\r\n    type: HTTP_LOGOUT_FETCHING\r\n})\r\n\r\nexport const setLogoutSuccess = () => ({\r\n    type: HTTP_LOGOUT_SUCCESS\r\n})\r\n\r\n\r\nexport const logoutAction = (history) => {\r\n    return async dispatch => {\r\n        dispatch(setLogoutFetching());\r\n        history.push('/login');\r\n        dispatch(setLogoutSuccess())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// @material-ui/icons\r\nimport Person from \"@material-ui/icons/Person\";\r\n// import Notifications from \"@material-ui/icons/Notifications\";\r\n// import Dashboard from \"@material-ui/icons/Dashboard\";\r\n// import Search from \"@material-ui/icons/Search\";\r\n// core components\r\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\r\nimport { connect } from 'react-redux'\r\nimport { setLoginClearStore } from '../../actions/login/login.action'\r\nimport { logoutAction } from '../../actions/logout/logout.action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction AdminNavbarLinks() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  // const [openNotification, setOpenNotification] = React.useState(null);\r\n  const [openProfile, setOpenProfile] = React.useState(null);\r\n  // const handleClickNotification = (event) => {\r\n  //   if (openNotification && openNotification.contains(event.target)) {\r\n  //     setOpenNotification(null);\r\n  //   } else {\r\n  //     setOpenNotification(event.currentTarget);\r\n  //   }\r\n  // };\r\n  // const handleCloseNotification = () => {\r\n  //   setOpenNotification(null);\r\n  // };\r\n  const handleClickProfile = (event) => {\r\n    if (openProfile && openProfile.contains(event.target)) {\r\n      setOpenProfile(null);\r\n    } else {\r\n      setOpenProfile(event.currentTarget);\r\n    }\r\n  };\r\n  const handleCloseProfile = () => {\r\n    setOpenProfile(null);\r\n  };\r\n  const onLogOutClick = () => {\r\n    dispatch(logoutAction(history));\r\n    dispatch(setLoginClearStore());\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.searchWrapper}>\r\n        {/* <CustomInput\r\n          formControlProps={{\r\n            className: classes.margin + \" \" + classes.search,\r\n          }}\r\n          inputProps={{\r\n            placeholder: \"Search\",\r\n            inputProps: {\r\n              \"aria-label\": \"Search\",\r\n            },\r\n          }}\r\n        /> */}\r\n        {/* <Button color=\"white\" aria-label=\"edit\" justIcon round>\r\n          <Search />\r\n        </Button> */}\r\n      </div>\r\n      {/* <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Dashboard\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Dashboard className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>Dashboard</p>\r\n        </Hidden>\r\n      </Button> */}\r\n     \r\n      <div className={classes.manager}>\r\n        <Button\r\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n          justIcon={window.innerWidth > 959}\r\n          simple={!(window.innerWidth > 959)}\r\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClickProfile}\r\n          className={classes.buttonLink}\r\n        >\r\n          <Person className={classes.icons} />\r\n          <Hidden mdUp implementation=\"css\">\r\n            <p className={classes.linkText}>Profile</p>\r\n          </Hidden>\r\n        </Button>\r\n        <Poppers\r\n          open={Boolean(openProfile)}\r\n          anchorEl={openProfile}\r\n          transition\r\n          disablePortal\r\n          className={\r\n            classNames({ [classes.popperClose]: !openProfile }) +\r\n            \" \" +\r\n            classes.popperNav\r\n          }\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              id=\"profile-menu-list-grow\"\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener\r\n                  onClickAway={handleCloseProfile}\r\n                >\r\n                  <MenuList role=\"menu\">\r\n                    <MenuItem\r\n                      // onClick={handleCloseProfile}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Profile\r\n                    </MenuItem>\r\n                    <Divider light />\r\n                    <MenuItem\r\n                      onClick={onLogOutClick}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Logout\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Poppers>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({ logoutReducer }) => ({ logoutReducer })\r\n\r\nconst mapDispatchToProps = {\r\n  logoutAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbarLinks);","import {\r\n  primaryColor,\r\n  dangerColor,\r\n  successColor,\r\n  grayColor,\r\n  defaultFont,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst customInputStyle = {\r\n  disabled: {\r\n    \"&:before\": {\r\n      backgroundColor: \"transparent !important\",\r\n    },\r\n  },\r\n  underline: {\r\n    \"&:hover:not($disabled):before,&:before\": {\r\n      borderColor: grayColor[4] + \" !important\",\r\n      borderWidth: \"1px !important\",\r\n    },\r\n    \"&:after\": {\r\n      borderColor: primaryColor[0],\r\n    },\r\n  },\r\n  underlineError: {\r\n    \"&:after\": {\r\n      borderColor: dangerColor[0],\r\n    },\r\n  },\r\n  underlineSuccess: {\r\n    \"&:after\": {\r\n      borderColor: successColor[0],\r\n    },\r\n  },\r\n  labelRoot: {\r\n    ...defaultFont,\r\n    color: grayColor[3] + \" !important\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"14px\",\r\n    lineHeight: \"1.42857\",\r\n    letterSpacing: \"unset\",\r\n  },\r\n  labelRootError: {\r\n    color: dangerColor[0],\r\n  },\r\n  labelRootSuccess: {\r\n    color: successColor[0],\r\n  },\r\n  feedback: {\r\n    position: \"absolute\",\r\n    top: \"18px\",\r\n    right: \"0\",\r\n    zIndex: \"2\",\r\n    display: \"block\",\r\n    width: \"24px\",\r\n    height: \"24px\",\r\n    textAlign: \"center\",\r\n    pointerEvents: \"none\",\r\n  },\r\n  marginTop: {\r\n    marginTop: \"16px\",\r\n  },\r\n  formControl: {\r\n    paddingBottom: \"10px\",\r\n    margin: \"27px 0 0 0\",\r\n    position: \"relative\",\r\n    verticalAlign: \"unset\",\r\n  },\r\n  labelRTL: {\r\n    right: 0,\r\n    transition: \"all 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\r\n    \"&.MuiInputLabel-shrink\": {\r\n      transform: \"translate(0, 1.5px)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default customInputStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n// @material-ui/icons\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomInput(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    formControlProps,\r\n    labelText,\r\n    id,\r\n    labelProps,\r\n    inputProps,\r\n    error,\r\n    success,\r\n    rtlActive,\r\n  } = props;\r\n\r\n  const labelClasses = classNames({\r\n    [\" \" + classes.labelRootError]: error,\r\n    [\" \" + classes.labelRootSuccess]: success && !error,\r\n    [\" \" + classes.labelRTL]: rtlActive,\r\n  });\r\n  const underlineClasses = classNames({\r\n    [classes.underlineError]: error,\r\n    [classes.underlineSuccess]: success && !error,\r\n    [classes.underline]: true,\r\n  });\r\n  const marginTop = classNames({\r\n    [classes.marginTop]: labelText === undefined,\r\n  });\r\n  let newInputProps = {\r\n    maxLength:\r\n      inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\r\n    minLength:\r\n      inputProps && inputProps.minLength ? inputProps.minLength : undefined,\r\n    step: inputProps && inputProps.step ? inputProps.step : undefined,\r\n  };\r\n  return (\r\n    <FormControl\r\n      {...formControlProps}\r\n      className={formControlProps.className + \" \" + classes.formControl}\r\n    >\r\n      {labelText !== undefined ? (\r\n        <InputLabel\r\n          className={classes.labelRoot + labelClasses}\r\n          htmlFor={id}\r\n          {...labelProps}\r\n        >\r\n          {labelText}\r\n        </InputLabel>\r\n      ) : null}\r\n      <Input\r\n        classes={{\r\n          root: marginTop,\r\n          disabled: classes.disabled,\r\n          underline: underlineClasses,\r\n        }}\r\n        id={id}\r\n        {...inputProps}\r\n        inputProps={newInputProps}\r\n      />\r\n      {error ? (\r\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\r\n      ) : success ? (\r\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\r\n      ) : null}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  labelText: PropTypes.node,\r\n  labelProps: PropTypes.object,\r\n  id: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  formControlProps: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  success: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n};\r\n","import {\r\n  defaultFont,\r\n  dangerColor,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\r\n\r\nconst headerLinksStyle = (theme) => ({\r\n  ...dropdownStyle(theme),\r\n  search: {\r\n    \"& > div\": {\r\n      marginTop: \"0\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"10px 15px !important\",\r\n      float: \"none !important\",\r\n      paddingTop: \"1px\",\r\n      paddingBottom: \"1px\",\r\n      padding: \"0!important\",\r\n      width: \"60%\",\r\n      marginTop: \"40px\",\r\n      \"& input\": {\r\n        color: whiteColor,\r\n      },\r\n    },\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n    margin: \"0px\",\r\n  },\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      margin: \"10px 15px 0\",\r\n      width: \"-webkit-fill-available\",\r\n      \"& svg\": {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& > span\": {\r\n        justifyContent: \"flex-start\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  },\r\n  searchButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"-50px !important\",\r\n      marginRight: \"22px\",\r\n      float: \"right\",\r\n    },\r\n  },\r\n  margin: {\r\n    zIndex: \"4\",\r\n    margin: \"0\",\r\n  },\r\n  searchIcon: {\r\n    width: \"17px\",\r\n    zIndex: \"4\",\r\n  },\r\n  notifications: {\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      top: \"2px\",\r\n      border: \"1px solid \" + whiteColor,\r\n      right: \"4px\",\r\n      fontSize: \"9px\",\r\n      background: dangerColor[0],\r\n      color: whiteColor,\r\n      minWidth: \"16px\",\r\n      height: \"16px\",\r\n      borderRadius: \"10px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"16px\",\r\n      verticalAlign: \"middle\",\r\n      display: \"block\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      ...defaultFont,\r\n      fontSize: \"14px\",\r\n      marginRight: \"8px\",\r\n    },\r\n  },\r\n  manager: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n  searchWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"-webkit-fill-available\",\r\n      margin: \"10px 15px 0\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\nexport default headerLinksStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\n// @material-ui/icons\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Notifications from \"@material-ui/icons/Notifications\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Search from \"@material-ui/icons/Search\";\r\n// core components\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function RTLNavbarLinks() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(null);\r\n  const handleToggle = (event) => {\r\n    if (open && open.contains(event.target)) {\r\n      setOpen(null);\r\n    } else {\r\n      setOpen(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.searchWrapper}>\r\n        <CustomInput\r\n          formControlProps={{\r\n            className: classes.margin + \" \" + classes.search,\r\n          }}\r\n          inputProps={{\r\n            placeholder: \"جستجو...\",\r\n            inputProps: {\r\n              \"aria-label\": \"Search\",\r\n            },\r\n          }}\r\n        />\r\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\r\n          <Search />\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Dashboard\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Dashboard className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>آمارها</p>\r\n        </Hidden>\r\n      </Button>\r\n      <div className={classes.manager}>\r\n        <Button\r\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n          justIcon={window.innerWidth > 959}\r\n          simple={!(window.innerWidth > 959)}\r\n          aria-owns={open ? \"menu-list-grow\" : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n          className={classes.buttonLink}\r\n        >\r\n          <Notifications className={classes.icons} />\r\n          <span className={classes.notifications}>۵</span>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <p onClick={handleToggle} className={classes.linkText}>\r\n              اعلان‌ها\r\n            </p>\r\n          </Hidden>\r\n        </Button>\r\n        <Poppers\r\n          open={Boolean(open)}\r\n          anchorEl={open}\r\n          transition\r\n          disablePortal\r\n          className={\r\n            classNames({ [classes.popperClose]: !open }) +\r\n            \" \" +\r\n            classes.popperNav\r\n          }\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              id=\"menu-list-grow\"\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList role=\"menu\">\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      محمدرضا به ایمیل شما پاسخ داد\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      شما ۵ وظیفه جدید دارید\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      از حالا شما با علیرضا دوست هستید\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      اعلان دیگر\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      اعلان دیگر\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Poppers>\r\n      </div>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Person\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Person className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>حساب کاربری</p>\r\n        </Hidden>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"../../actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nfunction MainPage() {\r\n    const authStore = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    function loadMainForm() {\r\n        const valuesObj = authStore.loginReducer.result;\r\n        if (!valuesObj) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, authStore));\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Main</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","export const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    }\r\n  };\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    padding: \"0 15px !important\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridItem(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    margin: \"0 -15px !important\",\r\n    width: \"unset\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridContainer(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid container {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n  blackColor,\r\n  whiteColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardStyle = {\r\n  card: {\r\n    border: \"0\",\r\n    marginBottom: \"30px\",\r\n    marginTop: \"30px\",\r\n    borderRadius: \"6px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor,\r\n    width: \"100%\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"0\",\r\n    wordWrap: \"break-word\",\r\n    fontSize: \".875rem\",\r\n  },\r\n  cardPlain: {\r\n    background: \"transparent\",\r\n    boxShadow: \"none\",\r\n  },\r\n  cardProfile: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\",\r\n  },\r\n  cardChart: {\r\n    \"& p\": {\r\n      marginTop: \"0px\",\r\n      paddingTop: \"0px\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default cardStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Card(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, chart, ...rest } = props;\r\n  const cardClasses = classNames({\r\n    [classes.card]: true,\r\n    [classes.cardPlain]: plain,\r\n    [classes.cardProfile]: profile,\r\n    [classes.cardChart]: chart,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardHeaderStyle = {\r\n  cardHeader: {\r\n    padding: \"0.75rem 1.25rem\",\r\n    marginBottom: \"0\",\r\n    borderBottom: \"none\",\r\n    background: \"transparent\",\r\n    zIndex: \"3 !important\",\r\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      margin: \"0 15px\",\r\n      padding: \"0\",\r\n      position: \"relative\",\r\n      color: whiteColor,\r\n    },\r\n    \"&:first-child\": {\r\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\",\r\n    },\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      \"&:not($cardHeaderIcon)\": {\r\n        borderRadius: \"3px\",\r\n        marginTop: \"-20px\",\r\n        padding: \"15px\",\r\n      },\r\n    },\r\n    \"&$cardHeaderStats svg\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      textAlign: \"center\",\r\n      width: \"36px\",\r\n      height: \"36px\",\r\n      margin: \"10px 10px 4px\",\r\n    },\r\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      width: \"56px\",\r\n      height: \"56px\",\r\n      textAlign: \"center\",\r\n      overflow: \"unset\",\r\n      marginBottom: \"1px\",\r\n    },\r\n    \"&$cardHeaderStats$cardHeaderIcon\": {\r\n      textAlign: \"right\",\r\n    },\r\n  },\r\n  cardHeaderPlain: {\r\n    marginLeft: \"0px !important\",\r\n    marginRight: \"0px !important\",\r\n  },\r\n  cardHeaderStats: {\r\n    \"& $cardHeaderIcon\": {\r\n      textAlign: \"right\",\r\n    },\r\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n      margin: \"0 !important\",\r\n    },\r\n  },\r\n  cardHeaderIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      background: \"transparent\",\r\n      boxShadow: \"none\",\r\n    },\r\n    \"& i,& .material-icons\": {\r\n      width: \"33px\",\r\n      height: \"33px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n    },\r\n    \"& svg\": {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n      margin: \"5px 4px 0px\",\r\n    },\r\n  },\r\n  warningCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...warningCardHeader,\r\n    },\r\n  },\r\n  successCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...successCardHeader,\r\n    },\r\n  },\r\n  dangerCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...dangerCardHeader,\r\n    },\r\n  },\r\n  infoCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...infoCardHeader,\r\n    },\r\n  },\r\n  primaryCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...primaryCardHeader,\r\n    },\r\n  },\r\n  roseCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...roseCardHeader,\r\n    },\r\n  },\r\n};\r\n\r\nexport default cardHeaderStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardHeader(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, plain, stats, icon, ...rest } = props;\r\n  const cardHeaderClasses = classNames({\r\n    [classes.cardHeader]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [classes.cardHeaderPlain]: plain,\r\n    [classes.cardHeaderStats]: stats,\r\n    [classes.cardHeaderIcon]: icon,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardHeaderClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\",\r\n  ]),\r\n  plain: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","const cardBodyStyle = {\r\n  cardBody: {\r\n    padding: \"0.9375rem 20px\",\r\n    flex: \"1 1 auto\",\r\n    WebkitBoxFlex: \"1\",\r\n    position: \"relative\",\r\n  },\r\n  cardBodyPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\",\r\n  },\r\n  cardBodyProfile: {\r\n    marginTop: \"15px\",\r\n  },\r\n};\r\n\r\nexport default cardBodyStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardBody(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, ...rest } = props;\r\n  const cardBodyClasses = classNames({\r\n    [classes.cardBody]: true,\r\n    [classes.cardBodyPlain]: plain,\r\n    [classes.cardBodyProfile]: profile,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardBodyClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardBody.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","import { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardFooterStyle = {\r\n  cardFooter: {\r\n    padding: \"0\",\r\n    paddingTop: \"10px\",\r\n    margin: \"0 15px 10px\",\r\n    borderRadius: \"0\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    backgroundColor: \"transparent\",\r\n    border: \"0\",\r\n  },\r\n  cardFooterProfile: {\r\n    marginTop: \"-15px\",\r\n  },\r\n  cardFooterPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  cardFooterStats: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n    marginTop: \"20px\",\r\n    \"& svg\": {\r\n      position: \"relative\",\r\n      top: \"4px\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\",\r\n      width: \"16px\",\r\n      height: \"16px\",\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n      fontSize: \"16px\",\r\n      position: \"relative\",\r\n      top: \"4px\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\",\r\n    },\r\n  },\r\n  cardFooterChart: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n};\r\n\r\nexport default cardFooterStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardFooterStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardFooter(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, stats, chart, ...rest } = props;\r\n  const cardFooterClasses = classNames({\r\n    [classes.cardFooter]: true,\r\n    [classes.cardFooterPlain]: plain,\r\n    [classes.cardFooterProfile]: profile,\r\n    [classes.cardFooterStats]: stats,\r\n    [classes.cardFooterChart]: chart,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardFooterClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardFooter.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n// import InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport moment from 'moment'\r\nfunction DateMaterialUi(props) {\r\n    const {\r\n        title,\r\n        selectedDate,\r\n        setSelectedDate\r\n    } = props;\r\n    \r\n    // function filterWeekends(date) {\r\n    //     // Return false if Saturday or Sunday\r\n    //     return date.getDay() === 0 || date.getDay() === 6;\r\n    // }\r\n    const currentTime = moment(selectedDate);\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <FormLabel style={{ color: \"#AAAAAA\" }}>{title}</FormLabel><br></br>\r\n            <KeyboardDatePicker\r\n                format=\"dd/MM/yyyy\"\r\n                label=\"\"\r\n                value={currentTime}\r\n                onChange={setSelectedDate}\r\n                ampm={false}\r\n                // shouldDisableDate={filterWeekends}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n\r\nexport default DateMaterialUi;","import { useState } from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { styles } from './SelectBox-style';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles(styles);\r\nfunction SelectBox(props) {\r\n    const {\r\n        title,\r\n        setValue,\r\n        value,\r\n        items\r\n    } = props;\r\n    //----------------Create Style\r\n    const classes = useStyles();\r\n    //----------------Set Age\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    //---------------Create selectbox element\r\n    let itemsSelectElem = null;\r\n    if (items.length > 0) {\r\n       \r\n        itemsSelectElem = items.map(item=>{\r\n            return <MenuItem key={item.value} value={item.value}>{item.text}</MenuItem>\r\n        })\r\n    }\r\n    return (\r\n        <FormControl className={classes.formControlSelectBox}>\r\n            <InputLabel id=\"demo-controlled-open-select-label\">{title}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n\r\n                <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                </MenuItem>\r\n                {itemsSelectElem}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default SelectBox;","export const styles = {\r\n     formControlSelectBox: {\r\n        margin: \"0px\",\r\n        minWidth: 200,\r\n        width:\"100%\"\r\n      },\r\n  };\r\n","export const itemSelectBoxs = [\r\n    {\r\n        value: \"STANDARD\"\r\n        , text: \"Standard\"\r\n    },{\r\n        value: \"PRO\"\r\n        , text: \"Pro\"\r\n    },{\r\n        value: \"PROPLUS\"\r\n        , text: \"Pro plus\"\r\n    }\r\n]\r\n\r\nexport const itemRadioBoxs = [\r\n    {\r\n        value: \"true\"\r\n        , text: \"จอดฟรีแยกตามวันนั้นๆ\"\r\n    },{\r\n        value: \"false\"\r\n        , text: \"จอดฟรีเฉพาะวันแรกที่จอดวันเดียวเท่านั้น\"\r\n    }\r\n]","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  grayColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardIconStyle = {\r\n  cardIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      borderRadius: \"3px\",\r\n      backgroundColor: grayColor[0],\r\n      padding: \"15px\",\r\n      marginTop: \"-20px\",\r\n      marginRight: \"15px\",\r\n      float: \"left\",\r\n    },\r\n  },\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n};\r\n\r\nexport default cardIconStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardIconStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardIcon(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, ...rest } = props;\r\n  const cardIconClasses = classNames({\r\n    [classes.cardIcon]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardIconClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\",\r\n  ]),\r\n  children: PropTypes.node,\r\n};\r\n","import Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nfunction CheckBox(props) {\r\n    const { setCheck, check, title } = props;\r\n    const handleChange = (event) => {\r\n        setCheck(event.target.checked);\r\n      };\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    checked={check}\r\n                    onChange={handleChange}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n            label={title}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CheckBox;","import Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nfunction RadioBox(props) {\r\n    const { title, value, setCheck, items } = props;\r\n    const handleChange = (event) => {\r\n        setCheck(event.target.value);\r\n    };\r\n    //------------Create Item Elemment\r\n    let radioItemsElem = null;\r\n    if (items.length > 0) {\r\n        radioItemsElem = items.map(item => {\r\n            return <FormControlLabel key={item.value} value={item.value} control={<Radio />} label={item.text} />\r\n        })\r\n    }\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">{title}</FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n                        {radioItemsElem}\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default RadioBox;","import 'date-fns';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nfunction InputFile(props) {\r\n    const {\r\n        title,\r\n        value,\r\n        setValue\r\n    } = props;\r\n    //------------------\r\n    return (\r\n        <div>\r\n            <FormLabel style={{ color: \"#AAAAAA\" }}>{title}</FormLabel>\r\n            <CustomInput\r\n                labelText=\"\"\r\n                id=\"file-select\"\r\n                formControlProps={{\r\n                    fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                    type: \"file\",\r\n                    accept: \"image/png, image/jpeg\",\r\n\r\n                    value: value,\r\n                    onChange: event=>setValue(event.target.files.item(0))\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputFile;","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CREATE_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport {\r\n    MESSAGE_COMPANYCODE_NOTFOUND,\r\n    MESSAGE_COMPANYNAME_NOTFOUND,\r\n    MESSAGE_PRICEOFCARDLOST_NOTFOUND,\r\n    MESSAGE_NOTSELECT_PRO_COMPANY,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n} from 'constants/message.constant'\r\nimport swal from 'sweetalert';\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nexport const CreateCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (createCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CREATE_COMPANY_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction createCompanyMiddleware(valuesObj) {\r\n    if (!valuesObj.company_code) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYCODE_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_name) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYNAME_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.price_of_cardloss) {\r\n        swal(\"Warning!\", MESSAGE_PRICEOFCARDLOST_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_promotion) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECT_PRO_COMPANY, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    }else if(!isImage(getExtension(valuesObj.image.name))){\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n","import { styles } from \"./Company-style\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport DateMaterialUi from \"components/DateTime/DateMaterialUi\";\r\nimport SelectBox from \"components/Select/SelectBox\";\r\nimport moment from \"moment\";\r\nimport { itemSelectBoxs, itemRadioBoxs } from \"../data/Company-data\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport CheckBox from \"components/CheckBox/CheckBox\";\r\nimport RadioBox from \"components/RadioBox/RadioBox\";\r\nimport InputFile from \"components/Input/InputFile\";\r\nimport { CreateCompanyAction } from \"actions/company/company-add.action\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction CompanyAdd() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const Store = useSelector((state) => state);\r\n  //----------Set default value\r\n  const dStart = moment();\r\n  const dEnd = moment().add(30, \"days\");\r\n  //----------State\r\n  const [dateStart, setDateStart] = useState(dStart);\r\n  const [dateEnd, setDateEnd] = useState(dEnd);\r\n  const [promotion, setPromotion] = useState(\"\");\r\n  const [checkCal, setCheckCal] = useState(false);\r\n  const [checkSecureEstampVisitor, setCheckSecureEstampVisitor] = useState(\r\n    false\r\n  );\r\n  const [checkSecureEstampBooking, setCheckSecureEstampBooking] = useState(\r\n    false\r\n  );\r\n  const [\r\n    checkLineNotificationBoardcast,\r\n    setCheckLineNotificationBoardcast,\r\n  ] = useState(true);\r\n  const [selectExceptDay, setSelectExceptDay] = useState(\"true\");\r\n  const [image, setImage] = useState(null);\r\n  const [companyInfo, setCompanyInfo] = useState({\r\n    company_code: \"\",\r\n    company_name: \"\",\r\n    price_of_cardloss: \"\",\r\n  });\r\n  //-----------------Form load\r\n  useEffect(() => {\r\n    loadMainForm();\r\n  }, []);\r\n  function loadMainForm() {\r\n    const authStore = Store.loginReducer.result;\r\n    if (!authStore) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(checkJWTTOKENAction(history, Store));\r\n    }\r\n  }\r\n  //-----------------Date Handing\r\n  function handdingDateStart(date) {\r\n    if (moment(date) > moment(dateEnd)) {\r\n      const newMoment = moment(date).add(1, \"days\");\r\n      setDateStart(date);\r\n      setDateEnd(newMoment);\r\n    } else setDateStart(date);\r\n  }\r\n  function handdingDateEnd(date) {\r\n    if (moment(date) < moment(dateStart)) {\r\n      const newMoment = moment(date).subtract(1, \"days\");\r\n      setDateStart(newMoment);\r\n      setDateEnd(date);\r\n    } else setDateEnd(date);\r\n  }\r\n  //----------------On Create\r\n  function onCreateClick() {\r\n    dispatch(\r\n      CreateCompanyAction(\r\n        history,\r\n        {\r\n          company_code: companyInfo.company_code,\r\n          company_name: companyInfo.company_name,\r\n          price_of_cardloss: companyInfo.price_of_cardloss.toString(),\r\n          company_start_date: moment(dateStart)\r\n            .set({ hour: 0, minute: 0, second: 0 })\r\n            .format(\"yyyy-MM-DD HH:mm:ss\"),\r\n          company_expire_date: moment(dateEnd)\r\n            .set({ hour: 0, minute: 0, second: 0 })\r\n            .format(\"yyyy-MM-DD HH:mm:ss\"),\r\n          company_promotion: promotion,\r\n          calculate_enable: checkCal,\r\n          except_time_split_from_day: selectExceptDay === \"true\" ? true : false,\r\n          booking_estamp_verify: checkSecureEstampVisitor,\r\n          visitor_estamp_verify: checkSecureEstampBooking,\r\n          line_notification_broadcast: checkLineNotificationBoardcast,\r\n          image,\r\n        },\r\n        Store.loginReducer.result\r\n      )\r\n    );\r\n  }\r\n  //----------------------------------------------------\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={10}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>สร้างโครงการใหม่</h4>\r\n              <p className={classes.cardCategoryWhite}>Create new company</p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={3}>\r\n                  <CustomInput\r\n                    labelText=\"รหัสโครงการ\"\r\n                    id=\"comp-code\"\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      maxLength: \"15\",\r\n                      value: companyInfo.company_code,\r\n                      onChange: (event) =>\r\n                        setCompanyInfo({\r\n                          ...companyInfo,\r\n                          company_code: event.target.value,\r\n                        }),\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <CustomInput\r\n                    labelText=\"ชื่อโครงการ\"\r\n                    id=\"comp-name-th\"\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      maxLength: \"255\",\r\n                      value: companyInfo.company_name,\r\n                      onChange: (event) =>\r\n                        setCompanyInfo({\r\n                          ...companyInfo,\r\n                          company_name: event.target.value,\r\n                        }),\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={6}>\r\n                  <InputFile title=\"เลือกรูปภาพใบ PO\" setValue={setImage} />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <br></br>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                  <DateMaterialUi\r\n                    title=\"วันที่เริ่มเปิดให้บริการ\"\r\n                    selectedDate={dateStart}\r\n                    setSelectedDate={handdingDateStart}\r\n                  />\r\n                </GridItem>\r\n                <br></br>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                  <DateMaterialUi\r\n                    title=\"วันทีหยุดให้บริการ\"\r\n                    selectedDate={dateEnd}\r\n                    setSelectedDate={handdingDateEnd}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                  <SelectBox\r\n                    title=\"เลือก Pro\"\r\n                    setValue={setPromotion}\r\n                    value={promotion}\r\n                    items={itemSelectBoxs}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <br></br>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <Card>\r\n                    <CardHeader color=\"warning\" stats icon>\r\n                      <CardIcon color=\"warning\">\r\n                        <Icon>request_page</Icon>\r\n                      </CardIcon>\r\n                      <p className={classes.cardCategory}>Calculate Setup</p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkCal}\r\n                            setCheck={setCheckCal}\r\n                            title=\"เปิดระบบคิดเงิน\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <RadioBox\r\n                            title=\"เลือกการคำนวนเวลาจอดฟรี\"\r\n                            value={selectExceptDay}\r\n                            setCheck={setSelectExceptDay}\r\n                            items={itemRadioBoxs}\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={3}>\r\n                          <CustomInput\r\n                            labelText=\"ค่าปรับบัตรหาย\"\r\n                            id=\"setup-cardlost\"\r\n                            formControlProps={{\r\n                              fullWidth: false,\r\n                            }}\r\n                            inputProps={{\r\n                              maxLength: \"5\",\r\n                              value: companyInfo.price_of_cardloss,\r\n                              onChange: (event) =>\r\n                                setCompanyInfo({\r\n                                  ...companyInfo,\r\n                                  price_of_cardloss: event.target.value,\r\n                                }),\r\n                            }}\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                    </CardBody>\r\n                  </Card>\r\n                </GridItem>\r\n              </GridContainer>\r\n              <br></br>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <Card>\r\n                    <CardHeader color=\"info\" stats icon>\r\n                      <CardIcon color=\"info\">\r\n                        <Icon>admin_panel_settings</Icon>\r\n                      </CardIcon>\r\n                      <p className={classes.cardCategory}>Security Setup</p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkLineNotificationBoardcast}\r\n                            setCheck={setCheckLineNotificationBoardcast}\r\n                            title=\"เปิด Boardcast Line Notification\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkSecureEstampVisitor}\r\n                            setCheck={setCheckSecureEstampVisitor}\r\n                            title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Visitor ทั่วไป)\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkSecureEstampBooking}\r\n                            setCheck={setCheckSecureEstampBooking}\r\n                            title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Booking หรือจากการจอง)\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <p style={{ color: \"red\" }}>\r\n                        ***เป็นการตรวจสอบว่าผู้มาเยือนได้ถูกประทับตรา (E-Stamp)\r\n                        จากลูกบ้านที่มาติดต่อ หรือจากฝ่ายนิติบุคคลแล้ว หรือไม่\r\n                      </p>\r\n                    </CardBody>\r\n                  </Card>\r\n                </GridItem>\r\n              </GridContainer>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button color=\"success\" onClick={onCreateClick}>\r\n                สร้างโครงการใหม่\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer });\r\n\r\nconst mapDispatchToProps = {\r\n  CreateCompanyAction,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyAdd);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nexport default function TableCustom(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTableCustom.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n","export function createData(company_id, company_code, company_name, company_promotion, status) {\r\n    return { company_id, company_code, company_name, company_promotion, status };\r\n}\r\n\r\nexport function addRow(valueObjArr) {\r\n    return valueObjArr.map(item => {\r\n        return createData(\r\n            item.company_id,\r\n            item.company_code,\r\n            item.company_name,\r\n            item.company_promotion,\r\n            item.status\r\n        )\r\n    })\r\n}\r\n\r\nexport const headerTable = {\r\n    company_id: \"\",\r\n    company_code: \"รหัสโครงการ\",\r\n    company_name: \"ชื่อโครงการ\",\r\n    company_promotion: \"โปร\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\nexport const itemSelectBoxs = [\r\n    {\r\n        value: \"STANDARD\"\r\n        , text: \"Standard\"\r\n    }, {\r\n        value: \"PRO\"\r\n        , text: \"Pro\"\r\n    }, {\r\n        value: \"PROPLUS\"\r\n        , text: \"Pro plus\"\r\n    }\r\n]\r\n\r\nexport const itemRadioBoxs = [\r\n    {\r\n        value: \"true\"\r\n        , text: \"จอดฟรีแยกตามวันนั้นๆ\"\r\n    }, {\r\n        value: \"false\"\r\n        , text: \"จอดฟรีเฉพาะวันแรกที่จอดวันเดียวเท่านั้น\"\r\n    }\r\n]\r\n\r\nexport const getStatus = (status) => {\r\n    switch (status) {\r\n        case \"NORMAL\":\r\n            return \"สถานะพร้อมใช้งาน\";\r\n        case \"EXPIRE\":\r\n            return \"สถานะหมดอายุ\";\r\n        case \"NOTOPEN\":\r\n            return \"สถานะยังไม่เปิดให้บริการ\"\r\n        default:\r\n            return \"สถานะระงับการให้บริการ\";\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      maxWidth: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  }));","import React, { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useStyles } from './ButtonSearchStyle';\r\n\r\n\r\nfunction ButtonSearch(props) {\r\n    const { placeholder, searchFunc } = props\r\n    const classes = useStyles();\r\n    const [text, setText] = useState(\"\");\r\n    function onSearchClick(e) {\r\n        e.preventDefault();\r\n        searchFunc(text);\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={placeholder}\r\n                inputProps={\r\n                    {\r\n                        'aria-label': {placeholder},\r\n                        onChange: event => setText(event.target.value)\r\n                    }}\r\n\r\n            />\r\n            <IconButton type=\"submit\"\r\n                className={classes.iconButton}\r\n                aria-label=\"search\"\r\n                onClick={onSearchClick}\r\n            >\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    )\r\n}\r\nexport default ButtonSearch;","export const editCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}","// import Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deepOrange, green, grey, red,yellow } from '@material-ui/core/colors';\r\nconst useStyles = makeStyles((theme) => ({\r\n    square: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    }, normalStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#fff',\r\n        backgroundColor: green[500]\r\n    }, expireStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#fff',\r\n        backgroundColor: red[500]\r\n    }, disableStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#fff',\r\n        backgroundColor: grey[500]\r\n    }, notopenStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#000',\r\n        backgroundColor: yellow[500]\r\n    }\r\n}));\r\n\r\nfunction AvatarForm(props) {\r\n    const classes = useStyles();\r\n    const { text, status } = props;\r\n    const getStyle = (item) => {\r\n        switch (item) {\r\n            case \"NORMAL\":\r\n                return classes.normalStatus;\r\n            case \"EXPIRE\":\r\n                return classes.expireStatus;\r\n            case \"NOTOPEN\":\r\n                return classes.notopenStatus;\r\n            default:\r\n                return classes.disableStatus;\r\n        }\r\n    }\r\n    return (\r\n        <div className={getStyle(status)}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvatarForm;","import FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nexport default function Label(props) {\r\n    const { title, value } = props\r\n    return (\r\n        <FormControl disabled style={{ width: \"100%\" }} >\r\n            <InputLabel>{title}</InputLabel>\r\n            <Input value={value} />\r\n        </FormControl>\r\n    )\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nexport const modalStyle = makeStyles(() => ({\r\n    paper: {\r\n        minWidth: '600px',\r\n        minHeight: '650px',\r\n    }, headModalAdd: {\r\n        backgroundColor: '#388e3c',\r\n        color: '#fff'\r\n    }, headModalEdit: {\r\n        backgroundColor: '#1a237e',\r\n        color: '#fff'\r\n    }, btnCancel: {\r\n        backgroundColor: '#ffc400',\r\n        color: '#000',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        '&:hover': {\r\n            backgroundColor: '#b28900',\r\n        },\r\n    }, btnSave: {\r\n        backgroundColor: '#388e3c',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        '&:hover': {\r\n            backgroundColor: '#1b5e20',\r\n        },\r\n    }, btnEnable: {\r\n        backgroundColor: '#2196f3',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        '&:hover': {\r\n            backgroundColor: '#1976d2',\r\n        },\r\n    }, btnSelect: {\r\n        backgroundColor: '#2196f3',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        '&:hover': {\r\n            backgroundColor: '#1976d2',\r\n        },\r\n    }, btnImportExcel: {\r\n        padding:\"10px\",\r\n        fontWeight:\"600\",\r\n        backgroundColor: '#311b92',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        '&:hover': {\r\n            backgroundColor: '#000063',\r\n        },\r\n    },btnUpload:{\r\n        padding:\"10px\",\r\n        fontWeight:\"600\",\r\n        fontSize:\"18px\",\r\n        backgroundColor: '#130af7',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        '&:hover': {\r\n            backgroundColor: '#0000aa',\r\n        },\r\n    },btnNextPage:{\r\n        padding:\"10px\",\r\n        fontWeight:\"600\",\r\n        fontSize:\"18px\",\r\n        backgroundColor: '#29b6f6',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        '&:hover': {\r\n            backgroundColor: '#0086c3',\r\n        },\r\n    }\r\n}));","import {\r\n  itemSelectBoxs,\r\n  itemRadioBoxs,\r\n  getStatus,\r\n} from \"../data/Company-edit-data\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport DateMaterialUi from \"components/DateTime/DateMaterialUi\";\r\nimport SelectBox from \"components/Select/SelectBox\";\r\nimport CheckBox from \"components/CheckBox/CheckBox\";\r\nimport RadioBox from \"components/RadioBox/RadioBox\";\r\nimport InputFile from \"components/Input/InputFile\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AvatarForm from \"components/Avatar/Avatar-form\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Label from \"components/Label/Label\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { modalStyle } from \"utils/modalStyle.utils\";\r\nimport moment from \"moment\";\r\nfunction CompanyEditModalInfo(props) {\r\n  const {\r\n    companyInfo,\r\n    setCompanyInfo,\r\n    checkCal,\r\n    setCheckCal,\r\n    checkSecureEstampVisitor,\r\n    setCheckSecureEstampVisitor,\r\n    checkSecureEstampBooking,\r\n    setCheckSecureEstampBooking,\r\n    checkLineNotificationBoardcast,\r\n    setCheckLineNotificationBoardcast,\r\n    promotion,\r\n    setPromotion,\r\n    setImage,\r\n    setRemark,\r\n    setSelectExceptDay,\r\n    setDateStart,\r\n    setDateEnd,\r\n    setLineConfig,\r\n    dateStart,\r\n    dateEnd,\r\n    remark,\r\n    lineConfig,\r\n    selectExceptDay,\r\n  } = props;\r\n  const classes = modalStyle();\r\n  //-----------------Date Handing\r\n  function handdingDateStart(date) {\r\n    if (moment(date) > moment(dateEnd)) {\r\n      const newMoment = moment(date).add(1, \"days\");\r\n      setDateStart(date);\r\n      setDateEnd(newMoment);\r\n    } else setDateStart(date);\r\n  }\r\n  function handdingDateEnd(date) {\r\n    if (moment(date) < moment(dateStart)) {\r\n      const newMoment = moment(date).subtract(1, \"days\");\r\n      setDateStart(newMoment);\r\n      setDateEnd(date);\r\n    } else setDateEnd(date);\r\n  }\r\n  //------------Status Avatar\r\n  let statusAvatarElem = null;\r\n  if (companyInfo.status) {\r\n    statusAvatarElem = (\r\n      <GridContainer>\r\n        <GridItem>\r\n          <AvatarForm\r\n            text={getStatus(companyInfo.status)}\r\n            status={companyInfo.status}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n  }\r\n\r\n  //-------------\r\n  let formCreateDataElem = null;\r\n  if (companyInfo.create_date) {\r\n    formCreateDataElem = (\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"วันที่สร้าง\"\r\n              defaultValue={companyInfo.create_date}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"ผู้สร้าง\"\r\n              defaultValue={companyInfo.create_by}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n  //-------------When updated data\r\n  let formUpdateDataElem = null;\r\n  if (companyInfo.update_date) {\r\n    formUpdateDataElem = (\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"วันที่แก้ไขล่าสุด\"\r\n              defaultValue={companyInfo.update_date}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"ผู้แก้ไขล่าสุด\"\r\n              defaultValue={companyInfo.update_by}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n  //-------------When Disable data\r\n  let formDisableDataElem = null;\r\n  if (companyInfo.delete_date) {\r\n    formDisableDataElem = (\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"วันที่ระงับให้บริการล่าสุด\"\r\n              defaultValue={companyInfo.delete_date}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"ผู้ระงับล่าสุด\"\r\n              defaultValue={companyInfo.delete_by}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <DialogContent dividers={scroll === \"paper\"}>\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            {statusAvatarElem}\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={5}>\r\n                <Label title=\"Company ID\" value={companyInfo.company_id} />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={5}>\r\n                <CustomInput\r\n                  labelText=\"รหัสโครงการ\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    maxLength: \"15\",\r\n                    value: companyInfo.company_code,\r\n                    onChange: (event) =>\r\n                      setCompanyInfo({\r\n                        ...companyInfo,\r\n                        company_code: event.target.value,\r\n                      }),\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <CustomInput\r\n                  labelText=\"ชื่อโครงการ\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    maxLength: \"255\",\r\n                    value: companyInfo.company_name,\r\n                    onChange: (event) =>\r\n                      setCompanyInfo({\r\n                        ...companyInfo,\r\n                        company_name: event.target.value,\r\n                      }),\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <InputFile\r\n                  title=\"เลือกรูปภาพหลักฐานที่ขอแก้ไขข้อมูล\"\r\n                  setValue={setImage}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={6} md={6}>\r\n                <DateMaterialUi\r\n                  title=\"วันที่เริ่มเปิดให้บริการ\"\r\n                  selectedDate={dateStart}\r\n                  setSelectedDate={handdingDateStart}\r\n                />\r\n              </GridItem>\r\n              <br></br>\r\n              <GridItem xs={12} sm={6} md={6}>\r\n                <DateMaterialUi\r\n                  title=\"วันทีหยุดให้บริการ\"\r\n                  selectedDate={dateEnd}\r\n                  setSelectedDate={handdingDateEnd}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            {formCreateDataElem}\r\n            {formUpdateDataElem}\r\n            {formDisableDataElem}\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <SelectBox\r\n                  title=\"เลือก Pro\"\r\n                  setValue={setPromotion}\r\n                  value={promotion}\r\n                  items={itemSelectBoxs}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                  <CardHeader color=\"warning\" stats icon>\r\n                    <CardIcon color=\"warning\">\r\n                      <Icon>request_page</Icon>\r\n                    </CardIcon>\r\n                    <p>Calculate Setup</p>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkCal}\r\n                          setCheck={setCheckCal}\r\n                          title=\"เปิดระบบคิดเงิน\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <RadioBox\r\n                          title=\"เลือกการคำนวนเวลาจอดฟรี\"\r\n                          value={selectExceptDay}\r\n                          setCheck={setSelectExceptDay}\r\n                          items={itemRadioBoxs}\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={5}>\r\n                        <CustomInput\r\n                          labelText=\"ค่าปรับบัตรหาย\"\r\n                          id=\"setup-cardlost\"\r\n                          formControlProps={{\r\n                            fullWidth: false,\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: \"5\",\r\n                            value: companyInfo.price_of_cardloss,\r\n                            onChange: (event) =>\r\n                              setCompanyInfo({\r\n                                ...companyInfo,\r\n                                price_of_cardloss: event.target.value,\r\n                              }),\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                  </CardBody>\r\n                </Card>\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                  <CardHeader color=\"danger\" stats icon>\r\n                    <CardIcon color=\"danger\">\r\n                      <Icon>admin_panel_settings</Icon>\r\n                    </CardIcon>\r\n                    <p className={classes.cardCategory}>Security Setup</p>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkLineNotificationBoardcast}\r\n                          setCheck={setCheckLineNotificationBoardcast}\r\n                          title=\"เปิด Boardcast Line Notification\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkSecureEstampVisitor}\r\n                          setCheck={setCheckSecureEstampVisitor}\r\n                          title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Visitor ทั่วไป)\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkSecureEstampBooking}\r\n                          setCheck={setCheckSecureEstampBooking}\r\n                          title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Booking หรือจากการจอง)\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <p style={{ color: \"red\" }}>\r\n                      ***เป็นการตรวจสอบว่าผู้มาเยือนได้ถูกประทับตรา (E-Stamp)\r\n                      จากลูกบ้านที่มาติดต่อ หรือจากฝ่ายนิติบุคคลแล้ว หรือไม่\r\n                    </p>\r\n                  </CardBody>\r\n                </Card>\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                  <CardHeader color=\"info\" stats icon>\r\n                    <CardIcon color=\"info\">\r\n                      <Icon>app_settings_alt</Icon>\r\n                    </CardIcon>\r\n                    <p>Line Configuration</p>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CustomInput\r\n                          labelText=\"Line configuration data\"\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: \"1000\",\r\n                            value: lineConfig,\r\n                            multiline: true,\r\n                            rows: 7,\r\n                            onChange: (event) =>\r\n                              setLineConfig(event.target.value),\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                  </CardBody>\r\n                </Card>\r\n              </GridItem>\r\n            </GridContainer>\r\n\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <CustomInput\r\n                  labelText=\"กรอกเหตุผลที่แก้ไขข้อมูล\"\r\n                  id=\"comp-name-th\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    maxLength: \"255\",\r\n                    value: remark,\r\n                    multiline: true,\r\n                    rows: 4,\r\n                    onChange: (event) => setRemark(event.target.value),\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </div>\r\n    </DialogContent>\r\n  );\r\n}\r\n\r\nexport default CompanyEditModalInfo;\r\n","import GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nfunction CompanyEditModalDisable(props) {\r\n    const {\r\n        setImage,\r\n        setRemark,\r\n        remark,\r\n    } = props;\r\n    return (\r\n        <DialogContent dividers={scroll === 'paper'} >\r\n            <div>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <GridContainer>\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <InputFile\r\n                                    title=\"เลือกรูปภาพหลักฐานที่แจ้งระงับโครงการ\"\r\n                                    setValue={setImage}\r\n                                />\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                        <GridContainer>\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <CustomInput\r\n                                    labelText=\"กรอกเหตุผลที่แก้ไขข้อมูล\"\r\n                                    id=\"comp-name-th\"\r\n                                    formControlProps={{\r\n                                        fullWidth: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        maxLength: \"255\",\r\n                                        value: remark,\r\n                                        multiline: true,\r\n                                        rows: 4,\r\n                                        onChange: event => setRemark(event.target.value)\r\n                                    }}\r\n                                />\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n        </DialogContent>\r\n    )\r\n}\r\n\r\nexport default CompanyEditModalDisable;","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_REMARKNOTFOUND,\r\n    MESSAGE_FILE_IMAGE_INVALID\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, DISABLE_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\n\r\nexport const DisableCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (disableCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${DISABLE_COMPANY_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction disableCompanyMiddleware(valuesObj) {\r\n     if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    }else if(!isImage(getExtension(valuesObj.image.name))){\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    } else if(!valuesObj.remark){\r\n        swal(\"Warning!\", MESSAGE_REMARKNOTFOUND, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_REMARKNOTFOUND,\r\n    MESSAGE_FILE_IMAGE_INVALID\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, ENABLE_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\n\r\nexport const EnableCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (enableCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${ENABLE_COMPANY_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction enableCompanyMiddleware(valuesObj) {\r\n    if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.remark) {\r\n        swal(\"Warning!\", MESSAGE_REMARKNOTFOUND, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { GetCompanyByID } from 'actions/company/company-edit.action'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CompanyEditModalInfo from './Company-edit-modal-info'\r\nimport CompanyEditModalDisable from './Company-edit-modal-disable'\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport swal from 'sweetalert';\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport moment from \"moment\";\r\nimport { EditCompanyAction } from 'actions/company/company-edit.action'\r\nimport { DisableCompanyAction } from 'actions/company/company-disable.action'\r\nimport { EnableCompanyAction } from 'actions/company/company-enable.action'\r\n\r\nfunction CompanyEditModal(props) {\r\n    const { showModal, setShowModal, valuesObj } = props\r\n    const scroll = 'paper';\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const Store = useSelector(state => state)\r\n    const classes = modalStyle();\r\n    //----------State\r\n    const [companyInfo, setCompanyInfo] = useState({\r\n        company_id: \"\",\r\n        company_code: \"\",\r\n        company_name: \"\",\r\n        company_promotion: \"\",\r\n        status: \"DISABLE\",\r\n        company_start_date: \"\",\r\n        company_expire_date: \"\",\r\n        company_remark: \"\",\r\n        create_by: \"\",\r\n        create_date: \"\",\r\n        update_by: \"\",\r\n        update_date: \"\",\r\n        delete_by: \"\",\r\n        delete_date: \"\",\r\n        calculate_enable: false,\r\n        price_of_cardloss: \"0\",\r\n        except_time_split_from_day: false,\r\n        line_notification_broadcast:false,\r\n        line_company_data :\"\"\r\n    })\r\n    //----------Set default value\r\n    const dStart = moment();\r\n    const dEnd = moment().add(30, 'days');\r\n    const [showFormInfo, setShowFormInfo] = useState(true);\r\n    const [showFormDisable, setShowFormDisable] = useState(false);\r\n    const [showFormEnable, setShowFormEnable] = useState(false);\r\n    const [headerTextModal, setHeaderTextModal] = useState(\"แก้ไขข้อมูลโครงการ\");\r\n    //-------------------\r\n    const [checkCal, setCheckCal] = useState(false);\r\n    const [checkSecureEstampVisitor, setCheckSecureEstampVisitor] = useState(false);\r\n    const [checkSecureEstampBooking, setCheckSecureEstampBooking] = useState(false);\r\n    const [checkLineNotificationBoardcast, setCheckLineNotificationBoardcast] = useState(false);\r\n    \r\n    const [promotion, setPromotion] = useState(\"\");\r\n    //----------State\r\n    const [dateStart, setDateStart] = useState(dStart);\r\n    const [dateEnd, setDateEnd] = useState(dEnd);\r\n    const [image, setImage] = useState(null);\r\n    const [remark, setRemark] = useState(\"\")\r\n    const [lineConfig, setLineConfig] = useState(\"\");\r\n    const [selectExceptDay, setSelectExceptDay] = useState(\"true\");\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadEditForm();\r\n    }, []);\r\n    async function loadEditForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const values = {\r\n                company_id: parseInt(valuesObj)\r\n            }\r\n            const getData = await GetCompanyByID(dispatch, values, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\");\r\n            } else {\r\n                const result = getData.result;\r\n                setCompanyInfo(result)\r\n                setCheckCal(result.calculate_enable);\r\n                setCheckSecureEstampVisitor(result.visitor_estamp_verify);\r\n                setCheckSecureEstampBooking(result.booking_estamp_verify);\r\n                setCheckLineNotificationBoardcast(result.line_notification_broadcast)\r\n                setPromotion(result.company_promotion)\r\n                setDateStart(result.company_start_date ? result.company_start_date : dStart)\r\n                setDateEnd(result.company_expire_date ? result.company_expire_date : dEnd)\r\n                setSelectExceptDay(result.except_time_split_from_day.toString())\r\n                setLineConfig(JSON.stringify(result.line_company_data))\r\n            }\r\n        }\r\n    }\r\n\r\n    //----------------On Create\r\n    function onEditClick() {\r\n        dispatch(EditCompanyAction(history, {\r\n            company_id: companyInfo.company_id.toString(),\r\n            company_code: companyInfo.company_code,\r\n            company_name: companyInfo.company_name,\r\n            price_of_cardloss: companyInfo.price_of_cardloss.toString(),\r\n            company_start_date: moment(dateStart).set({ hour: 0, minute: 0, second: 0 }).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n            company_expire_date: moment(dateEnd).set({ hour: 0, minute: 0, second: 0 }).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n            company_promotion: promotion,\r\n            calculate_enable: checkCal,\r\n            except_time_split_from_day: selectExceptDay === \"true\" ? true : false,\r\n            image,\r\n            remark,\r\n            booking_estamp_verify: checkSecureEstampBooking,\r\n            visitor_estamp_verify: checkSecureEstampVisitor,\r\n            line_notification_broadcast: checkLineNotificationBoardcast,\r\n            line_company_data: lineConfig\r\n        }, Store.loginReducer.result))\r\n    }\r\n    //---------------On Disable \r\n    function onDisableClick() {\r\n        dispatch(DisableCompanyAction(history, {\r\n            company_id: companyInfo.company_id.toString(),\r\n            image,\r\n            remark\r\n        }, Store.loginReducer.result))\r\n    }\r\n    //---------------On Enable\r\n    function onEnableClick() {\r\n        dispatch(EnableCompanyAction(history, {\r\n            company_id: companyInfo.company_id.toString(),\r\n            image,\r\n            remark\r\n        }, Store.loginReducer.result))\r\n    }\r\n    function onCloseModal() {\r\n        setShowModal(false);\r\n    }\r\n    //------------btn disable\r\n    let btnDisableElem = null;\r\n    let btnEditSaveElem = null;\r\n    let btnEnableElem = null;\r\n    if (companyInfo.status.toUpperCase() !== 'DISABLE') {\r\n        btnDisableElem = <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            endIcon={<Icon>remove_circle</Icon>}\r\n            onClick={() => { setShowFormInfo(false); setShowFormDisable(true); setHeaderTextModal(\"ระงับการใช้งานโครงการ\"); }}\r\n        >\r\n            ระงับการใช้งาน\r\n        </Button>\r\n        btnEditSaveElem = <Button onClick={onEditClick}\r\n            color=\"primary\"\r\n            className={classes.btnSave}\r\n            endIcon={<Icon>save</Icon>}\r\n        >\r\n            แก้ไขข้อมูล\r\n        </Button>\r\n    } else {\r\n        btnEnableElem = <Button\r\n            className={classes.btnEnable}\r\n            endIcon={<Icon>history</Icon>}\r\n            onClick={() => { setShowFormInfo(false); setShowFormEnable(true); setHeaderTextModal(\"เปิดให้บริการโครงการใหม่อีกครั้ง\"); }}\r\n        >\r\n            เปิดให้บริการใหม่\r\n        </Button>\r\n    }\r\n    //----------------Show Form Info\r\n    let formInfoElem = null;\r\n    let formBottomElemInfo = null;\r\n    if (showFormInfo) {\r\n        formInfoElem = <CompanyEditModalInfo\r\n            companyInfo={companyInfo}\r\n            onCloseModal={onCloseModal}\r\n            setCompanyInfo={setCompanyInfo}\r\n            setShowFormInfo={setShowFormInfo}\r\n            checkCal={checkCal}\r\n            setCheckCal={setCheckCal}\r\n            checkSecureEstampVisitor={checkSecureEstampVisitor}\r\n            setCheckSecureEstampVisitor={setCheckSecureEstampVisitor}\r\n            checkLineNotificationBoardcast={checkLineNotificationBoardcast}\r\n            setCheckLineNotificationBoardcast={setCheckLineNotificationBoardcast}\r\n            checkSecureEstampBooking={checkSecureEstampBooking}\r\n            setCheckSecureEstampBooking={setCheckSecureEstampBooking}\r\n            promotion={promotion}\r\n            setPromotion={setPromotion}\r\n            setImage={setImage}\r\n            remark={remark}\r\n            setRemark={setRemark}\r\n            selectExceptDay={selectExceptDay}\r\n            setSelectExceptDay={setSelectExceptDay}\r\n            setDateStart={setDateStart}\r\n            setDateEnd={setDateEnd}\r\n            dateStart={dateStart}\r\n            dateEnd={dateEnd}\r\n            setLineConfig={setLineConfig}\r\n            lineConfig={lineConfig}\r\n        />\r\n        formBottomElemInfo = <DialogActions>\r\n            {btnEnableElem}\r\n            {btnDisableElem}\r\n            {btnEditSaveElem}\r\n            <Button onClick={onCloseModal}\r\n                color=\"primary\"\r\n                className={classes.btnCancel}\r\n            >\r\n                ยกเลิก\r\n            </Button>\r\n        </DialogActions>\r\n    }\r\n    //--------------Show Form Disable\r\n    let formDisableElem = null;\r\n    let formBottomElemDisable = null;\r\n    if (showFormDisable) {\r\n        formDisableElem = <CompanyEditModalDisable\r\n            setImage={setImage}\r\n            remark={remark}\r\n            setRemark={setRemark}\r\n        />\r\n        formBottomElemDisable = <DialogActions>\r\n            <Button onClick={onDisableClick}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                endIcon={<Icon>save</Icon>}\r\n            >\r\n                ระงับโครงการ\r\n            </Button>\r\n            <Button onClick={onCloseModal}\r\n                color=\"primary\"\r\n                className={classes.btnCancel}\r\n            >\r\n                ยกเลิก\r\n            </Button>\r\n        </DialogActions>\r\n    }\r\n    //-------------Show Form Enable\r\n    let formEnableElem = null;\r\n    let formBottomElemEnable = null;\r\n    if (showFormEnable) {\r\n        formEnableElem = <CompanyEditModalDisable\r\n            setImage={setImage}\r\n            remark={remark}\r\n            setRemark={setRemark}\r\n        />\r\n        formBottomElemEnable = <DialogActions>\r\n            <Button onClick={onEnableClick}\r\n                className={classes.btnEnable}\r\n                endIcon={<Icon>save</Icon>}\r\n            >\r\n                เปิดให้บริการใหม่\r\n            </Button>\r\n            <Button onClick={onCloseModal}\r\n                color=\"primary\"\r\n                className={classes.btnCancel}\r\n            >\r\n                ยกเลิก\r\n            </Button>\r\n        </DialogActions>\r\n    }\r\n    //-------------------------------------\r\n    return (\r\n        <Dialog\r\n            open={showModal}\r\n            scroll={scroll}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle className={classes.headModalEdit} id=\"scroll-dialog-title\">{headerTextModal}</DialogTitle>\r\n            <DialogContent>\r\n                {formInfoElem}\r\n                {formDisableElem}\r\n                {formEnableElem}\r\n            </DialogContent>\r\n            {formBottomElemInfo}\r\n            {formBottomElemDisable}\r\n            {formBottomElemEnable}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CompanyEditModal;","import { styles } from \"../Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n// import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\n// import { addRow } from \"./Company-edit-data\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from './data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from './Company-edit-style'\r\nimport CompanyEditModal from './modal/Company-edit-modal'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction CompanyEdit() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectRow, setSelectRow] = useState({ company_id: \"\" })\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        setSelectRow(company_id);\r\n        company_id && setShowModal(true);\r\n    }\r\n    //--------------Modal edit\r\n    let modalEditElem = null;\r\n    if (showModal) {\r\n        modalEditElem = <CompanyEditModal\r\n            showModal={showModal}\r\n            setShowModal={setShowModal}\r\n            valuesObj={selectRow}\r\n        />\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            {modalEditElem}\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>โครงการในระบบ (แก้ไขข้อมูลโครงการ)</h4>\r\n                            <p className={classes.cardCategoryWhite}>Company List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon company_id={row.company_id}>create</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyEdit);","export const homeCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}\r\nexport const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    }\r\n  };\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_HOME_SELECT_COMPANY_SUCCESS,\r\n    HTTP_HOME_CLEAR_COMPANY,\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, IMPORT_EXCEL_HOME_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\n\r\nexport const setSelectCompanySuccess = (payload) => ({\r\n    type: HTTP_HOME_SELECT_COMPANY_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSelectCompany = () => ({\r\n    type: HTTP_HOME_CLEAR_COMPANY\r\n})\r\n\r\nexport const ImportExcelHomeAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${IMPORT_EXCEL_HOME_API}`\r\n        const newCredential = { ...credential }\r\n        const items = newCredential.data;\r\n        const newItems = items.map(item => {\r\n            return {\r\n                home_address: item[0].value,\r\n                remark: item[1].value\r\n            }\r\n        })\r\n        const valuesObj = {\r\n            company_id: newCredential.company_id,\r\n            data: newItems\r\n        }\r\n        const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            swal(\"Success\", result.message, \"success\")\r\n                .then(() => {\r\n                    refreshPage();\r\n                    dispatch(setSuccess());\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_HOME_ALL_SUCCESS,\r\n    HTTP_GET_HOME_CLEAR\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYID_NOTFOUND\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_HOME_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetHomeAllSuccess = (payload) => ({\r\n    type: HTTP_GET_HOME_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearHomeAll = () => ({\r\n    type: HTTP_GET_HOME_CLEAR,\r\n})\r\n\r\nexport const GetHomeAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (getHomeMiddleware(history,credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_HOME_ALL_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetHomeAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetHomeAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getHomeMiddleware(history,valuesObj) {\r\n    if (!valuesObj.company_id) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYID_NOTFOUND, \"warning\");\r\n        history.goBack();\r\n    }\r\n    return true\r\n}","export function createData(company_id, company_code, company_name, company_promotion, status) {\r\n    return { company_id, company_code, company_name, company_promotion, status };\r\n}\r\n\r\nexport function addRow(valueObjArr) {\r\n    return valueObjArr.map(item => {\r\n        return createData(\r\n            item.company_id,\r\n            item.company_code,\r\n            item.company_name,\r\n            item.company_promotion,\r\n            item.status\r\n        )\r\n    })\r\n}\r\n\r\nexport const headerTable = {\r\n    company_id: \"\",\r\n    company_code: \"รหัสโครงการ\",\r\n    company_name: \"ชื่อโครงการ\",\r\n    company_promotion: \"โปร\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\nexport const headerHomeListTable = {\r\n    home_code: \"รหัสบ้าน\",\r\n    home_address: \"บ้านเลขที่\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\n\r\nexport const getStatus = (status) => {\r\n    switch (status) {\r\n        case \"NORMAL\":\r\n            return \"สถานะพร้อมใช้งาน\";\r\n        case \"EXPIRE\":\r\n            return \"สถานะหมดอายุ\";\r\n        default:\r\n            return \"สถานะระงับการให้บริการ\";\r\n    }\r\n}","import { styles } from \"./Home-main-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n// import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\n// import { addRow } from \"./Company-edit-data\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/home/home-import-excel.action\"\r\nimport { setClearHomeAll } from \"actions/home/home-get-all.action\"\r\nimport { headerTable } from '../data/Home-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { homeCompantStyle } from './Home-main-style'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(homeCompantStyle);\r\nfunction HomeMain() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeMainForm();\r\n    }, []);\r\n    async function loadHomeMainForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(setClearSelectCompany());\r\n            dispatch(setClearHomeAll());\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadHomeMainForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        const company_name = event.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id, company_name }))\r\n            history.push(\"/home-import\");\r\n        }\r\n    }\r\n    //--------------Modal edit\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>โครงการในระบบ (Import Home From Excel)</h4>\r\n                            <p className={classes.cardCategoryWhite}>Company List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            company_name={row.company_name}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id} company_name={row.company_name}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer, homeImportExcelReducer, homeGetAllReducer }) => ({ mainReducer, companyGetAllReducer, homeImportExcelReducer, homeGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    setClearHomeAll,\r\n    GetCompanyAllAction,\r\n    setSelectCompanySuccess,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeMain);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_VILLAGER_SELECT_COMPANY_SUCCESS,\r\n    HTTP_VILLAGER_CLEAR_COMPANY,\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, IMPORT_EXCEL_VILLAGER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\n\r\nexport const setVillagerSelectCompanySuccess = (payload) => ({\r\n    type: HTTP_VILLAGER_SELECT_COMPANY_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setVillagerClearSelectCompany = () => ({\r\n    type: HTTP_VILLAGER_CLEAR_COMPANY\r\n})\r\n\r\n\r\nexport const ImportExcelVillagerAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${IMPORT_EXCEL_VILLAGER_API}`\r\n        const newCredential = { ...credential }\r\n        let items = newCredential.data;\r\n        \r\n        const newItems = items.map(item => {\r\n            return {\r\n                home_address: item[0].value,\r\n                first_name: item[1].value,\r\n                last_name: item[2].value,\r\n                tel_number: item[3].value,\r\n                remark: item[4] ? item[4].value : null\r\n            }\r\n        })\r\n        const valuesObj = {\r\n            company_id: newCredential.company_id,\r\n            data: newItems\r\n        }\r\n        const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            swal(\"Success\", result.message, \"success\")\r\n                .then(() => {\r\n                    refreshPage();\r\n                    dispatch(setSuccess());\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_VILLAGER_ALL_SUCCESS,\r\n    HTTP_GET_VILLAGER_CLEAR\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYID_NOTFOUND\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_VILLAGER_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetVillagerAllSuccess = (payload) => ({\r\n    type: HTTP_GET_VILLAGER_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearVillagerAll = () => ({\r\n    type: HTTP_GET_VILLAGER_CLEAR,\r\n})\r\n\r\nexport const GetVillagerAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (getVillagerMiddleware(history,credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_VILLAGER_ALL_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetVillagerAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetVillagerAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getVillagerMiddleware(history,valuesObj) {\r\n    if (!valuesObj.company_id) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYID_NOTFOUND, \"warning\");\r\n        history.goBack();\r\n    }\r\n    return true\r\n}","export function createData(company_id, company_code, company_name, company_promotion, status) {\r\n    return { company_id, company_code, company_name, company_promotion, status };\r\n}\r\n\r\nexport function addRow(valueObjArr) {\r\n    return valueObjArr.map(item => {\r\n        return createData(\r\n            item.company_id,\r\n            item.company_code,\r\n            item.company_name,\r\n            item.company_promotion,\r\n            item.status\r\n        )\r\n    })\r\n}\r\n\r\nexport const headerTable = {\r\n    company_id: \"\",\r\n    company_code: \"รหัสโครงการ\",\r\n    company_name: \"ชื่อโครงการ\",\r\n    company_promotion: \"โปร\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\nexport const headerVillagerListTable = {\r\n    villager_code:\"รหัสลูกบ้าน\",\r\n    home_address: \"บ้านเลขที่\",\r\n    full_name:\"ชื่อ-นามสกุล\",\r\n    tel_number:\"เบอร์โทรศัพท์\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\n\r\nexport const getStatus = (status) => {\r\n    switch (status) {\r\n        case \"NORMAL\":\r\n            return \"สถานะพร้อมใช้งาน\";\r\n        case \"EXPIRE\":\r\n            return \"สถานะหมดอายุ\";\r\n        default:\r\n            return \"สถานะระงับการให้บริการ\";\r\n    }\r\n}","export const villagerCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}\r\nexport const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    },\r\n    cardHeader:{\r\n        background:\"linear-gradient(81deg, #66bb6a, #43a047)\"\r\n    }\r\n  };\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n// import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\n// import { addRow } from \"./Company-edit-data\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { setVillagerClearSelectCompany, setVillagerSelectCompanySuccess } from \"actions/villager/villager-import-excel.action\"\r\nimport { setClearVillagerAll } from \"actions/villager/villager-get-all.action\"\r\nimport { headerTable } from '../data/Villager-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { villagerCompantStyle, styles } from './Villager-main-style'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(villagerCompantStyle);\r\nfunction VillagerMain() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeMainForm();\r\n    }, []);\r\n    async function loadHomeMainForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(setVillagerClearSelectCompany());\r\n            dispatch(setClearVillagerAll());\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadHomeMainForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        const company_name = event.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            dispatch(setVillagerSelectCompanySuccess({ company_id, company_name }))\r\n            history.push(\"/villager-import\");\r\n        }\r\n    }\r\n    //--------------Modal edit\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #3f51b5, #283593)\" }} color=\"success\" >\r\n                            <h4 className={classes.cardTitleWhite}>โครงการในระบบ (Import Villager From Excel)</h4>\r\n                            <p className={classes.cardCategoryWhite}>Company List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            company_name={row.company_name}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id} company_name={row.company_name}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer, villagerImportExcelReducer, villagerGetAllReducer }) => ({ mainReducer, companyGetAllReducer, villagerImportExcelReducer, villagerGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    setVillagerClearSelectCompany,\r\n    GetCompanyAllAction,\r\n    setVillagerSelectCompanySuccess,\r\n    setClearVillagerAll,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VillagerMain);","export const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    }\r\n  };\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const buttonStyle = makeStyles(() => ({\r\n    btnAdd: {\r\n        background: 'linear-gradient(60deg, #66bb6a, #43a047)',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        fontSize:\"17px\",\r\n        width:\"100%\",\r\n        height:\"120px\",\r\n        '&:hover': {\r\n            background: 'linear-gradient(60deg, #66bb6a, #1f5221)',\r\n        },\r\n    },btnEdit: {\r\n        background: 'linear-gradient(60deg, #ffa726, #fb8c00)',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        fontSize:\"17px\",\r\n        width:\"100%\",\r\n        height:\"120px\",\r\n        '&:hover': {\r\n            background: 'linear-gradient(60deg, #ffa726, #d05600)',\r\n        },\r\n    }\r\n}));","import {\r\n    HTTP_SELECT_COMPANY_SUCCESS,\r\n    HTTP_SELECT_COMPANY_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nexport const setSelectCompanySuccess = (payload) => ({\r\n    type: HTTP_SELECT_COMPANY_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSelectCompany = () => ({\r\n    type: HTTP_SELECT_COMPANY_CLEAR,\r\n})\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { buttonStyle } from \"utils/btnStyle.utils\"\r\nimport { setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserMain() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    function onCreateClick() {\r\n        history.push(\"/user-add-select\")\r\n    }\r\n    function onEditInformationClick() {\r\n        history.push(\"/user-edit-info-select\")\r\n    }\r\n    function onChangePrivilegeClick() {\r\n        history.push(\"/user-change-privilege-select\")\r\n    }\r\n    function onChangeCompanySelect() {\r\n        history.push(\"/user-change-company-select\")\r\n    }\r\n    function onAddOrDeleteCompanyList() {\r\n        history.push(\"/user-addordelete-listcompany-select\")\r\n    }\r\n    function onResetPassword() {\r\n        history.push(\"/user-reset-password-listcompany-select\")\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>จัดการผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>User Management</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h3>เลือกทำรายการ</h3>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onCreateClick}\r\n                                        className={classesBtn.btnAdd}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>person_add</Icon>}\r\n                                    >\r\n                                        เพิ่มผู้ใช้งานใหม่\r\n                                    </Button>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onEditInformationClick}\r\n                                        className={classesBtn.btnEdit}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>recent_actors</Icon>}\r\n                                    >\r\n                                        แก้ไขข้อมูลผู้ใช้งาน\r\n                                    </Button>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onChangePrivilegeClick}\r\n                                        className={classesBtn.btnAdd}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>admin_panel_settings</Icon>}\r\n                                    >\r\n                                        เปลี่ยนสิทธิ์เข้าใช้งานระบบ\r\n                                    </Button>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onChangeCompanySelect}\r\n                                        className={classesBtn.btnEdit}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>storefront</Icon>}\r\n                                    >\r\n                                        เปลี่ยนโครงการหลักที่ผู้ใช้งานอยู่ในปัจจุบัน\r\n                                    </Button>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onAddOrDeleteCompanyList}\r\n                                        className={classesBtn.btnAdd}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>add_business</Icon>}\r\n                                    >\r\n                                        เพิ่มโครงการในการดูแลให้กับผู้ใช้งาน\r\n                                    </Button>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onResetPassword}\r\n                                        className={classesBtn.btnEdit}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>password</Icon>}\r\n                                    >\r\n                                        Reset Passowrd\r\n                                    </Button>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMain);","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.10.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n// @material-ui/icons\r\nimport MainPage from \"views/Main/Main-page\"\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Business from \"@material-ui/icons/Business\"\r\nimport HomeWork from \"@material-ui/icons/HomeWork\"\r\nimport Group from \"@material-ui/icons/Group\"\r\nimport AccountBalance from \"@material-ui/icons/SupervisedUserCircle\"\r\n// core components/views for Admin layout\r\n// import DashboardPage from \"views/Dashboard/Dashboard.js\";\r\nimport CompanyAdd from \"views/Company/Add/Company-add\";\r\nimport CompanyEdit from \"views/Company/Edit/Company-edit\";\r\nimport HomeMain from \"views/Home/main/Home-main\";\r\nimport VillagerMain from \"views/Villager/main/Villager-main\"\r\nimport UserMain from \"views/user/main/User-main\"\r\n// core components/views for RTL layout\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/main\",\r\n    name: \"Main\",\r\n    rtlName: \"لوحة القيادة\",\r\n    icon: Dashboard,\r\n    component: MainPage,\r\n    layout: \"\",\r\n  },\r\n  // {\r\n  //   path: \"/dashboard\",\r\n  //   name: \"Main\",\r\n  //   rtlName: \"لوحة القيادة\",\r\n  //   icon: Dashboard,\r\n  //   component: DashboardPage,\r\n  //   layout: \"/\",\r\n  // },\r\n  {\r\n    path: \"/company-add\",\r\n    name: \"Company Add\",\r\n    icon: Business,\r\n    component: CompanyAdd,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/company-edit\",\r\n    name: \"Company Edit\",\r\n    icon: Business,\r\n    component: CompanyEdit,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/home-main\",\r\n    name: \"Home Import From Excel\",\r\n    icon: HomeWork,\r\n    component: HomeMain,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/villager-main\",\r\n    name: \"Villager Import From Excel\",\r\n    icon: Group,\r\n    component: VillagerMain,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/user-main\",\r\n    name: \"User Management\",\r\n    icon: AccountBalance,\r\n    component: UserMain,\r\n    layout: \"\",\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import {\r\n  container,\r\n  defaultFont,\r\n  primaryColor,\r\n  defaultBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst headerStyle = () => ({\r\n  appBar: {\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    paddingTop: \"10px\",\r\n    zIndex: \"1029\",\r\n    color: grayColor[7],\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\",\r\n    minHeight: \"50px\",\r\n    display: \"block\",\r\n  },\r\n  container: {\r\n    ...container,\r\n    minHeight: \"50px\",\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    ...defaultFont,\r\n    letterSpacing: \"unset\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"18px\",\r\n    borderRadius: \"3px\",\r\n    textTransform: \"none\",\r\n    color: \"inherit\",\r\n    margin: \"0\",\r\n    \"&:hover,&:focus\": {\r\n      background: \"transparent\",\r\n    },\r\n  },\r\n  appResponsive: {\r\n    top: \"8px\",\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n});\r\n\r\nexport default headerStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n// core components\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\n//hooks\r\nimport { useRouteName } from \"hooks\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const routeName = useRouteName();\r\n  const { color,loginStore } = props;\r\n  const appBarClasses = classNames({\r\n    [\" \" + classes[color]]: color,\r\n  });\r\n  \r\n  return (\r\n    <AppBar className={classes.appBar + appBarClasses}>\r\n     \r\n      <Toolbar className={classes.container}>\r\n        <div className={classes.flex}>\r\n      \r\n          {/* Here we create navbar brand, based on route name */}\r\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\r\n            {routeName}\r\n          </Button>\r\n        </div>\r\n        <span>ผู้ใช้งาน {loginStore ? loginStore.first_name_th : \"\"}  {loginStore ? loginStore.last_name_th : \"\"}</span>\r\n        <Hidden smDown implementation=\"css\">\r\n          {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n        </Hidden>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerToggle}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import routes from \"routes\";\r\n\r\nexport const useRouteName = () => {\r\n  let name = \"\";\r\n  routes.forEach((route) => {\r\n    if (window.location.href.indexOf(route.layout + route.path) !== -1) {\r\n      name = routes.rtlActive ? route.rtlName : route.name;\r\n    }\r\n  });\r\n  return name;\r\n};\r\n","import {\r\n  defaultFont,\r\n  container,\r\n  primaryColor,\r\n  grayColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst footerStyle = {\r\n  block: {\r\n    color: \"inherit\",\r\n    padding: \"15px\",\r\n    textTransform: \"uppercase\",\r\n    borderRadius: \"3px\",\r\n    textDecoration: \"none\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    ...defaultFont,\r\n    fontWeight: \"500\",\r\n    fontSize: \"12px\",\r\n  },\r\n  left: {\r\n    float: \"left!important\",\r\n    display: \"block\",\r\n  },\r\n  right: {\r\n    padding: \"15px 0\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    float: \"right!important\",\r\n  },\r\n  footer: {\r\n    bottom: \"0\",\r\n    borderTop: \"1px solid \" + grayColor[11],\r\n    padding: \"15px 0\",\r\n    ...defaultFont,\r\n  },\r\n  container,\r\n  a: {\r\n    color: primaryColor,\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  list: {\r\n    marginBottom: \"0\",\r\n    padding: \"0\",\r\n    marginTop: \"0\",\r\n  },\r\n  inlineBlock: {\r\n    display: \"inline-block\",\r\n    padding: \"0px\",\r\n    width: \"auto\",\r\n  },\r\n};\r\nexport default footerStyle;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/footerStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Footer(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <div className={classes.container}>\r\n        <div className={classes.left}>\r\n          <List className={classes.list}>\r\n            <ListItem className={classes.inlineBlock}>\r\n              <a href=\"#home\" className={classes.block}>\r\n                Home\r\n              </a>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n        <p className={classes.right}>\r\n          <span>\r\n            &copy; {1900 + new Date().getYear()}{\" \"}\r\n            <a\r\n              href=\"https://cit.bannayuu.com\"\r\n              target=\"_blank\"\r\n              className={classes.a}\r\n            >\r\n              CIT Bannayuu\r\n            </a>\r\n            , Power by Creative Innovation\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  boxShadow,\r\n  defaultFont,\r\n  primaryColor,\r\n  primaryBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor,\r\n  blackColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst sidebarStyle = (theme) => ({\r\n  drawerPaper: {\r\n    border: \"none\",\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"1\",\r\n    ...boxShadow,\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidth,\r\n      position: \"fixed\",\r\n      height: \"100%\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n      ...boxShadow,\r\n      position: \"fixed\",\r\n      display: \"block\",\r\n      top: \"0\",\r\n      height: \"100vh\",\r\n      right: \"0\",\r\n      left: \"auto\",\r\n      zIndex: \"1032\",\r\n      visibility: \"visible\",\r\n      overflowY: \"visible\",\r\n      borderTop: \"none\",\r\n      textAlign: \"left\",\r\n      paddingRight: \"0px\",\r\n      paddingLeft: \"0\",\r\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\r\n      ...transition,\r\n    },\r\n  },\r\n  drawerPaperRTL: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      left: \"auto !important\",\r\n      right: \"0 !important\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"0  !important\",\r\n      right: \"auto !important\",\r\n    },\r\n  },\r\n  logo: {\r\n    position: \"relative\",\r\n    padding: \"15px 15px\",\r\n    zIndex: \"4\",\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      bottom: \"0\",\r\n\r\n      height: \"1px\",\r\n      right: \"15px\",\r\n      width: \"calc(100% - 30px)\",\r\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\",\r\n    },\r\n  },\r\n  logoLink: {\r\n    ...defaultFont,\r\n    textTransform: \"uppercase\",\r\n    padding: \"5px 0\",\r\n    display: \"block\",\r\n    fontSize: \"18px\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"30px\",\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"transparent\",\r\n    \"&,&:hover\": {\r\n      color: whiteColor,\r\n    },\r\n  },\r\n  logoLinkRTL: {\r\n    textAlign: \"right\",\r\n  },\r\n  logoImage: {\r\n    width: \"30px\",\r\n    display: \"inline-block\",\r\n    maxHeight: \"30px\",\r\n    marginLeft: \"10px\",\r\n    marginRight: \"15px\",\r\n  },\r\n  img: {\r\n    width: \"35px\",\r\n    top: \"22px\",\r\n    position: \"absolute\",\r\n    verticalAlign: \"middle\",\r\n    border: \"0\",\r\n  },\r\n  background: {\r\n    position: \"absolute\",\r\n    zIndex: \"1\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center center\",\r\n    \"&:after\": {\r\n      position: \"absolute\",\r\n      zIndex: \"3\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      background: blackColor,\r\n      opacity: \".8\",\r\n    },\r\n  },\r\n  list: {\r\n    marginTop: \"20px\",\r\n    paddingLeft: \"0\",\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    listStyle: \"none\",\r\n    position: \"unset\",\r\n  },\r\n  item: {\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    textDecoration: \"none\",\r\n    \"&:hover,&:focus,&:visited,&\": {\r\n      color: whiteColor,\r\n    },\r\n  },\r\n  itemLink: {\r\n    width: \"auto\",\r\n    transition: \"all 300ms linear\",\r\n    margin: \"10px 15px 0\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    padding: \"10px 15px\",\r\n    backgroundColor: \"transparent\",\r\n    ...defaultFont,\r\n  },\r\n  itemIcon: {\r\n    width: \"24px\",\r\n    height: \"30px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"30px\",\r\n    float: \"left\",\r\n    marginRight: \"15px\",\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\",\r\n  },\r\n  itemIconRTL: {\r\n    marginRight: \"3px\",\r\n    marginLeft: \"15px\",\r\n    float: \"right\",\r\n  },\r\n  itemText: {\r\n    ...defaultFont,\r\n    margin: \"0\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"14px\",\r\n    color: whiteColor,\r\n  },\r\n  itemTextRTL: {\r\n    textAlign: \"right\",\r\n  },\r\n  whiteFont: {\r\n    color: whiteColor,\r\n  },\r\n  purple: {\r\n    backgroundColor: primaryColor[0],\r\n    ...primaryBoxShadow,\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      ...primaryBoxShadow,\r\n    },\r\n  },\r\n  blue: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  green: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  orange: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  red: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  sidebarWrapper: {\r\n    position: \"relative\",\r\n    height: \"calc(100vh - 75px)\",\r\n    overflow: \"auto\",\r\n    width: \"260px\",\r\n    zIndex: \"4\",\r\n    overflowScrolling: \"touch\",\r\n  },\r\n  activePro: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      bottom: \"13px\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default sidebarStyle;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// core components\r\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\r\nconst stypeLogoHeader = {\r\n  padding: \"10px\",\r\n  cursor:\"pointer\"\r\n};\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  let location = useLocation();\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return location.pathname === routeName;\r\n  }\r\n  const { color, logo, image, logoText, routes,secondRoutes } = props;\r\n  var newRoute = [...routes,...secondRoutes]\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n        if (prop.path === \"/upgrade-to-pro\") {\r\n          activePro = classes.activePro + \" \";\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: true,\r\n          });\r\n        } else {\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\r\n          });\r\n        }\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path),\r\n        });\r\n        return (\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            className={activePro + classes.item}\r\n            activeClassName=\"active\"\r\n            key={key}\r\n          >\r\n            <ListItem button className={classes.itemLink + listItemClasses}>\r\n              {typeof prop.icon === \"string\" ? (\r\n                <Icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive,\r\n                  })}\r\n                >\r\n                  {prop.icon}\r\n                </Icon>\r\n              ) : (\r\n                <prop.icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive,\r\n                  })}\r\n                />\r\n              )}\r\n              <ListItemText\r\n                primary={props.rtlActive ? prop.rtlName : prop.name}\r\n                className={classNames(classes.itemText, whiteFontClasses, {\r\n                  [classes.itemTextRTL]: props.rtlActive,\r\n                })}\r\n                disableTypography={true}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <div\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive,\r\n        })}\r\n        style={stypeLogoHeader}\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        {logoText}\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={props.rtlActive ? \"left\" : \"right\"}\r\n          open={props.open}\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }),\r\n          }}\r\n          onClose={props.handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n            {links}\r\n          </div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }),\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\r\n  logo: PropTypes.string,\r\n  image: PropTypes.string,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  open: PropTypes.bool,\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const useStylesExcelArea = makeStyles(() => ({\r\n    excelArea: {\r\n        marginTop:\"20px\",\r\n        maxHeight: \"450px\",\r\n        overflowY: \"auto\",\r\n        border:\"1px solid #babdbe\"\r\n    }\r\n}));","import { AttachFile, Description, PictureAsPdf, Theaters } from '@material-ui/icons';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setFetching, setSuccess } from 'actions/main/main.action'\r\nfunction ExcelFormMaterialUi(props) {\r\n    const { setItemExcel } = props;\r\n    const dispatch = useDispatch();\r\n    function onSelectFile(files) {\r\n        if (files.length > 0) {\r\n            const file = files[0]\r\n            importExcel(file);\r\n        }\r\n    }\r\n    async function importExcel(file) {\r\n        dispatch(setFetching());\r\n        document.body.style.cursor = 'wait';\r\n        var file_name_string = file.name;\r\n        var file_name_array = file_name_string.split(\".\");\r\n        var file_extension = file_name_array[file_name_array.length - 1];\r\n        if (file_extension.toLowerCase() === \"xlsx\") {\r\n            const excel_values = await readXlsxFile(file)\r\n            const items = await excel_values.map(item => {\r\n                return item.map(value => {\r\n                    return { value }\r\n                })\r\n            })\r\n            setItemExcel(items)\r\n            dispatch(setSuccess());\r\n        } else {\r\n            setItemExcel([])\r\n        }\r\n        document.body.style.cursor = 'default';\r\n    }\r\n\r\n    const handlePreviewIcon = (fileObject, classes) => {\r\n        const { type } = fileObject.file\r\n        const iconProps = {\r\n            className: classes.image,\r\n        }\r\n\r\n        if (type.startsWith(\"video/\")) return <Theaters {...iconProps} />\r\n        // if (type.startsWith(\"audio/\")) return <AudioTrack {...iconProps} />\r\n\r\n        switch (type) {\r\n            case \"application/msword\":\r\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n                return <Description {...iconProps} />\r\n            case \"application/pdf\":\r\n                return <PictureAsPdf {...iconProps} />\r\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\r\n                return <Description {...iconProps} />\r\n            default:\r\n                return <AttachFile {...iconProps} />\r\n        }\r\n    }\r\n\r\n    return (<DropzoneArea\r\n        acceptedFiles={[\".xlsx\"]}\r\n        filesLimit={1}\r\n        dropzoneText={\"Drag and drop an excel file here or click\"}\r\n        getPreviewIcon={handlePreviewIcon}\r\n        onChange={onSelectFile}\r\n    />)\r\n}\r\n\r\nexport default ExcelFormMaterialUi;","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { ImportExcelHomeAction } from \"actions/home/home-import-excel.action\"\r\nimport { setClearHomeAll } from \"actions/home/home-get-all.action\"\r\nimport { styles } from '../main/Home-main-style'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { useStylesExcelArea } from './Home-import-style'\r\nimport ExcelFormMaterialUi from 'components/Excel/ExcelFormMaterialUi'\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_EXCELROW_NOTFOUND,\r\n    MESSAGE_EXCELCOLUMN_NOTCOMPLETE\r\n} from 'constants/message.constant'\r\nimport Spreadsheet from \"react-spreadsheet\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction HomeImportData() {\r\n    const classes = useStyles();\r\n    const classesModal = modalStyle();\r\n    const classesExcel = useStylesExcelArea();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [excelItems, setExcelItems] = useState([]);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeImportExcelForm();\r\n    }, []);\r\n    async function loadHomeImportExcelForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!Store.homeImportExcelReducer.result) {\r\n                history.push(\"/home-main\");\r\n            } else {\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(setClearHomeAll());\r\n            }\r\n        }\r\n    }\r\n    let formExcelElem = null;\r\n    if (excelItems.length > 0) {\r\n\r\n        formExcelElem = <div className={classesExcel.excelArea}><Spreadsheet data={excelItems} /></div>\r\n\r\n    }\r\n\r\n    //-------------------On Upload\r\n    function onUploadClick() {\r\n        if (checkRow()) {\r\n            if (checkColum()) {\r\n                uploadData();\r\n            } else swal(\"Warning!\", `${MESSAGE_EXCELCOLUMN_NOTCOMPLETE} จำนวนคอลัมน์จะต้องมี 2-4 เท่านั้น`, \"warning\");\r\n        } else swal(\"Warning!\", MESSAGE_EXCELROW_NOTFOUND, \"warning\");\r\n    }\r\n    function checkRow() {\r\n        if (excelItems.length <= 1)\r\n            return false;\r\n        return true;\r\n    }\r\n    function checkColum() {\r\n        const filterColumns = excelItems.find(item => {\r\n            return item.length > 4 || item.length < 2\r\n        });\r\n        if (filterColumns) return false;\r\n        return true;\r\n    }\r\n    function uploadData() {\r\n        try{\r\n            const homeImportReducer = Store.homeImportExcelReducer.result;\r\n            const arrExcel = excelItems.map(items=>{\r\n                const newItems =  items.map(item=>{\r\n                     const ei = {value:item.value ? String(item.value) : null}\r\n                     return ei;\r\n                 })\r\n                 return newItems;\r\n             })\r\n             let itemFromExcel = [...arrExcel];\r\n            const valueObj = {\r\n                company_id: homeImportReducer.company_id,\r\n                data: itemFromExcel\r\n            }\r\n            dispatch(ImportExcelHomeAction(history, valueObj, Store.loginReducer.result));\r\n        }catch{\r\n            history.push(\"/page500\");\r\n        }\r\n        \r\n    }\r\n    //----------------On go to Home list \r\n    function onGotoHomeListClick() {\r\n        history.push('/home-list')\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>Import Data From Excel For Upload To Home</h4>\r\n                            <p className={classes.cardCategoryWhite}>Import Data From Excel For Upload To Home</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <p style={{ color: \"#1a237e\" }}>เลือกไฟล์ Excel ที่นามสกุลไฟล์เป็น .xlsx เท่านั้น</p>\r\n                            <p style={{ color: \"#1a237e\" }}>หลังจากเลือกไฟล์ Excel แล้ว ให้ตรวจสอบข้อมูลก่อนว่าครบถ้วน และถูกต้องหรือไม่</p>\r\n                            <p style={{ color: \"#1a237e\" }}>***หากข้อมูลไม่ครบถ้วน หรือไม่ถูกต้องให้แก้ไขข้อมูลที่ไฟล์ Excel ต้นฉบับก่อน แล้วเลือก Excel (ที่แก้ไขข้อมูลแล้ว) ใหม่อีกครั้ง</p>\r\n                            <p style={{ color: \"#1a237e\" }}>จากนั้น กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</p>\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnNextPage}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>keyboard_tab</Icon>}\r\n                                    onClick={onGotoHomeListClick}\r\n                                >\r\n                                    <span>ตรวจสอบข้อมูลบ้าน</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            <ExcelFormMaterialUi setItemExcel={setExcelItems} />\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnUpload}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>backup</Icon>}\r\n                                    onClick={onUploadClick}\r\n                                >\r\n                                    <span>กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            {formExcelElem}\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, homeImportExcelReducer, homeGetAllReducer }) => ({ mainReducer, homeImportExcelReducer, homeGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    ImportExcelHomeAction,\r\n    setClearHomeAll,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeImportData);","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetHomeAllAction } from \"actions/home/home-get-all.action\"\r\nimport { headerHomeListTable } from '../data/Home-data'\r\n// import Button from '@material-ui/core/Button';\r\n// import Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\n// import { modalStyle } from 'utils/modalStyle.utils'\r\nimport {\r\n    // homeCompantStyle,\r\n    styles\r\n} from '../main/Home-main-style'\r\n\r\nconst useStyles = makeStyles(styles);\r\n// const useStyles2 = makeStyles(homeCompantStyle);\r\nfunction HomeList() {\r\n    const classes = useStyles();\r\n    // const classes2 = useStyles2();\r\n    // const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.homeGetAllReducer.result ? Store.homeGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeMainForm();\r\n    }, []);\r\n    async function loadHomeMainForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!Store.homeImportExcelReducer.result) {\r\n                history.push(\"/home-main\");\r\n            } else {\r\n                const result = Store.homeImportExcelReducer.result\r\n                const valuesObj = {\r\n                    company_id: result.company_id,\r\n                    home_address: textSearch\r\n                }\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetHomeAllAction(history, valuesObj, authStore));\r\n            }\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadHomeMainForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>ตารางบ้านเลขที่ของโครงการ {Store.homeImportExcelReducer.result ? Store.homeImportExcelReducer.result.company_name : \"\"}</h4>\r\n                            <p className={classes.cardCategoryWhite}>Home List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"บ้านเลขที่\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerHomeListTable.home_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerHomeListTable.home_address}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerHomeListTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.homeGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.homeGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.home_id ? row.home_id : '0'}>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.home_code ? row.home_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.home_address ? row.home_address : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.homeGetAllReducer.result ? Store.homeGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, homeGetAllReducer }) => ({ mainReducer, homeGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetHomeAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeList);","import { makeStyles } from '@material-ui/core/styles';\r\nexport const useStylesExcelArea = makeStyles(() => ({\r\n    excelArea: {\r\n        marginTop:\"20px\",\r\n        maxHeight: \"450px\",\r\n        overflowY: \"auto\",\r\n        border:\"1px solid #babdbe\"\r\n    }\r\n}));","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { ImportExcelVillagerAction } from \"actions/villager/villager-import-excel.action\"\r\nimport { setClearVillagerAll } from \"actions/villager/villager-get-all.action\"\r\nimport { styles } from '../main/Villager-main-style'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { useStylesExcelArea } from './Villager-import-style'\r\nimport ExcelFormMaterialUi from 'components/Excel/ExcelFormMaterialUi'\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_EXCELROW_NOTFOUND,\r\n    MESSAGE_EXCELCOLUMN_NOTCOMPLETE\r\n} from 'constants/message.constant'\r\nimport Spreadsheet from \"react-spreadsheet\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction VillagerImportData() {\r\n    const classes = useStyles();\r\n    const classesModal = modalStyle();\r\n    const classesExcel = useStylesExcelArea();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [excelItems, setExcelItems] = useState([]);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadVillagerImportExcelForm();\r\n    }, []);\r\n    async function loadVillagerImportExcelForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!Store.villagerImportExcelReducer.result) {\r\n                history.push(\"/villager-main\");\r\n            } else {\r\n                dispatch(setClearVillagerAll());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n            }\r\n        }\r\n    }\r\n    let formExcelElem = null;\r\n    if (excelItems.length > 0) {\r\n        formExcelElem = <div className={classesExcel.excelArea}><Spreadsheet data={excelItems} /></div>\r\n\r\n    }\r\n\r\n    //-------------------On Upload\r\n    function onUploadClick() {\r\n        if (checkRow()) {\r\n            if (checkColum()) {\r\n                uploadData();\r\n            } else swal(\"Warning!\", `${MESSAGE_EXCELCOLUMN_NOTCOMPLETE} จำนวนคอลัมน์จะต้องมี 5-6 เท่านั้น`, \"warning\");\r\n        } else swal(\"Warning!\", MESSAGE_EXCELROW_NOTFOUND, \"warning\");\r\n    }\r\n    function checkRow() {\r\n        if (excelItems.length <= 1)\r\n            return false;\r\n        return true;\r\n    }\r\n    function checkColum() {\r\n        const filterColumns = excelItems.find(item => {\r\n            return item.length > 6 || item.length < 5\r\n        });\r\n        if (filterColumns) {\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n            \r\n    }\r\n    function uploadData() {\r\n        try {\r\n            const villagerImportReducer = Store.villagerImportExcelReducer.result;\r\n            const arrExcel = excelItems.map(items => {\r\n                const newItems = items.map(item => {\r\n                    const ei = { value: item.value ? String(item.value) : null }\r\n                    return ei;\r\n                })\r\n                return newItems;\r\n            })\r\n            let itemFromExcel = [...arrExcel];\r\n            itemFromExcel.shift();\r\n            const valueObj = {\r\n                company_id: villagerImportReducer.company_id,\r\n                data: itemFromExcel\r\n            }\r\n            dispatch(ImportExcelVillagerAction(history, valueObj, Store.loginReducer.result));\r\n        } catch {\r\n            history.push(\"/page500\");\r\n        }\r\n    }\r\n    //----------------On go to Home list \r\n    function onGotoVillagerListClick() {\r\n        history.push('/villager-list')\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #3f51b5, #283593)\" }} color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>Import Data From Excel For Upload To Villager</h4>\r\n                            <p className={classes.cardCategoryWhite}>Import Data From Excel For Upload To Villager</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <p style={{ color: \"#1a237e\" }}>เลือกไฟล์ Excel ที่นามสกุลไฟล์เป็น .xlsx เท่านั้น</p>\r\n                            <p style={{ color: \"#1a237e\" }}>หลังจากเลือกไฟล์ Excel แล้ว ให้ตรวจสอบข้อมูลก่อนว่าครบถ้วน และถูกต้องหรือไม่</p>\r\n                            <p style={{ color: \"#1a237e\" }}>***หากข้อมูลไม่ครบถ้วน หรือไม่ถูกต้องให้แก้ไขข้อมูลที่ไฟล์ Excel ต้นฉบับก่อน แล้วเลือก Excel (ที่แก้ไขข้อมูลแล้ว) ใหม่อีกครั้ง</p>\r\n                            <p style={{ color: \"#1a237e\" }}>จากนั้น กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</p>\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnNextPage}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>keyboard_tab</Icon>}\r\n                                    onClick={onGotoVillagerListClick}\r\n                                >\r\n                                    <span>ตรวจสอบข้อมูลลูกบ้าน</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            <ExcelFormMaterialUi setItemExcel={setExcelItems} />\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnUpload}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>backup</Icon>}\r\n                                    onClick={onUploadClick}\r\n                                >\r\n                                    <span>กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            {formExcelElem}\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, villagerGetAllReducer }) => ({ mainReducer, villagerGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    setClearVillagerAll,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VillagerImportData);","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetVillagerAllAction } from \"actions/villager/villager-get-all.action\"\r\nimport { headerVillagerListTable } from '../data/Villager-data'\r\n// import Button from '@material-ui/core/Button';\r\n// import Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\n// import { modalStyle } from 'utils/modalStyle.utils'\r\nimport {\r\n    // homeCompantStyle,\r\n    styles\r\n} from '../main/Villager-main-style'\r\n\r\nconst useStyles = makeStyles(styles);\r\n// const useStyles2 = makeStyles(homeCompantStyle);\r\nfunction VillagerList() {\r\n    const classes = useStyles();\r\n    // const classes2 = useStyles2();\r\n    // const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.villagerGetAllReducer.result ? Store.villagerGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadVillagerMainForm();\r\n    }, []);\r\n    async function loadVillagerMainForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!Store.villagerImportExcelReducer.result) {\r\n                history.push(\"/villager-main\");\r\n            } else {\r\n                const result = Store.villagerImportExcelReducer.result\r\n                const valuesObj = {\r\n                    company_id: result.company_id,\r\n                    home_address: textSearch\r\n                }\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetVillagerAllAction(history, valuesObj, authStore));\r\n            }\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadVillagerMainForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #3f51b5, #283593)\" }} color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>ตารางข้อมูลลูกบ้านของโครงการ {Store.villagerGetAllReducer.result ? Store.villagerGetAllReducer.result.company_name : \"\"}</h4>\r\n                            <p className={classes.cardCategoryWhite}>Villager List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"บ้านเลขที่\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 180, ...styleTableHeader }} align=\"left\">\r\n                                                {headerVillagerListTable.villager_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerVillagerListTable.home_address}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerVillagerListTable.full_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerVillagerListTable.tel_number}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerVillagerListTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>   \r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.villagerGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.villagerGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.villager_id ? row.villager_id : '0'}>\r\n                                                <TableCell style={{ width: 180 }} align=\"left\">\r\n                                                    {row.villager_code ? row.villager_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.home_address ? row.home_address : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.home_address ? `${row.first_name} ${row.last_name}` : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.tel_number ? row.tel_number : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.villagerGetAllReducer.result ? Store.villagerGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, villagerGetAllReducer }) => ({ mainReducer, villagerGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetVillagerAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VillagerList);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserAddSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        dispatch(setSelectCompanySuccess({ company_id }));\r\n        history.push(\"/user-add\")\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อสร้าง User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for create user</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddSelectCompany);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width:\"100%\",\r\n        margin: 'auto',\r\n    },\r\n    cardHeader: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    list: {\r\n        minWidth: 200,\r\n        maxWidth: 350,\r\n        height: 450,\r\n        backgroundColor: theme.palette.background.paper,\r\n        overflow: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5, 0),\r\n    },\r\n}));\r\n\r\nfunction not(a, b) {\r\n    return a.filter((item) => {\r\n        const test = b.map(function (e) {return e.id; }).indexOf(item.id);\r\n        return test === -1\r\n        // b.indexOf(value.id) === -1)\r\n    });\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter((item) => {\r\n        const test = b.map(function (e) { return e.id; }).indexOf(item.id);\r\n        return test !== -1\r\n        // return b.indexOf(item.id) !== -1\r\n    });\r\n}\r\n\r\nfunction union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList(props) {\r\n    const {\r\n        titleLeft, titleRight,\r\n        leftItems, setLeftItems,\r\n        rightItems, setRightItems\r\n    } = props\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([]);\r\n    const leftChecked = intersection(checked, leftItems);\r\n    const rightChecked = intersection(checked, rightItems);\r\n    //-------------------------------------------------\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.map(function (e) { return e.id; }).indexOf(value.id);\r\n        const newChecked = [...checked];\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n    const handleToggleAll = (items) => () => {\r\n        if (numberOfChecked(items) === items.length) {\r\n            setChecked(not(checked, items));\r\n        } else {\r\n            setChecked(union(checked, items));\r\n        }\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        setRightItems(rightItems.concat(leftChecked));\r\n        setLeftItems(not(leftItems, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeftItems(leftItems.concat(rightChecked));\r\n        setRightItems(not(rightItems, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    const checkBoxHandle = (item) => {\r\n        const test = checked.map(function (e) { return e.id; }).indexOf(item.id);\r\n        return test != -1\r\n    }\r\n    const customList = (title, items) => (\r\n        <Card>\r\n            <CardHeader\r\n                className={classes.cardHeader}\r\n                avatar={\r\n                    <Checkbox\r\n                        onClick={handleToggleAll(items)}\r\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n                        indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n                        disabled={items.length === 0}\r\n                        inputProps={{ 'aria-label': 'all items selected' }}\r\n                    />\r\n                }\r\n                title={title}\r\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n            />\r\n            <Divider />\r\n            <List className={classes.list} dense component=\"div\" role=\"list\">\r\n                {items.map((item) => {\r\n                    const labelId = `transfer-list-all-item-${item.value}-label`;\r\n                    return (\r\n                        <ListItem key={item.id} listid={item.id} role=\"listitem\" button onClick={handleToggle(item)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checkBoxHandle(item)}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={`${item.value}`} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem />\r\n            </List>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n            <Grid item>{customList(titleLeft, leftItems)}</Grid>\r\n            <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        onClick={handleCheckedRight}\r\n                        disabled={leftChecked.length === 0}\r\n                        aria-label=\"move selected right\"\r\n                    >\r\n                        &gt;\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        onClick={handleCheckedLeft}\r\n                        disabled={rightChecked.length === 0}\r\n                        aria-label=\"move selected left\"\r\n                    >\r\n                        &lt;\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item>{customList(titleRight, rightItems)}</Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_PRIVILEGE_ALL_SUCCESS,\r\n    HTTP_GET_PRIVILEGE_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_PRIVILEGE_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetPrivilegeAllSuccess = (payload) => ({\r\n    type: HTTP_GET_PRIVILEGE_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearPrivilegeAll = () => ({\r\n    type: HTTP_GET_PRIVILEGE_CLEAR,\r\n})\r\n\r\nexport const GetPrivilegeAllAction = (history,  authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_PRIVILEGE_ALL_API}`\r\n            const valuesObj = { }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetPrivilegeAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetPrivilegeAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n    }\r\n}\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_COMPANY_LIST_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_LIST_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_COMPANY_LIST_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetCompanyListAllSuccess = (payload) => ({\r\n    type: HTTP_GET_COMPANY_LIST_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearCompanyListAll = () => ({\r\n    type: HTTP_GET_COMPANY_LIST_CLEAR,\r\n})\r\n\r\nexport const GetCompanyListAllAction = (history,  authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_COMPANY_LIST_ALL_API}`\r\n            const valuesObj = { }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetCompanyListAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetCompanyListAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n    }\r\n}\r\n","\r\nexport function isNotEngCharOrNumber(input) {\r\n    const formatEng = /[^a-zA-Z0-9]/;\r\n    if (formatEng.test(input))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nexport function allnumeric(inputtxt) {\r\n    const numbers = /^[0-9]+$/;\r\n    if (inputtxt.match(numbers)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function ValidateEmail(mail) {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\r\n        return (true)\r\n    }\r\n    return (false)\r\n}\r\n\r\nexport function ValidateLine(inputtxt) {\r\n    const formatline = /[`!#$%^&*()+\\-={};':\"\\\\|,<>?~]/;\r\n    if (formatline.test(inputtxt)) {\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function IsProhibitSpecial(input) {\r\n    const formatname = /[`!@#$%^&*()_+\\-={};':\"\\\\|,.<>?~]/;\r\n    if (formatname.test(input))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nexport function IsHomeProbitSpecial(input) {\r\n    const formathome = /[`@#$%^&*;'|<>~]/;\r\n    if (formathome.test(input))\r\n        return true;\r\n    return false;\r\n}\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport SelectBox from \"components/Select/SelectBox\"\r\nimport TransferList from \"components/TransferList/TransferList\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetCompanyListAllAction } from \"actions/company/company-list.action\"\r\nimport { CreateUserAction } from \"actions/user/user-add.action\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport swal from 'sweetalert';\r\nimport { ValidateEmail, ValidateLine, allnumeric, isNotEngCharOrNumber, IsProhibitSpecial, IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport {\r\n    MESSAGE_FIRST_NAME_NOTFOUND,\r\n    MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_LAST_NAME_NOTFOUND,\r\n    MESSAGE_LAST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_ADDRESS_PROHITBIT_SPECIAL,\r\n    MESSAGE_MOBILE_NOT_NUMBER,\r\n    MESSAGE_MOBILE_NOT_10_CHARACTER,\r\n    MESSAGE_LINE_FORMAT_INVALID,\r\n    MESSAGE_EMAIL_FORMAT_INVALID,\r\n    MESSAGE_NOT_SELECT_PRIVILEGE,\r\n    MESSAGE_USER_NOT_FOUND,\r\n    MESSAGE_USER_NOT_END_OR_NUMBER,\r\n    MESSAGE_PASSWORD_NOT_FOUND,\r\n    MESSAGE_PASSWORD_NOT_END_OR_NUMBER,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_PASSWORD_NOT_EQUAL\r\n} from \"constants/message.constant\"\r\n// import { buttonStyle } from \"utils/btnStyle.utils\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserAdd() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        password_confirm: \"\"\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        password_confirm: \"\",\r\n        privilege: \"\"\r\n    })\r\n    const [selectPrivilege, setSelectPrivilege] = useState(\"\");\r\n    const [companyListItemRight, setCompanyListItemRight] = useState([]);\r\n    const [companyListItemLeft, setCompanyListItemLeft] = useState([]);\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!Store.companySelectedReducer.result) {\r\n            history.push(\"/user-main\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetPrivilegeAllAction(history, authStore))\r\n            dispatch(GetCompanyListAllAction(history, authStore))\r\n        }\r\n    }\r\n    const privilegeItems = Store.privilegeGetAllReducer.result.map(item => {\r\n        return {\r\n            key: item.employee_privilege_type,\r\n            value: item.employee_privilege_id,\r\n            text: item.employee_privilege_name_th\r\n        }\r\n    })\r\n    if (Store.companyListGetAllReducer.result.length > 0 && companyListItemLeft.length === 0 && companyListItemRight.length === 0)\r\n        setCompanyListItemLeft(Store.companyListGetAllReducer.result.map(item => {\r\n            return { value: item.company_name, id: item.company_id }\r\n        }).filter(fil => fil.id != Store.companySelectedReducer.result.company_id))\r\n\r\n    //-----------------------On Create Click\r\n    function onCreateClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_type = Store.privilegeGetAllReducer.result.filter(item => { return item.employee_privilege_id == selectPrivilege }).map(item => {\r\n            return item.employee_privilege_type\r\n        })\r\n        const company_list = companyListItemRight.map(item => item.id)\r\n        const valuesObj = {\r\n            first_name: userInfo.first_name,\r\n            last_name: userInfo.last_name,\r\n            address: userInfo.address,\r\n            mobile: userInfo.mobile,\r\n            line: userInfo.line,\r\n            email: userInfo.email,\r\n            username: userInfo.username,\r\n            password: userInfo.password,\r\n            password_confirm: userInfo.password_confirm,\r\n            employee_privilege_id: selectPrivilege.toString(),\r\n            status: \"INIT\",\r\n            employee_type: employee_type[0],\r\n            company_id: company_id.toString(),\r\n            company_list: [company_id, ...company_list]\r\n        }\r\n        if (createUserMiddleware(valuesObj)) {\r\n            dispatch(CreateUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function createUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.first_name) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.first_name)) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (!valuesObj.last_name) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.last_name)) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (!valuesObj.username) {\r\n            swal(\"Warning!\", MESSAGE_USER_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_FOUND })\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(valuesObj.username)) {\r\n            swal(\"Warning!\", MESSAGE_USER_NOT_END_OR_NUMBER, \"warning\");\r\n            setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_END_OR_NUMBER })\r\n            return false;\r\n        } else if (!valuesObj.password) {\r\n            swal(\"Warning!\", MESSAGE_PASSWORD_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_FOUND })\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(valuesObj.password)) {\r\n            swal(\"Warning!\", MESSAGE_PASSWORD_NOT_END_OR_NUMBER, \"warning\");\r\n            setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_END_OR_NUMBER })\r\n            return false;\r\n        } else if (valuesObj.password != valuesObj.password_confirm) {\r\n            swal(\"Warning!\", MESSAGE_PASSWORD_NOT_EQUAL, \"warning\");\r\n            setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_EQUAL, password_confirm: MESSAGE_PASSWORD_NOT_EQUAL })\r\n            return false;\r\n        } else if (!valuesObj.employee_privilege_id) {\r\n            swal(\"Warning!\", MESSAGE_NOT_SELECT_PRIVILEGE, \"warning\");\r\n            setMessageErr({ ...messageErr, privilege: MESSAGE_NOT_SELECT_PRIVILEGE })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.address)) {\r\n            swal(\"Warning!\", MESSAGE_ADDRESS_PROHITBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n            return false;\r\n        }\r\n        if (valuesObj.email)\r\n            if (!ValidateEmail(valuesObj.email)) {\r\n                swal(\"Warning!\", MESSAGE_EMAIL_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.line)\r\n            if (!ValidateLine(valuesObj.line)) {\r\n                swal(\"Warning!\", MESSAGE_LINE_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.moblie) {\r\n            if (!allnumeric(valuesObj.moblie)) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_NUMBER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                return false;\r\n            } else if (valuesObj.moblie.length != 10) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_10_CHARACTER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\",\r\n            mobile: \"\",\r\n            line: \"\",\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            password_confirm: \"\",\r\n            privilege: \"\"\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>สร้างผู้ใช้งานใหม่</h4>\r\n                            <p className={classes.cardCategoryWhite}>Create New User</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ชื่อ\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.first_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, first_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, first_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.first_name}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"นามสกุล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.last_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, last_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, last_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.last_name}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"เบอร์โทรศัพท์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"10\",\r\n                                            value: userInfo.mobile,\r\n                                            onChange: event => setUserInfo({ ...userInfo, mobile: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!allnumeric(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                                                } else if (event.target.value.length != 10) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, mobile: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.mobile}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"อีเมล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"100\",\r\n                                            value: userInfo.email,\r\n                                            onChange: event => setUserInfo({ ...userInfo, email: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateEmail(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, email: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.email}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ไลน์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"50\",\r\n                                            value: userInfo.line,\r\n                                            onChange: event => setUserInfo({ ...userInfo, line: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateLine(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, line: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.line}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"ที่อยู่\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: userInfo.address,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setUserInfo({ ...userInfo, address: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, address: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.address}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <CustomInput\r\n                                                        labelText=\"Username\"\r\n                                                        formControlProps={{\r\n                                                            fullWidth: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            maxLength: \"100\",\r\n                                                            value: userInfo.username,\r\n                                                            onChange: event => setUserInfo({ ...userInfo, username: event.target.value }),\r\n                                                            onBlur: event => {\r\n                                                                const pass = event.target.value\r\n                                                                if (!pass) {\r\n                                                                    setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_FOUND })\r\n                                                                } else if (isNotEngCharOrNumber(pass)) {\r\n                                                                    setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_END_OR_NUMBER })\r\n                                                                } else {\r\n                                                                    setMessageErr({ ...messageErr, username: \"\" })\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.username}</span>\r\n                                                </GridItem>\r\n\r\n                                            </GridContainer>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <CustomInput\r\n                                                        labelText=\"Password\"\r\n                                                        formControlProps={{\r\n                                                            fullWidth: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            maxLength: \"50\",\r\n                                                            type: \"password\",\r\n                                                            value: userInfo.password,\r\n                                                            onChange: event => setUserInfo({ ...userInfo, password: event.target.value }),\r\n                                                            onBlur: event => {\r\n                                                                const pass = event.target.value\r\n                                                                if (!pass) {\r\n                                                                    setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_FOUND })\r\n                                                                } else if (isNotEngCharOrNumber(pass)) {\r\n                                                                    setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_END_OR_NUMBER })\r\n                                                                } else {\r\n                                                                    setMessageErr({ ...messageErr, password: \"\" })\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.password}</span>\r\n                                                </GridItem>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <CustomInput\r\n                                                        labelText=\"Comfirm-Password\"\r\n                                                        formControlProps={{\r\n                                                            fullWidth: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            maxLength: \"50\",\r\n                                                            type: \"password\",\r\n                                                            value: userInfo.password_confirm,\r\n                                                            onChange: event => setUserInfo({ ...userInfo, password_confirm: event.target.value }),\r\n                                                            onBlur: event => {\r\n                                                                const pass = event.target.value\r\n                                                                if (pass != userInfo.password) {\r\n                                                                    setMessageErr({ ...messageErr, password_confirm: MESSAGE_PASSWORD_NOT_EQUAL })\r\n                                                                } else {\r\n                                                                    setMessageErr({ ...messageErr, password_confirm: \"\" })\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.password_confirm}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <SelectBox\r\n                                                        title=\"เลือกสิทธิ์การเข้าใช้งาน\"\r\n                                                        value={selectPrivilege}\r\n                                                        setValue={setSelectPrivilege}\r\n                                                        items={privilegeItems}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.privilege}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <br></br>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <h4 style={{ textAlign: \"center\" }}>เลือกโครงการที่ดูแลเพิ่มเติม</h4>\r\n                                                </GridItem>\r\n                                                <br></br>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <TransferList\r\n                                                        titleLeft=\"โครงการที่ยังไม่เลือก\"\r\n                                                        titleRight=\"โครงการที่ถูกเลือก\"\r\n                                                        leftItems={companyListItemLeft}\r\n                                                        setLeftItems={setCompanyListItemLeft}\r\n                                                        rightItems={companyListItemRight}\r\n                                                        setRightItems={setCompanyListItemRight}\r\n                                                    />\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"success\"\r\n                                onClick={onCreateClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>person_add</Icon>}\r\n                            >สร้างผู้ใช้งาน</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAdd);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CREATE_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const CreateUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CREATE_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-add-select')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserEditSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-edit-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไปแก้ไขข้อมูล User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for edit user information</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditSelectCompany);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_USER_LIST_ALL_SUCCESS,\r\n    HTTP_GET_USER_LIST_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_USER_IS_BELOW_MYSELF_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetUserListAllSuccess = (payload) => ({\r\n    type: HTTP_GET_USER_LIST_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearUserListAll = () => ({\r\n    type: HTTP_GET_USER_LIST_CLEAR,\r\n})\r\n\r\nexport const GetCompanyListAllAction = (history,credential,  authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_USER_IS_BELOW_MYSELF_ALL_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetUserListAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetUserListAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n    }\r\n}\r\n","import {\r\n    HTTP_SELECT_USER_SUCCESS,\r\n    HTTP_SELECT_USER_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nexport const setSelectUserSuccess = (payload) => ({\r\n    type: HTTP_SELECT_USER_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSelectUser = () => ({\r\n    type: HTTP_SELECT_USER_CLEAR,\r\n})\r\n\r\n","export const userHeaderTable = {\r\n    employee_id: \"\",\r\n    username:\"Username\",\r\n    first_name_th: \"ชื่อ\",\r\n    last_name_th: \"นามสกุล\",\r\n    employee_privilege_type: \"โปร\",\r\n}\r\n\r\n\r\nexport const itemSelectBoxsHoldTime = [\r\n    {\r\n        value: \"5 minutes\"\r\n        , text: \"5 นาที\"\r\n    },{\r\n        value: \"10 minutes\"\r\n        , text: \"10 นาที\"\r\n    },{\r\n        value: \"15 minutes\"\r\n        , text: \"15 นาที\"\r\n    },{\r\n        value: \"30 minutes\"\r\n        , text: \"30 นาที\"\r\n    },{\r\n        value: \"1 hours\"\r\n        , text: \"1 ชั่วโมง\"\r\n    },{\r\n        value: \"2 hours\"\r\n        , text: \"2 ชั่วโมง\"\r\n    }\r\n]","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserEditList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-edit-info-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-edit-info\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือก User เพื่อแก้ไขข้อมูล</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for edit information</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditList);","import { MAIN_URL, GET_USER_BYID_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nexport async function GetUserByID(dispatch, credential, authStore) {\r\n    dispatch(setFetching());\r\n    const urlClient = `${MAIN_URL}${GET_USER_BYID_API}`\r\n    const valuesObj = { ...credential }\r\n    const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n    if (result.error) {\r\n        dispatch(setFailed());\r\n    } else\r\n        dispatch(setSuccess());\r\n    return result;\r\n}\r\n","\r\nimport { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, EDIT_USER_INFO_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const EditUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${EDIT_USER_INFO_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-edit-list')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Label from \"components/Label/Label\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { EditUserAction } from \"actions/user/user-edit-info.action\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport swal from 'sweetalert';\r\nimport { ValidateEmail, ValidateLine, allnumeric, IsProhibitSpecial, IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport {\r\n    MESSAGE_FIRST_NAME_NOTFOUND,\r\n    MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_LAST_NAME_NOTFOUND,\r\n    MESSAGE_LAST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_ADDRESS_PROHITBIT_SPECIAL,\r\n    MESSAGE_MOBILE_NOT_NUMBER,\r\n    MESSAGE_MOBILE_NOT_10_CHARACTER,\r\n    MESSAGE_LINE_FORMAT_INVALID,\r\n    MESSAGE_EMAIL_FORMAT_INVALID,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n} from \"constants/message.constant\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserEditInfo() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\"\r\n    })\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-edit-info-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-edit-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(()=>{\r\n                    history.push(\"/user-edit-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    address: result.address,\r\n                    mobile: result.employee_mobile,\r\n                    line: result.employee_line,\r\n                    email: result.employee_email,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onEditInfoClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const valuesObj = {\r\n            employee_id: employee_id.toString(),\r\n            first_name: userInfo.first_name,\r\n            last_name: userInfo.last_name,\r\n            address: userInfo.address,\r\n            mobile: userInfo.mobile,\r\n            line: userInfo.line,\r\n            email: userInfo.email,\r\n            company_id: company_id.toString(),\r\n        }\r\n        if (editInfoUserMiddleware(valuesObj)) {\r\n            dispatch(EditUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function editInfoUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.first_name) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.first_name)) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (!valuesObj.last_name) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.last_name)) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.address)) {\r\n            swal(\"Warning!\", MESSAGE_ADDRESS_PROHITBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n            return false;\r\n        }\r\n        if (valuesObj.email)\r\n            if (!ValidateEmail(valuesObj.email)) {\r\n                swal(\"Warning!\", MESSAGE_EMAIL_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.line)\r\n            if (!ValidateLine(valuesObj.line)) {\r\n                swal(\"Warning!\", MESSAGE_LINE_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.moblie) {\r\n            if (!allnumeric(valuesObj.moblie)) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_NUMBER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                return false;\r\n            } else if (valuesObj.moblie.length != 10) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_10_CHARACTER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\",\r\n            mobile: \"\",\r\n            line: \"\",\r\n            email: \"\"\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>แก้ไขข้อมูลผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Edit user information</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Label\r\n                                title=\"Username\"\r\n                                value={userInfo.username}\r\n                            />\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ชื่อ\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.first_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, first_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, first_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.first_name}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"นามสกุล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.last_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, last_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, last_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.last_name}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"เบอร์โทรศัพท์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"10\",\r\n                                            value: userInfo.mobile,\r\n                                            onChange: event => setUserInfo({ ...userInfo, mobile: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!allnumeric(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                                                } else if (event.target.value.length != 10) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, mobile: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.mobile}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"อีเมล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"100\",\r\n                                            value: userInfo.email,\r\n                                            onChange: event => setUserInfo({ ...userInfo, email: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateEmail(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, email: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.email}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ไลน์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"50\",\r\n                                            value: userInfo.line,\r\n                                            onChange: event => setUserInfo({ ...userInfo, line: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateLine(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, line: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.line}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"ที่อยู่\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: userInfo.address,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setUserInfo({ ...userInfo, address: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, address: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.address}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                className={classes.btnSave}\r\n                                onClick={onEditInfoClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >แก้ไขข้อมูลผู้ใช้งาน</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction,\r\n    GetUserByID,\r\n    EditUserAction,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditInfo);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangePrivilegeSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-change-privilege-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไปเปลี่ยนแปลงสิทธิ์การใช้งานระบบของ User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for change privilege of user</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangePrivilegeSelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangePrivilegeList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-change-privilege-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-change-privilege\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>เลือก User เพื่อเปลี่ยนแปลงสิทธิ์การใช้งานระบบ</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for change privilege</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangePrivilegeList);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CHANGE_PRIVILEGE_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const ChangePrivilegeUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CHANGE_PRIVILEGE_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-change-privilege-list')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport SelectBox from \"components/Select/SelectBox\"\r\nimport Label from \"components/Label/Label\"\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { ChangePrivilegeUserAction } from \"actions/user/user-change-privilege.action\"\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_NOT_SELECT_PRIVILEGE,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n} from \"constants/message.constant\"\r\nimport { IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserChangePrivilege() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        privilege: \"\"\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        privilege: \"\"\r\n    })\r\n    const [selectPrivilege, setSelectPrivilege] = useState(\"\");\r\n    const [image, setImage] = useState(null)\r\n    const [remark, setRemark] = useState(\"\");\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-change-privilege-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-change-privilege-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetPrivilegeAllAction(history, authStore))\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-change-privilege-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    privilege: result.employee_privilege_id,\r\n                })\r\n                setSelectPrivilege(result.employee_privilege_id)\r\n            }\r\n        }\r\n    }\r\n    const privilegeItems = Store.privilegeGetAllReducer.result.map(item => {\r\n        return {\r\n            key: item.employee_privilege_type,\r\n            value: item.employee_privilege_id,\r\n            text: item.employee_privilege_name_th\r\n        }\r\n    })\r\n\r\n    //-----------------------On Create Click\r\n    function onChangePrivilegeClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const employee_type = Store.privilegeGetAllReducer.result.filter(item => { return item.employee_privilege_id == selectPrivilege }).map(item => {\r\n            return item.employee_privilege_type\r\n        })\r\n        const valuesObj = {\r\n            image,\r\n            employee_privilege_id: selectPrivilege.toString(),\r\n            remark,\r\n            employee_type: employee_type[0],\r\n            company_id: company_id.toString(),\r\n            employee_id: employee_id.toString()\r\n        }\r\n        if (changePrivilegeUserMiddleware(valuesObj)) {\r\n            dispatch(ChangePrivilegeUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function changePrivilegeUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.employee_privilege_id) {\r\n            swal(\"Warning!\", MESSAGE_NOT_SELECT_PRIVILEGE, \"warning\");\r\n            setMessageErr({ ...messageErr, privilege: MESSAGE_NOT_SELECT_PRIVILEGE })\r\n            return false;\r\n        } else if (!valuesObj.image) {\r\n            swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_NOTSELECTIMAGE })\r\n            return false;\r\n        } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n            swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_FILE_IMAGE_INVALID })\r\n            return false;\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            privilege: \"\",\r\n            image: \"\",\r\n            remark: \"\",\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เปลี่ยนแปลงสิทธิ์เข้าใช้งานระบบ</h4>\r\n                            <p className={classes.cardCategoryWhite}>Change Privilege</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={5} md={5}>\r\n                                    <Label\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={7} md={7}>\r\n                                    <Label\r\n                                        title=\"ชื่อ-นามสกุล\"\r\n                                        value={`${userInfo.first_name} ${userInfo.last_name}`}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <SelectBox\r\n                                                        title=\"เลือกสิทธิ์การเข้าใช้งาน\"\r\n                                                        value={selectPrivilege}\r\n                                                        setValue={setSelectPrivilege}\r\n                                                        items={privilegeItems}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.privilege}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <InputFile\r\n                                        title=\"เลือกรูปภาพหลักฐานการแจ้งเปลี่ยนสิทธิ์เข้าใช้งานของ User\"\r\n                                        setValue={setImage}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.image}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่เปลี่ยนสิทธิ์การเข้าใช้งานระบบ\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"primary\"\r\n                                onClick={onChangePrivilegeClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >บันทึก</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction,\r\n    GetUserByID,\r\n    ChangePrivilegeUserAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangePrivilege);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_COMPANY_ALL_FETCHING,\r\n    HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_ALL_FAILED\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_COMPANY_ALL_AND_NOT_CIT_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\nexport const setGetCompanyAllFetching = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FETCHING\r\n})\r\n\r\nexport const setGetCompanyAllSuccess = (payload) => ({\r\n    type: HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setGetCompanyFailed = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FAILED\r\n})\r\n\r\nexport const GetCompanyListAndNotCitCompanyAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${GET_COMPANY_ALL_AND_NOT_CIT_COMPANY_API}`\r\n        const valuesObj = { ...credential }\r\n        const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            if (result.result)\r\n                dispatch(setGetCompanyAllSuccess(result.result));\r\n            else\r\n                dispatch(setGetCompanyAllSuccess([]));\r\n            dispatch(setSuccess());\r\n        }\r\n    }\r\n}\r\n","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAndNotCitCompanyAllAction } from \"actions/company/company-list-not-cit-company.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangeComapnySelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    \r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch ? textSearch : \"\"\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyListAndNotCitCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        const company_name = event.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id,company_name }));\r\n            history.push(\"/user-change-company-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไปเปลี่ยนแปลงโครงการหลักที่ User ดูแลอยู่</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for change main company</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            company_name={row.company_name}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id }company_name={row.company_name}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAndNotCitCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangeComapnySelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangeCompanyList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadChangeCompanyForm();\r\n    }, []);\r\n    async function loadChangeCompanyForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-change-company-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadChangeCompanyForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-change-company\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>เลือก User เพื่อเปลี่ยนแปลงโครงการหลักที่ดูแลอยู่ปัจจุบัน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for change main company</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangeCompanyList);","import { useState, useEffect } from \"react\"\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\n// import GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\n//--------Style\r\nconst styleTableHeader = {\r\n    backgroundColor: \"rgb(144,138,138)\",\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    fontWeight: 600\r\n}\r\n\r\nexport default function UserChangeCompanyModal(props) {\r\n    const { showModal, setShowModal, setSelectNewCompany } = props\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const scroll = 'paper';\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    //-------------------State\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //--------------------Function\r\n    function onCloseModal() {\r\n        setShowModal(false);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    //----------------On Select company\r\n    function onSelectCompay(e) {\r\n        const company_id = e.target.getAttribute(\"company_id\")\r\n        const company_code = e.target.getAttribute(\"company_code\")\r\n        const company_name = e.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            setSelectNewCompany({ company_id, company_code, company_name });\r\n            onCloseModal(false);\r\n        }\r\n    }\r\n    //------------------------------------------------------\r\n    return (\r\n        <Dialog\r\n            open={showModal}\r\n            scroll={scroll}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle className={classesModal.headModalEdit} id=\"scroll-dialog-title\">เลือกโครงการใหม่</DialogTitle>\r\n            <DialogContent dividers={scroll === 'paper'} >\r\n                <GridContainer>\r\n                    <CardBody>\r\n                        <ButtonSearch\r\n                            placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                            searchFunc={e => onSearchClick(e)}\r\n                        />\r\n                        <br></br>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                            {headerTable.company_code}\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 200, ...styleTableHeader }}>\r\n                                            {headerTable.company_name}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {(rowsPerPage > 0\r\n                                        ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        : Store.companyGetAllReducer.result\r\n                                    ).map((row) => (\r\n                                        <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                            <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                <div className={classes2.tableRowBtn}>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        className={classesModal.btnSelect}\r\n                                                        endIcon={<Icon company_id={row.company_id} company_name={row.company_name} company_code={row.company_code}>task_alt</Icon>}\r\n                                                        company_id={row.company_id}\r\n                                                        company_name={row.company_name}\r\n                                                        company_code={row.company_code}\r\n                                                        onClick={onSelectCompay}\r\n                                                    >\r\n                                                        <span company_id={row.company_id} company_name={row.company_name} company_code={row.company_code}>เลือก</span>\r\n                                                    </Button><br></br>\r\n\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120 }} align=\"left\">\r\n                                            <div style={{ maxWidth: 120, overflowX: \"auto\" }}>\r\n                                                    <span> {row.company_code ? row.company_code : ''}</span>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 300 }} align=\"left\">\r\n                                                <div style={{ maxWidth: 300, overflowX: \"auto\" }}>\r\n                                                    <span>{row.company_name ? row.company_name : ''}</span>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    {emptyRows > 0 && (\r\n                                        <TableRow style={{ height: 53 * emptyRows }}>\r\n                                            <TableCell colSpan={3} />\r\n                                        </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n                                <TableFooter >\r\n                                    <TableRow >\r\n                                        <TablePagination\r\n                                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                            colSpan={3}\r\n                                            count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                            rowsPerPage={rowsPerPage}\r\n                                            page={page}\r\n                                            SelectProps={{\r\n                                                inputProps: { 'aria-label': 'rows per page' },\r\n                                                native: true,\r\n                                            }}\r\n                                            onChangePage={handleChangePage}\r\n                                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                            ActionsComponent={TableCustom}\r\n                                        />\r\n                                    </TableRow>\r\n                                </TableFooter>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </CardBody>\r\n                </GridContainer>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCloseModal}\r\n                    color=\"primary\"\r\n                    className={classesModal.btnCancel}\r\n                >\r\n                    ยกเลิก\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CHANGE_MAIN_COMPANY_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const ChangeMainCompanyUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CHANGE_MAIN_COMPANY_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-change-company-select')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport Label from \"components/Label/Label\"\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport UserChangeCompanyModal from \"views/user/change-main-company/User-change-company-modal\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { ChangeMainCompanyUserAction } from \"actions/user/user-change-main-company.action\"\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n    MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY,\r\n    MESSAGE_NOT_SELECT_NEW_COMPANY,\r\n} from \"constants/message.constant\"\r\nimport { IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserChangeCompany() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        privilege: \"\"\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        privilege: \"\"\r\n    })\r\n    const [image, setImage] = useState(null)\r\n    const [remark, setRemark] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectNewCompany, setSelectNewCompany] = useState({ company_id: \"\", company_code: \"\", company_name: \"\" });\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-change-company-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-change-company-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-change-company-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    privilege: result.employee_privilege_id,\r\n                })\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onChangeMainCompanyClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n\r\n        const valuesObj = {\r\n            image,\r\n            remark,\r\n            old_company_id: company_id.toString(),\r\n            new_company_id: selectNewCompany.company_id.toString(),\r\n            employee_id: employee_id.toString()\r\n        }\r\n        if (changeMainCompanyUserMiddleware(valuesObj)) {\r\n            dispatch(ChangeMainCompanyUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function changeMainCompanyUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.old_company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.new_company_id) {\r\n            swal(\"Warning!\", MESSAGE_NOT_SELECT_NEW_COMPANY, \"warning\");\r\n            setMessageErr({ ...messageErr, new_company: MESSAGE_NOT_SELECT_NEW_COMPANY })\r\n            return false;\r\n        } else if (valuesObj.old_company_id == valuesObj.new_company_id) {\r\n            swal(\"Warning!\", MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY, \"warning\");\r\n            setMessageErr({ ...messageErr, new_company: MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY })\r\n            return false;\r\n        } else if (!valuesObj.image) {\r\n            swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_NOTSELECTIMAGE })\r\n            return false;\r\n        } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n            swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_FILE_IMAGE_INVALID })\r\n            return false;\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            privilege: \"\",\r\n            image: \"\",\r\n            remark: \"\",\r\n        })\r\n    }\r\n    //--------------------------Modal\r\n    function onShowModal() {\r\n        setShowModal(true)\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <UserChangeCompanyModal\r\n                showModal={showModal}\r\n                setShowModal={setShowModal}\r\n                setSelectNewCompany={setSelectNewCompany}\r\n            />\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เปลี่ยนแปลงโครงการหลักที่ดูแลอยู่ในปัจจุบัน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Change main company</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={5} md={5}>\r\n                                    <Label\r\n                                        key={1}\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={7} md={7}>\r\n                                    <Label\r\n                                        key={2}\r\n                                        title=\"ชื่อ-นามสกุล\"\r\n                                        value={`${userInfo.first_name} ${userInfo.last_name}`}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <Label\r\n                                                        title=\"โครงการหลักที่ดูแลปัจจุบัน\"\r\n                                                        value={Store.companySelectedReducer.result ? Store.companySelectedReducer.result.company_name : \"\"}\r\n                                                    />\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <br></br>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <Label\r\n                                                        title=\"โครงการหลักที่ดูแล (ใหม่)\"\r\n                                                        value={selectNewCompany.company_name}\r\n                                                    />\r\n                                                    <br></br>\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.new_company}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <br></br>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12} style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\r\n                                                    <Button color=\"info\"\r\n                                                        onClick={onShowModal}\r\n                                                        endIcon={<Icon style={{ fontSize: \"25px\" }}>flip_camera_android</Icon>}\r\n                                                    >เลือกโครงการใหม่</Button>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <InputFile\r\n                                        title=\"เลือกรูปภาพหลักฐานการแจ้งเปลี่ยนโครงการหลักที่ User ดูแลอยู่ปัจจุบัน\"\r\n                                        setValue={setImage}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.image}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่เปลี่ยนโครงการหลักที่ User ดูแลอยู่ปัจจุบัน\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"primary\"\r\n                                onClick={onChangeMainCompanyClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >บันทึก</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetUserByID,\r\n    ChangeMainCompanyUserAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangeCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserResetPassowrdSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyResetPasswordForm();\r\n    }, []);\r\n    async function loadCompanyResetPasswordForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyResetPasswordForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-reset-password-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไป Reset Password</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for reset password</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserResetPassowrdSelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserResetPasswordList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadUserListForm();\r\n    }, []);\r\n    async function loadUserListForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-edit-info-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadUserListForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-reset-password\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือก Reset Password User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for reset password </p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserResetPasswordList);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, RESET_PASSWORD_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\nimport {MESSAGE_SUCCESS} from 'constants/message.constant'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const ResetPasswordUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${RESET_PASSWORD_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", MESSAGE_SUCCESS, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        const url_reset_password = `${result.result}`\r\n                        console.log(url_reset_password)\r\n                        history.push('/user-reset-password-list')\r\n                        window.open(url_reset_password);\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Label from \"components/Label/Label\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { ResetPasswordUserAction } from \"actions/user/user-reset-password.action\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport SelectBox from \"components/Select/SelectBox\"\r\nimport swal from 'sweetalert';\r\nimport { IsProhibitSpecial, IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport {itemSelectBoxsHoldTime} from \"views/user/data/User.data\"\r\nimport {\r\n    MESSAGE_HOLDTIME_NOT_FOUND,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_EMPLOYEE_ID_NOTFOUND,\r\n} from \"constants/message.constant\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserResetPassword() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        hold_time: \"\",\r\n        remark: \"\"\r\n    })\r\n    const [remark, setRemark] = useState(\"\")\r\n    const [holdTime, setHoldTime] = useState(\"\")\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-reset-password-listcompany-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-reset-password-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-reset-password-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    address: result.address,\r\n                    mobile: result.employee_mobile,\r\n                    line: result.employee_line,\r\n                    email: result.employee_email,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onResetPasswordClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const valuesObj = {\r\n            employee_id: employee_id.toString(),\r\n            remark,\r\n            hold_time: holdTime,\r\n            company_id: company_id.toString(),\r\n        }\r\n        if (resetPasswordUserMiddleware(valuesObj)) {\r\n            dispatch(ResetPasswordUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n   \r\n    //-----------------------Middleware for Create \r\n    function resetPasswordUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.employee_id) {\r\n            swal(\"Warning!\", MESSAGE_EMPLOYEE_ID_NOTFOUND, \"warning\");\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        } else if(!valuesObj.hold_time){\r\n            swal(\"Warning!\", MESSAGE_HOLDTIME_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, hold_time: MESSAGE_HOLDTIME_NOT_FOUND })\r\n        }\r\n        // else if (!valuesObj.last_name) {\r\n        //     swal(\"Warning!\", MESSAGE_LAST_NAME_NOTFOUND, \"warning\");\r\n        //     setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n        //     return false;\r\n        // } else if (IsProhibitSpecial(valuesObj.last_name)) {\r\n        //     swal(\"Warning!\", MESSAGE_LAST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n        //     setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n        //     return false;\r\n        // } \r\n\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\",\r\n            mobile: \"\",\r\n            line: \"\",\r\n            email: \"\"\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>แก้ไขข้อมูลผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Edit user information</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Label\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Label\r\n                                        title=\"ชื่อ\"\r\n                                        value={userInfo.first_name}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Label\r\n                                        title=\"นามสกุล\"\r\n                                        value={userInfo.last_name}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <SelectBox\r\n                                        title=\"เลือกเวลาในการ Reset password\"\r\n                                        setValue={setHoldTime}\r\n                                        value={holdTime}\r\n                                        items={itemSelectBoxsHoldTime}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.hold_time}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่ Reset password\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                className={classes.btnSave}\r\n                                onClick={onResetPasswordClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>lock_reset</Icon>}\r\n                            >Reset Password</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction,\r\n    GetUserByID,\r\n    ResetPasswordUserAction,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserResetPassword);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserAddOrDeleteListComapnySelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadListCompanyListSelectCompanyForm();\r\n    }, []);\r\n    async function loadListCompanyListSelectCompanyForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadListCompanyListSelectCompanyForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-addordelete-listcompany-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการที่จะเข้าไป เพิ่ม/ลด โครงการในการดูแลของผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for add/delete comapny list</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddOrDeleteListComapnySelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserAddOrDeleteListCompanyList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadAddOrDeleteCompanyForm();\r\n    }, []);\r\n    async function loadAddOrDeleteCompanyForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-addordelete-listcompany-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadAddOrDeleteCompanyForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-addordelete-listcompany\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>เลือก User เพื่อเข้าไป เพิ่ม/ลด โครงการในการดูแลผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for add/delete comapny list</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddOrDeleteListCompanyList);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, ADD_OR_DELETE_COMPANY_LIST_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const AddOrDeleteCompanyListUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${ADD_OR_DELETE_COMPANY_LIST_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-addordelete-listcompany-list')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport TransferList from \"components/TransferList/TransferList\"\r\nimport Label from \"components/Label/Label\"\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetCompanyListAllAction } from \"actions/company/company-list.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { AddOrDeleteCompanyListUserAction } from \"actions/user/user-addordelete.action\"\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n} from \"constants/message.constant\"\r\nimport { IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserAddOrDeleteListCompany() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        company_list: null\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        companylist: \"\"\r\n    })\r\n    const [image, setImage] = useState(null)\r\n    const [remark, setRemark] = useState(\"\");\r\n    const [companyListItemRight, setCompanyListItemRight] = useState([]);\r\n    const [companyListItemLeft, setCompanyListItemLeft] = useState([]);\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-addordelete-listcompany-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-addordelete-listcompany-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyListAllAction(history, authStore))\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-addordelete-listcompany-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                const company_list = JSON.parse(result.company_list)\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name:result.first_name_th,\r\n                    last_name:result.last_name_th,\r\n                    company_list,\r\n                })\r\n\r\n            }\r\n        }\r\n    }\r\n    if (Store.companyListGetAllReducer.result.length > 0 && companyListItemLeft.length === 0 && companyListItemRight.length === 0 && userInfo.company_list) {\r\n        const company_list_from_get = userInfo.company_list ? userInfo.company_list : [];\r\n\r\n        const company_list_right = company_list_from_get.map((comList) => {\r\n            const comp_list = Store.companyListGetAllReducer.result.map(item => {\r\n                return { value: item.company_name, id: item.company_id }\r\n            }).filter(fil => fil.id == comList)\r\n            return comp_list[0];\r\n        }).filter(fil => fil.id != Store.companySelectedReducer.result.company_id)\r\n\r\n        const company_list_left = Store.companyListGetAllReducer.result.map(item => {\r\n            return { value: item.company_name, id: item.company_id }\r\n        }).filter(function (fil) {\r\n            return company_list_from_get.indexOf(fil.id) < 0\r\n        })\r\n\r\n\r\n        setCompanyListItemRight(company_list_right);\r\n        setCompanyListItemLeft(company_list_left);\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onChangeAddOrDeleteCompanyListClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const company_list_right = companyListItemRight.map(item => item.id)\r\n        const company_list = [company_id, ...company_list_right]\r\n        const valuesObj = {\r\n            image,\r\n            company_list: JSON.stringify(company_list),\r\n            remark,\r\n            company_id: company_id.toString(),\r\n            employee_id: employee_id.toString()\r\n        }\r\n        if (addOrDeleteCompanyListUserMiddleware(valuesObj)) {\r\n            dispatch(AddOrDeleteCompanyListUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function addOrDeleteCompanyListUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.image) {\r\n            swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_NOTSELECTIMAGE })\r\n            return false;\r\n        } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n            swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_FILE_IMAGE_INVALID })\r\n            return false;\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            privilege: \"\",\r\n            image: \"\",\r\n            remark: \"\",\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เพิ่ม/ลด โครงการในการดูแลของผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Add/delete company list</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={5} md={5}>\r\n                                    <Label\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={7} md={7}>\r\n                                    <Label\r\n                                        title=\"ชื่อ-นามสกุล\"\r\n                                        value={`${userInfo.first_name} ${userInfo.last_name}`}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <h4 style={{ textAlign: \"center\" }}>เลือกโครงการที่ดูแลเพิ่มเติม</h4>\r\n                                                </GridItem>\r\n                                                <br></br>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <TransferList\r\n                                                        titleLeft=\"โครงการที่ยังไม่เลือก\"\r\n                                                        titleRight=\"โครงการที่ถูกเลือก\"\r\n                                                        leftItems={companyListItemLeft}\r\n                                                        setLeftItems={setCompanyListItemLeft}\r\n                                                        rightItems={companyListItemRight}\r\n                                                        setRightItems={setCompanyListItemRight}\r\n                                                    />\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <InputFile\r\n                                        title=\"เลือกรูปภาพหลักฐานการแจ้งเปลี่ยนแปลงโครงการที่ผู้ใช้งานดูแล\"\r\n                                        setValue={setImage}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.image}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่เปลี่ยนแปลงโครงการที่ผู้ใช้งานดูแล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"primary\"\r\n                                onClick={onChangeAddOrDeleteCompanyListClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >บันทึก</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyListGetAllReducer }) => ({ mainReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetCompanyListAllAction,\r\n    GetUserByID,\r\n    AddOrDeleteCompanyListUserAction,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddOrDeleteListCompany);","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"components/Navbars/Navbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\nimport secondRoutes from \"secondroutes.js\"\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\n// import imagine1 from \"assets/img/sidebar-1.jpg\";\r\n// import imagine2 from \"assets/img/sidebar-2.jpg\";\r\nimport imagine3 from \"./images/sidebar-3.jpg\";\r\n// import imagine4 from \"assets/img/sidebar-4.jpg\";\r\n// import bgImage from \"assets/img/sidebar-2.jpg\";\r\nimport logo from \"./images/logo-big.svg\";\r\nimport PageLoading from \"views/ErrorPage/PageLoading\"\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nlet ps;\r\n\r\nconst switchRoutes = (\r\n  <Switch>\r\n    {routes.map((prop, key) => {\r\n      if (prop.layout === \"\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n      return null;\r\n    })}\r\n    {secondRoutes.map((prop, key) => {\r\n      if (prop.layout === \"\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n      return null;\r\n    })}\r\n    <Redirect from=\"/\" to=\"/main\" />\r\n  </Switch>\r\n);\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Admin({ ...rest }) {\r\n  // styles\r\n  const classes = useStyles();\r\n  const authStore = useSelector(store => store);\r\n  const mainStore = authStore.mainReducer;\r\n  const loginStore = authStore.loginReducer.result;\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/maps\";\r\n  };\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, [mainPanel]);\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <PageLoading\r\n        showModal={mainStore.isFetching}\r\n      />\r\n      <Sidebar\r\n        rtlActive={false}\r\n        routes={routes}\r\n        secondRoutes={secondRoutes}\r\n        logoText={\"Web Admin\"}\r\n        logo={logo}\r\n        image={imagine3}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color={\"orange\"}\r\n        {...rest}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          color={\"info\"}\r\n          routes={routes}\r\n          loginStore={loginStore}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          {...rest}\r\n        />\r\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n        {getRoute() ? (\r\n          <div className={classes.content}>\r\n            <div className={classes.container}>{switchRoutes}</div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.map}>{switchRoutes}</div>\r\n        )}\r\n        {getRoute() ? <Footer /> : null}\r\n        {/* <FixedPlugin\r\n          handleImageClick={handleImageClick}\r\n          handleColorClick={handleColorClick}\r\n          bgColor={color}\r\n          bgImage={image}\r\n          handleFixedClick={handleFixedClick}\r\n          fixedClasses={fixedClasses}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.10.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n\r\nimport HomeImportData from \"views/Home/import/Home-import\";\r\nimport HomeList from \"views/Home/home-list/Home-list\"\r\nimport VillagerImportData from \"views/Villager/import/Villager-import\"\r\nimport VillagerList from \"views/Villager/villager-list/Villager-list\"\r\nimport UserAddSelectCompany from \"views/user/add/User-add-select-company\"\r\nimport UserAdd from \"views/user/add/User-add\"\r\nimport UserEditSelectCompany from \"views/user/edit-info/User-edit-select-company\"\r\nimport UserEditList from \"views/user/edit-info/User-edit-list\"\r\nimport UserEditInfo from \"views/user/edit-info/User-edit-info\"\r\nimport UserChangePrivilegeSelectCompany from \"views/user/change-privilege/User-change-privilege-select-company\"\r\nimport UserChangePrivilegeList from \"views/user/change-privilege/User-change-privilege-list\"\r\nimport UserChangePrivilege from \"views/user/change-privilege/User-change-privilege\"\r\nimport UserChangeComapnySelectCompany from \"views/user/change-main-company/User-change-company-select-company\"\r\nimport UserChangeCompanyList from \"views/user/change-main-company/User-change-company-list\"\r\nimport UserChangeCompany from \"views/user/change-main-company/User-change-company\"\r\nimport UserResetPassowrdSelectCompany from \"views/user/reset-password/User-reset-password-select-company\"\r\nimport UserResetPasswordList from \"views/user/reset-password/User-reset-password-select-user\"\r\nimport UserResetPassword from \"views/user/reset-password/User-reset-password\"\r\nimport UserAddOrDeleteListComapnySelectCompany from \"views/user/addordelete-companylist/User-addordelete-listcompany-select-company\"\r\nimport UserAddOrDeleteListCompanyList from \"views/user/addordelete-companylist/User-addordelete-listcompany-list\"\r\nimport UserAddOrDeleteListCompany from \"views/user/addordelete-companylist/User-addordelete-listcompany\"\r\n// core components/views for RTL layout\r\n\r\nconst secondRoutes = [\r\n  {\r\n    path: \"/home-import\",\r\n    component: HomeImportData,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/home-list\",\r\n    component: HomeList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/villager-import\",\r\n    component: VillagerImportData,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/villager-list\",\r\n    component: VillagerList,\r\n    layout: \"\",\r\n  }, {\r\n    path: \"/user-add-select\",\r\n    component: UserAddSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-add\",\r\n    component: UserAdd,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-edit-info-select\",\r\n    component: UserEditSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-edit-list\",\r\n    component: UserEditList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-edit-info\",\r\n    component: UserEditInfo,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-privilege-select\",\r\n    component: UserChangePrivilegeSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-privilege-list\",\r\n    component: UserChangePrivilegeList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-privilege\",\r\n    component: UserChangePrivilege,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-company-select\",\r\n    component: UserChangeComapnySelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-company-list\",\r\n    component: UserChangeCompanyList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-company\",\r\n    component: UserChangeCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-reset-password-listcompany-select\",\r\n    component: UserResetPassowrdSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-reset-password-list\",\r\n    component: UserResetPasswordList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-reset-password\",\r\n    component: UserResetPassword,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-addordelete-listcompany-select\",\r\n    component: UserAddOrDeleteListComapnySelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-addordelete-listcompany-list\",\r\n    component: UserAddOrDeleteListCompanyList,\r\n    layout: \"\",\r\n  }, {\r\n    path: \"/user-addordelete-listcompany\",\r\n    component: UserAddOrDeleteListCompany,\r\n    layout: \"\",\r\n  },\r\n  \r\n];\r\n\r\nexport default secondRoutes;\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst appStyle = (theme) => ({\r\n  wrapper: {\r\n    position: \"relative\",\r\n    top: \"0\",\r\n    height: \"100vh\",\r\n  },\r\n  mainPanel: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    ...transition,\r\n    maxHeight: \"100%\",\r\n    width: \"100%\",\r\n    overflowScrolling: \"touch\",\r\n  },\r\n  content: {\r\n    marginTop: \"70px\",\r\n    padding: \"30px 15px\",\r\n    minHeight: \"calc(100vh - 123px)\",\r\n  },\r\n  container,\r\n  map: {\r\n    marginTop: \"70px\",\r\n  },\r\n});\r\n\r\nexport default appStyle;\r\n","export default __webpack_public_path__ + \"static/media/sidebar-3.e667b13e.jpg\";","export default __webpack_public_path__ + \"static/media/logo-big.2fbd0c23.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function PageLoading(props) {\r\n    const { showModal } = props;\r\n    const classes = useStyles();\r\n    // const handleOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    // };\r\n\r\n    return (\r\n        <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={showModal}\r\n            // onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            disableBackdropClick={false}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            <Fade in={showModal}>\r\n                <CircularProgress\r\n                    color=\"secondary\"\r\n                    size=\"100px\"\r\n                />\r\n            </Fade>\r\n        </Modal>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-big.2fbd0c23.svg\";","import { useState } from 'react'\r\nimport swal from 'sweetalert';\r\nimport { isNotEngCharOrNumber } from 'utils/formatCharacter.util'\r\nimport { connect } from 'react-redux'\r\nimport { loginAction } from '../../actions/login/login.action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from './logo-big.svg'\r\n\r\nfunction LoginPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    //---------------State\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function onLoginClick(e) {\r\n        e.preventDefault();\r\n        if (loginMiddleware()) {\r\n            dispatch(loginAction(history, { username: userName, password: password }))\r\n        }\r\n    }\r\n    function loginMiddleware() {\r\n        if (!userName) {\r\n            swal(\"Warning!\", \"กรุณากรอก Username\", \"warning\");\r\n            return false;\r\n        } else if (!password) {\r\n            swal(\"Warning!\", \"กรุณากรอก Password\", \"warning\");\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(userName)) {\r\n            swal(\"Warning!\", \"Username ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น\", \"warning\");\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(password)) {\r\n            swal(\"Warning!\", \"Password ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น\", \"warning\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    //-----------------------------------------------\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"container-login100\">\r\n                <div className=\"wrap-login100\">\r\n                    <div className=\"login100-pic js-tilt\" data-tilt>\r\n                        <img src={logo} alt=\"IMG\" />\r\n                    </div>\r\n                    <form className=\"login100-form validate-form\">\r\n                        <span className=\"login100-form-title\">\r\n                            Bannayuu Admin Login\r\n                    </span>\r\n                        {/* <div className=\"wrap-input100 validate-input\" data-validate=\"Valid email is required: ex@abc.xyz\"> */}\r\n                        <div className=\"wrap-input100 validate-input\" data-validate=\"Username is required\">\r\n                            <input className=\"input100\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                placeholder=\"Username\"\r\n                                value={userName}\r\n                                onChange={event => setUserName(event.target.value)}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i className=\"fa fa-user\" aria-hidden=\"true\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\r\n                            <input\r\n                                className=\"input100\"\r\n                                type=\"password\"\r\n                                name=\"pass\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={event => setPassword(event.target.value)}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i className=\"fa fa-lock\" aria-hidden=\"true\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"container-login100-form-btn\">\r\n                            <button\r\n                                className=\"login100-form-btn\"\r\n                                onClick={e => onLoginClick(e)}\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"text-center p-t-136\">\r\n                            <a className=\"txt2\" href=\"#\">\r\n                                Power by Creative Innovation Technology\r\n                            </a>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ loginReducer,mainReducer }) => ({ loginReducer,mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    loginAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","function Page500(){\r\n    return (\r\n        <div>\r\n            <h1>Page 500</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Page500;","import {\r\n    HTTP_LOGIN_FETCHING,\r\n    HTTP_LOGIN_SUCCESS,\r\n    HTTP_LOGIN_FAILED,\r\n    HTTP_LOGIN_CLEARVALUES,\r\n    LOGIN_FAILED_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from '../../constants/constants.utils'\r\n\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nlet globalState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    let localStr = null;\r\n    let localStageReturn = state;\r\n    switch (type) {\r\n        case HTTP_LOGIN_FETCHING:\r\n            return {\r\n                result: null,\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null\r\n            }\r\n        case HTTP_LOGIN_SUCCESS:\r\n            globalState = {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n            };\r\n            localStorage.setItem('authStorage', JSON.stringify(globalState))\r\n            return globalState\r\n        case HTTP_LOGIN_FAILED:\r\n            globalState = {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: true,\r\n                message: LOGIN_FAILED_MESSAGE,\r\n            };\r\n            localStorage.setItem('authStorage', JSON.stringify(globalState))\r\n            return globalState\r\n        case HTTP_LOGIN_CLEARVALUES:\r\n            localStorage.removeItem('authStorage')\r\n            return {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: null,\r\n            };\r\n        default:\r\n            localStr = localStorage.getItem('authStorage')\r\n            localStageReturn = !localStr ? state : JSON.parse(localStr);\r\n            return localStageReturn;\r\n    }\r\n}\r\n","import {\r\n    HTTP_LOGOUT_FETCHING,\r\n    HTTP_LOGOUT_SUCCESS,\r\n    SUCCESS_MESSAGE\r\n} from '../../constants/constants.utils'\r\n\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nexport default (state = initialState, { type }) => {\r\n    switch (type) {\r\n        case HTTP_LOGOUT_FETCHING:\r\n            return {\r\n                result: null,\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null\r\n            }\r\n        case HTTP_LOGOUT_SUCCESS:\r\n            localStorage.setItem('authStorage', null)\r\n            return {\r\n                result: SUCCESS_MESSAGE,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_FETCHING,\r\n    HTTP_SUCCESS,\r\n    HTTP_FAILED,\r\n    SUCCESS_MESSAGE,\r\n    FAILED_MESSAGE,\r\n} from '../../constants/constants.utils'\r\n\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nexport default (state = initialState, { type }) => {\r\n    switch (type) {\r\n        case HTTP_FETCHING:\r\n            return {\r\n                result: null,\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null\r\n            }\r\n        case HTTP_SUCCESS:\r\n            return {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE\r\n            }\r\n        case HTTP_FAILED:\r\n            return {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: FAILED_MESSAGE\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_SELECT_COMPANY_SUCCESS,\r\n    HTTP_SELECT_COMPANY_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_SELECT_COMPANY_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_SELECT_COMPANY_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_COMPANY_ALL_FETCHING,\r\n    HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_ALL_FAILED,\r\n    HTTP_GET_COMPANY_ALL_CLEARSTORE,\r\n    HTTP_GET_COMPANY_ALL_GETDATASUCCESS,\r\n    SUCCESS_MESSAGE,\r\n    CLEAR_VALUE_MESSAGE,\r\n    GET_DATA_SUCCESSFULLY\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_GET_COMPANY_ALL_FAILED,\r\n\r\n} from 'constants/message.constant'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_COMPANY_ALL_FETCHING:\r\n            return {\r\n                result: [],\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null,\r\n                isReady: false\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_FAILED:\r\n            return {\r\n                result: [],\r\n                isFetching: false,\r\n                isError: true,\r\n                message: MESSAGE_GET_COMPANY_ALL_FAILED,\r\n                isReady: false\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_CLEARSTORE:\r\n            return {\r\n                result: [],\r\n                isFetching: false,\r\n                isError: false,\r\n                message: CLEAR_VALUE_MESSAGE,\r\n                isReady:false\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_GETDATASUCCESS:\r\n            return {\r\n                result: [],\r\n                isFetching: false,\r\n                isError: false,\r\n                message: GET_DATA_SUCCESSFULLY,\r\n                isReady:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_COMPANY_LIST_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_LIST_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_COMPANY_LIST_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_COMPANY_LIST_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_HOME_SELECT_COMPANY_SUCCESS,\r\n    HTTP_HOME_CLEAR_COMPANY,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_HOME_SELECT_COMPANY_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_HOME_CLEAR_COMPANY:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_HOME_ALL_SUCCESS,\r\n    HTTP_GET_HOME_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_HOME_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_HOME_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_VILLAGER_SELECT_COMPANY_SUCCESS,\r\n    HTTP_VILLAGER_CLEAR_COMPANY,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_VILLAGER_SELECT_COMPANY_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_VILLAGER_CLEAR_COMPANY:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    HTTP_GET_VILLAGER_ALL_SUCCESS,\r\n    HTTP_GET_VILLAGER_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_VILLAGER_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_VILLAGER_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_PRIVILEGE_ALL_SUCCESS,\r\n    HTTP_GET_PRIVILEGE_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_PRIVILEGE_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_PRIVILEGE_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_USER_LIST_ALL_SUCCESS,\r\n    HTTP_GET_USER_LIST_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_USER_LIST_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_USER_LIST_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_SELECT_USER_SUCCESS,\r\n    HTTP_SELECT_USER_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_SELECT_USER_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_SELECT_USER_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport loginReducer from 'reducers/login/login.reducer'\r\nimport logoutReducer from 'reducers/logout/logout.reducer'\r\nimport mainReducer from 'reducers/main/main.reducer'\r\nimport companySelectedReducer from 'reducers/company/company-selected.reducer'\r\nimport companyGetAllReducer from 'reducers/company/company-get-all.reducer'\r\nimport companyListGetAllReducer from 'reducers/company/company-list-get-all.recuder'\r\nimport homeImportExcelReducer from 'reducers/home/home-import-excel.reducer'\r\nimport homeGetAllReducer from 'reducers/home/home-get-all.reducer'\r\nimport villagerImportExcelReducer from 'reducers/villager/villager-import-excel.reducer'\r\nimport villagerGetAllReducer from 'reducers/villager/villager-get-all.reducer'\r\nimport privilegeGetAllReducer from 'reducers/privilege/privilege-get-all.reducer'\r\nimport userListGetAllReducer from 'reducers/user/user-list-get-all.reducer'\r\nimport userSelectReducer from 'reducers/user/user-select.reducer'\r\nexport default combineReducers({\r\n    loginReducer,\r\n    logoutReducer,\r\n    mainReducer,\r\n    companySelectedReducer,\r\n    companyGetAllReducer,\r\n    companyListGetAllReducer,\r\n    homeImportExcelReducer,\r\n    homeGetAllReducer,\r\n    villagerImportExcelReducer,\r\n    villagerGetAllReducer,\r\n    privilegeGetAllReducer,\r\n    userListGetAllReducer,\r\n    userSelectReducer\r\n})","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.10.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// core components\r\nimport Admin from \"layouts/Admin.js\";\r\nimport LoginPage from \"views/Login/Login-page.js\"\r\nimport Page500 from \"views/ErrorPage/Page500\"\r\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\r\n//redux store\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\"\r\n// import logger from \"redux-logger\"\r\nimport { Provider } from \"react-redux\"\r\nimport reducers from \"reducers\"\r\n//redux devtool\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// const store = createStore(reducers, \r\n//   composeWithDevTools(applyMiddleware(thunk, logger)),\r\n//   );\r\n\r\n  const store = createStore(reducers, \r\n    composeWithDevTools(applyMiddleware(thunk)),\r\n    );\r\n  \r\nconst ReduxApp = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={LoginPage} />\r\n        <Route exact path=\"/page500\" component={Page500} />\r\n        <Route path=\"/\" component={Admin} />\r\n        <Redirect from=\"/\" to=\"/main\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\nReactDOM.render(\r\n  ReduxApp,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}