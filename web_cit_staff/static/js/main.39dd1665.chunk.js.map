{"version":3,"sources":["assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","constants/constants.utils.js","constants/api-route.js","utils/httpClient.utils.js","constants/message.constant.js","utils/funcImage.utils.js","actions/company/company-edit.action.js","actions/main/main.action.js","actions/login/login.action.js","actions/logout/logout.action.js","components/Navbars/AdminNavbarLinks.js","assets/jss/material-dashboard-react/components/customInputStyle.js","components/CustomInput/CustomInput.js","assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js","components/Navbars/RTLNavbarLinks.js","views/Main/Main-page.js","views/Company/Add/Company-style.js","components/Grid/GridItem.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","assets/jss/material-dashboard-react/components/cardFooterStyle.js","components/Card/CardFooter.js","components/DateTime/DateMaterialUi.js","components/Select/SelectBox.js","components/Select/SelectBox-style.js","views/Company/data/Company-data.js","assets/jss/material-dashboard-react/components/cardIconStyle.js","components/Card/CardIcon.js","components/CheckBox/CheckBox.js","components/RadioBox/RadioBox.js","components/Input/InputFile.js","actions/company/company-add.action.js","views/Company/Add/Company-add.js","components/Table/TableCustom.js","views/Company/Edit/data/Company-edit-data.js","components/Button/ButtonSearchStyle.js","components/Button/ButtonSearch.js","views/Company/Edit/Company-edit-style.js","components/Avatar/Avatar-form.js","components/Label/Label.js","utils/modalStyle.utils.js","views/Company/Edit/modal/Company-edit-modal-info.js","views/Company/Edit/modal/Company-edit-modal-disable.js","actions/company/company-disable.action.js","actions/company/company-enable.action.js","views/Company/Edit/modal/Company-edit-modal.js","components/SvgIconStyle.js","components/LogoExcel.js","components/Excel/ExcelExportWithExcelJs.js","views/Company/excel/ExportExcel.js","views/Company/Edit/Company-edit.js","views/Home/main/Home-main-style.js","actions/home/home-import-excel.action.js","actions/home/home-get-all.action.js","views/Home/data/Home-data.js","views/Home/main/Home-main.js","actions/villager/villager-import-excel.action.js","actions/villager/villager-get-all.action.js","views/Villager/data/Villager-data.js","views/Villager/main/Villager-main-style.js","views/Villager/main/Villager-main.js","views/styles/card.style.js","utils/btnStyle.utils.js","actions/company/company-selected.action.js","views/user/main/User-main.js","actions/slot/get/slot-get-not-use.controller.js","views/slot/data/data.js","views/slot/main/SlotMainPageSelectCompanyPage.js","views/slot/main/SlotMainPageSelectCompanyStyle.js","routes.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","hooks/useRouteName.js","assets/jss/material-dashboard-react/components/footerStyle.js","components/Footer/Footer.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","views/Home/import/Home-import-style.js","components/Excel/ExcelFormMaterialUi.js","views/Home/import/Home-import.js","views/Home/excel/ExportExcel.js","views/Home/home-list/Home-list.js","views/Villager/import/Villager-import-style.js","views/Villager/import/Villager-import.js","actions/villager/villager-disable.action.js","actions/villager/villager-enable.action.js","views/Villager/excel/ExportExcel.js","views/Villager/villager-list/Villager-list.js","views/user/add/User-add-select-company.js","components/TransferList/TransferList.js","actions/privilege/privilege-all.action.js","actions/company/company-list.action.js","utils/formatCharacter.util.js","views/user/add/User-add.js","actions/user/user-add.action.js","views/user/edit-info/User-edit-select-company.js","actions/user/user-get-list.action.js","actions/user/user-select.action.js","views/user/data/User.data.js","views/user/edit-info/User-edit-list.js","actions/user/user-get-info.action.js","actions/user/user-edit-info.action.js","views/user/edit-info/User-edit-info.js","views/user/change-privilege/User-change-privilege-select-company.js","views/user/change-privilege/User-change-privilege-list.js","actions/user/user-change-privilege.action.js","views/user/change-privilege/User-change-privilege.js","actions/company/company-list-not-cit-company.action.js","views/user/change-main-company/User-change-company-select-company.js","views/user/change-main-company/User-change-company-list.js","views/user/change-main-company/User-change-company-modal.js","actions/user/user-change-main-company.action.js","views/user/change-main-company/User-change-company.js","views/user/reset-password/User-reset-password-select-company.js","views/user/reset-password/User-reset-password-select-user.js","actions/user/user-reset-password.action.js","views/user/reset-password/User-reset-password.js","views/user/addordelete-companylist/User-addordelete-listcompany-select-company.js","views/user/addordelete-companylist/User-addordelete-listcompany-list.js","actions/user/user-addordelete.action.js","views/user/addordelete-companylist/User-addordelete-listcompany.js","actions/slot/get/slot-get-max.controller.js","views/slot/notuse/SlotNotUseStyle.js","components/Modal/DialogModal.js","actions/slot/add/slot-add.action.js","views/slot/add/SlotAddModal.js","views/slot/add/SlotAddStyle.js","views/slot/notuse/SlotNotUsePage.js","layouts/Admin.js","secondroutes.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","layouts/images/sidebar-3.jpg","layouts/images/logo-big.svg","views/ErrorPage/PageLoading.js","views/Login/logo-big.svg","views/Login/Login-page.js","views/ErrorPage/Page500.js","reducers/login/login.reducer.js","reducers/logout/logout.reducer.js","reducers/main/main.reducer.js","reducers/company/company-selected.reducer.js","reducers/company/company-get-all.reducer.js","reducers/company/company-list-get-all.recuder.js","reducers/home/home-import-excel.reducer.js","reducers/home/home-get-all.reducer.js","reducers/villager/villager-import-excel.reducer.js","reducers/villager/villager-get-all.reducer.js","reducers/privilege/privilege-get-all.reducer.js","reducers/user/user-list-get-all.reducer.js","reducers/user/user-select.reducer.js","reducers/slot/slot-get-max.reducer.js","reducers/slot/slot-get-not-use.reducer.js","reducers/index.js","index.js"],"names":["hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","drawerWidth","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","whiteColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","buttonStyle","button","minWidth","backgroundColor","position","fontSize","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","display","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","useStyles","makeStyles","styles","RegularButton","props","classes","children","size","className","muiClasses","rest","btnClasses","classNames","Button","dropdownStyle","theme","buttonLink","breakpoints","down","links","zIndex","linkText","popperClose","popperResponsive","float","WebkitBoxShadow","popperNav","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","search","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","SUCCESS_MESSAGE","FAILED_MESSAGE","CLEAR_VALUE_MESSAGE","GET_DATA_SUCCESSFULLY","HTTP_FETCHING","HTTP_SUCCESS","HTTP_FAILED","LOGIN_FAILED_MESSAGE","HTTP_LOGIN_CLEARVALUES","HTTP_LOGIN_FETCHING","HTTP_LOGIN_SUCCESS","HTTP_LOGIN_FAILED","HTTP_LOGOUT_FETCHING","HTTP_LOGOUT_SUCCESS","HTTP_SELECT_COMPANY_SUCCESS","HTTP_SELECT_COMPANY_CLEAR","HTTP_GET_COMPANY_ALL_FETCHING","HTTP_GET_COMPANY_ALL_SUCCESS","HTTP_GET_COMPANY_ALL_FAILED","HTTP_GET_COMPANY_ALL_CLEARSTORE","HTTP_GET_COMPANY_ALL_GETDATASUCCESS","HTTP_GET_COMPANY_LIST_ALL_SUCCESS","HTTP_GET_COMPANY_LIST_CLEAR","HTTP_HOME_SELECT_COMPANY_SUCCESS","HTTP_HOME_CLEAR_COMPANY","HTTP_GET_HOME_ALL_SUCCESS","HTTP_GET_HOME_CLEAR","HTTP_VILLAGER_SELECT_COMPANY_SUCCESS","HTTP_GET_VILLAGER_ALL_SUCCESS","HTTP_VILLAGER_CLEAR_COMPANY","HTTP_GET_VILLAGER_CLEAR","HTTP_GET_PRIVILEGE_ALL_SUCCESS","HTTP_GET_PRIVILEGE_CLEAR","HTTP_GET_USER_LIST_ALL_SUCCESS","HTTP_GET_USER_LIST_CLEAR","HTTP_SELECT_USER_SUCCESS","HTTP_SELECT_USER_CLEAR","HTTP_GET_SLOT_NOTUSE_SUCCESS","HTTP_GET_SLOT_NOTUSE_CLEAR","HTTP_GET_SLOT_MAX_SUCCESS","HTTP_GET_SLOT_MAX_CLEAR","MAIN_URL","GET_COMPANY_BYID_API","GET_USER_BYID_API","httpClientGetMethod","a","urlClient","valuesObj","access_token","config","headers","Authorization","url","axios","get","then","res","data","catch","err","console","log","httpClientGetMethodWithPost","authStore","bodyParameters","post","httpClientPOSTMethodNotAuth","result","error","message","httpClientPOSTMethodVerifyAuth","httpClientPOSTMethodFormData","bodyFormData","FormData","Object","entries","key","value","append","MESSAGE_COMPANYCODE_NOTFOUND","MESSAGE_COMPANYNAME_NOTFOUND","MESSAGE_PRICEOFCARDLOST_NOTFOUND","MESSAGE_NOTSELECT_PRO_COMPANY","MESSAGE_NOTSELECTIMAGE","MESSAGE_FILE_IMAGE_INVALID","MESSAGE_GET_COMPANY_ALL_FAILED","MESSAGE_REMARKNOTFOUND","MESSAGE_EXCELROW_NOTFOUND","MESSAGE_EXCELCOLUMN_NOTCOMPLETE","MESSAGE_COMPANYID_NOTFOUND","MESSAGE_FIRST_NAME_NOTFOUND","MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL","MESSAGE_LAST_NAME_NOTFOUND","MESSAGE_LAST_NAME_PROHIBIT_SPECIAL","MESSAGE_ADDRESS_PROHITBIT_SPECIAL","MESSAGE_MOBILE_NOT_NUMBER","MESSAGE_MOBILE_NOT_10_CHARACTER","MESSAGE_LINE_FORMAT_INVALID","MESSAGE_EMAIL_FORMAT_INVALID","MESSAGE_NOT_SELECT_PRIVILEGE","MESSAGE_USER_NOT_FOUND","MESSAGE_USER_NOT_END_OR_NUMBER","MESSAGE_PASSWORD_NOT_FOUND","MESSAGE_PASSWORD_NOT_END_OR_NUMBER","MESSAGE_PASSWORD_NOT_EQUAL","MESSAGE_COMPANY_ID_NOTFOUND","MESSAGE_REMARK_NOT_FOUND","MESSAGE_REMARK_SPECIAL","MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY","MESSAGE_NOT_SELECT_NEW_COMPANY","MESSAGE_EMPLOYEE_ID_NOTFOUND","MESSAGE_HOLDTIME_NOT_FOUND","MESSAGE_HOME_LINE_ID_NOT_FOUND","getExtension","filename","parts","split","isImage","toLowerCase","setGetCompanyAllSuccess","payload","type","GetCompanyAllAction","history","credential","dispatch","setFetching","setFailed","swal","setSuccess","GetCompanyByID","editCompanyMiddleware","company_code","company_name","price_of_cardloss","company_promotion","image","name","remark","checkJWTTOKENAction","loginReducer","resetValuesAll","push","loginAction","logoutAction","mapDispatchToProps","connect","logoutReducer","useDispatch","useHistory","React","useState","openProfile","setOpenProfile","handleCloseProfile","onLogOutClick","window","innerWidth","onClick","event","contains","target","currentTarget","icons","Hidden","mdUp","implementation","Popper","open","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","id","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","MenuItem","Divider","light","customInputStyle","underline","borderColor","borderWidth","underlineError","underlineSuccess","labelRoot","labelRootError","labelRootSuccess","feedback","formControl","labelRTL","CustomInput","formControlProps","labelText","labelProps","inputProps","rtlActive","labelClasses","underlineClasses","undefined","newInputProps","maxLength","minLength","step","FormControl","InputLabel","htmlFor","Input","root","RTLNavbarLinks","setOpen","handleToggle","handleClose","placeholder","mainReducer","useSelector","store","useEffect","cardCategoryWhite","cardTitleWhite","grid","GridItem","Grid","item","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","borderBottom","overflow","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","icon","cardHeaderClasses","cardBodyStyle","cardBody","flex","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","cardFooterStyle","cardFooter","alignItems","cardFooterProfile","cardFooterPlain","cardFooterStats","cardFooterChart","CardFooter","cardFooterClasses","DateMaterialUi","selectedDate","setSelectedDate","currentTime","moment","utils","DateFnsUtils","FormLabel","format","label","onChange","ampm","formControlSelectBox","SelectBox","setValue","items","itemsSelectElem","map","text","Select","labelId","onClose","onOpen","itemSelectBoxs","itemRadioBoxs","cardIconStyle","cardIcon","CardIcon","cardIconClasses","CheckBox","setCheck","check","FormControlLabel","control","Checkbox","checked","RadioBox","radioItemsElem","Radio","component","RadioGroup","InputFile","fullWidth","accept","files","CreateCompanyAction","createCompanyMiddleware","location","reload","Store","state","dStart","dEnd","add","dateStart","setDateStart","dateEnd","setDateEnd","promotion","setPromotion","checkCal","setCheckCal","checkSecureEstampVisitor","setCheckSecureEstampVisitor","checkSecureEstampBooking","setCheckSecureEstampBooking","checkLineNotificationBoardcast","setCheckLineNotificationBoardcast","selectExceptDay","setSelectExceptDay","setImage","companyInfo","setCompanyInfo","xs","md","date","newMoment","subtract","Icon","cardCategory","toString","company_start_date","set","hour","minute","company_expire_date","calculate_enable","except_time_split_from_day","booking_estamp_verify","visitor_estamp_verify","line_notification_broadcast","useStyles1","flexShrink","spacing","TableCustom","useTheme","count","page","rowsPerPage","onChangePage","IconButton","direction","Math","ceil","max","headerTable","getStatus","status","maxWidth","iconButton","divider","ButtonSearch","searchFunc","setText","InputBase","e","preventDefault","editCompantStyle","tableRowBtn","btnInRow","square","palette","getContrastText","deepOrange","normalStatus","green","expireStatus","red","disableStatus","grey","notopenStatus","yellow","AvatarForm","getStyle","Label","modalStyle","paper","headModalAdd","headModalEdit","btnCancel","btnSave","btnEnable","btnAdd","btnDisable","btnSelect","btnImportExcel","btnUpload","btnNextPage","chipAvailable","chipDisable","CompanyEditModalInfo","setRemark","setLineConfig","lineConfig","statusAvatarElem","formCreateDataElem","create_date","TextField","defaultValue","variant","create_by","formUpdateDataElem","update_date","update_by","formDisableDataElem","delete_date","delete_by","DialogContent","dividers","scroll","company_id","multiline","rows","CompanyEditModalDisable","disableCompanyMiddleware","enableCompanyMiddleware","CompanyEditModal","showModal","setShowModal","company_remark","line_company_data","showFormInfo","setShowFormInfo","showFormDisable","setShowFormDisable","showFormEnable","setShowFormEnable","headerTextModal","setHeaderTextModal","values","getData","JSON","stringify","onCloseModal","loadEditForm","btnDisableElem","btnEditSaveElem","btnEnableElem","endIcon","formInfoElem","formBottomElemInfo","DialogActions","formDisableElem","formBottomElemDisable","formEnableElem","formBottomElemEnable","Dialog","DialogTitle","SvgIconStyle","src","sx","Box","bgcolor","mask","WebkitMask","LogoExcel","propTypes","PropTypes","object","logo","ExcelJs","require","ExcelExportWithExcelJs","fileName","sheetName","table","currentDateText","file_name","sheet_name","columns_count","columns","exportExcelFile","workbook","Workbook","sheet","addWorksheet","addTable","column_index","forEach","column","lengths","v","filter","head","index","rowIndex","row","getRow","getCell","firstCell","address","lastCell","mergeCells","xlsx","writeBuffer","buffer","blob","Blob","URL","createObjectURL","document","createElement","body","appendChild","href","download","click","revokeObjectURL","Excel","reportname","reportName","header_arr","multiDataSet","rowItems","ref","headerRow","totalsRow","showRowStripes","filterButton","generateDataSet","header","useStyles2","companyGetAllReducer","rowsLength","classes2","setPage","setRowsPerPage","emptyRows","min","selectRow","setSelectRow","loadCompanyEditForm","textSearch","company_code_or_name","styleTableHeader","onShowModal","getAttribute","modalEditElem","onSearchClick","Array","isArray","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","slice","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","ActionsComponent","setSelectCompanySuccess","setClearSelectCompany","ImportExcelHomeAction","newCredential","newItems","home_address","setGetHomeAllSuccess","setClearHomeAll","GetHomeAllAction","getHomeMiddleware","goBack","headerHomeListTable","homeImportExcelReducer","homeGetAllReducer","classesModal","loadHomeMainForm","setVillagerSelectCompanySuccess","setVillagerClearSelectCompany","setGetVillagerAllSuccess","setClearVillagerAll","GetVillagerAllAction","getVillagerMiddleware","headerVillagerListTable","villagerCompantStyle","villagerImportExcelReducer","villagerGetAllReducer","btnEdit","classesBtn","setSlotSelectCompanySuccess","setSlotClearSelectCompany","setClearSlotAll","GetSlotNotUseAllAction","getSlotNotUseMiddleware","headerSlotNotUseListTable","dashboardRoutes","path","rtlName","Dashboard","MainPage","layout","Business","CompanyAdd","CompanyEdit","HomeWork","HomeMain","Group","VillagerMain","AccountBalance","UserMain","StyleIcon","SlotMainPageSelectCompanyPage","headerStyle","appBar","appResponsive","Header","routeName","routes","route","indexOf","useRouteName","loginStore","appBarClasses","AppBar","Toolbar","first_name_th","last_name_th","smDown","handleDrawerToggle","footerStyle","footer","bottom","list","inlineBlock","Footer","List","ListItem","Date","getYear","sidebarStyle","drawerPaper","visibility","overflowY","drawerPaperRTL","content","logoLink","logoLinkRTL","logoImage","maxHeight","img","backgroundSize","backgroundPosition","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","orange","sidebarWrapper","overflowScrolling","activePro","stypeLogoHeader","Sidebar","useLocation","activeRoute","pathname","logoText","secondRoutes","prop","listItemClasses","whiteFontClasses","to","activeClassName","ListItemText","disableTypography","brand","alt","Drawer","anchor","ModalProps","keepMounted","backgroundImage","useStylesExcelArea","excelArea","ExcelFormMaterialUi","setItemExcel","file","file_name_string","file_name_array","readXlsxFile","excel_values","acceptedFiles","filesLimit","dropzoneText","getPreviewIcon","fileObject","iconProps","startsWith","Theaters","Description","PictureAsPdf","AttachFile","importExcel","classesExcel","excelItems","setExcelItems","loadHomeImportExcelForm","formExcelElem","find","homeImportReducer","arrExcel","String","itemFromExcel","valueObj","uploadData","home_code","home_id","loadVillagerImportExcelForm","villagerImportReducer","shift","first_name","last_name","tel_number","disableVillagerMiddleware","home_line_id","DisableVillagerAction","refreshFunc","enableVillagerMiddleware","EnableVillagerAction","villager_code","home_line_type","loadVillagerMainForm","onDisableClick","buttons","cancel","confirm","willOk","villager_id","onEnableClick","Chip","not","b","intersection","TransferList","titleLeft","titleRight","leftItems","setLeftItems","rightItems","setRightItems","setChecked","leftChecked","rightChecked","numberOfChecked","handleToggleAll","checkBoxHandle","customList","avatar","indeterminate","subheader","dense","listid","currentIndex","newChecked","splice","ListItemIcon","tabIndex","disableRipple","justify","concat","setGetPrivilegeAllSuccess","GetPrivilegeAllAction","setGetCompanyListAllSuccess","GetCompanyListAllAction","isNotEngCharOrNumber","allnumeric","inputtxt","match","ValidateEmail","mail","ValidateLine","IsProhibitSpecial","IsHomeProbitSpecial","privilegeGetAllReducer","companyListGetAllReducer","mobile","line","email","username","password","password_confirm","userInfo","setUserInfo","privilege","messageErr","setMessageErr","selectPrivilege","setSelectPrivilege","companyListItemRight","setCompanyListItemRight","companyListItemLeft","setCompanyListItemLeft","companySelectedReducer","loadMainForm","privilegeItems","employee_privilege_type","employee_privilege_id","employee_privilege_name_th","fil","onBlur","pass","employee_type","company_list","moblie","createUserMiddleware","CreateUserAction","setGetUserListAllSuccess","setSelectUserSuccess","setClearSelectUser","userHeaderTable","itemSelectBoxsHoldTime","userListGetAllReducer","full_name","employee_id","GetUserByID","EditUserAction","companyStore","userStore","userSelectReducer","employee_mobile","employee_line","employee_email","editInfoUserMiddleware","ChangePrivilegeUserAction","changePrivilegeUserMiddleware","GetCompanyListAndNotCitCompanyAllAction","loadChangeCompanyForm","UserChangeCompanyModal","setSelectNewCompany","onSelectCompay","overflowX","ChangeMainCompanyUserAction","selectNewCompany","new_company","old_company_id","new_company_id","changeMainCompanyUserMiddleware","loadCompanyResetPasswordForm","loadUserListForm","ResetPasswordUserAction","url_reset_password","hold_time","holdTime","setHoldTime","resetPasswordUserMiddleware","loadListCompanyListSelectCompanyForm","loadAddOrDeleteCompanyForm","AddOrDeleteCompanyListUserAction","companylist","parse","company_list_from_get","company_list_right","comList","company_list_left","addOrDeleteCompanyListUserMiddleware","GetSlotMaxAction","TransitionsModal","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","action","CardContent","addSlotMiddleware","guardhouse_id","guardhouse_code","slot_count","AddSlotAction","slotInfo","setSlotInfo","ps","slotNotUseReducer","searchObj","loadSlotMainForm","slotMaxReducer","visitor_slot_number","use_status","visitor_slot_id","HomeImportData","HomeList","VillagerImportData","VillagerList","UserAddSelectCompany","UserAdd","UserEditSelectCompany","UserEditList","UserEditInfo","UserChangePrivilegeSelectCompany","UserChangePrivilegeList","UserChangePrivilege","UserChangeComapnySelectCompany","UserChangeCompanyList","UserChangeCompany","UserResetPassowrdSelectCompany","UserResetPasswordList","UserResetPassword","UserAddOrDeleteListComapnySelectCompany","UserAddOrDeleteListCompanyList","UserAddOrDeleteListCompany","SlotNotUsePage","appStyle","wrapper","mainPanel","modal","shadows","PageLoading","disableBackdropClick","CircularProgress","switchRoutes","from","userName","setUserName","setPassword","onLoginClick","loginMiddleware","Page500","initialState","isFetching","isError","globalState","isReady","combineReducers","localStr","localStorage","setItem","removeItem","getItem","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReduxApp","exact","LoginPage","mainStore","createRef","mobileOpen","setMobileOpen","getRoute","resizeFunction","navigator","platform","PerfectScrollbar","current","suppressScrollX","suppressScrollY","addEventListener","destroy","removeEventListener","imagine3","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.39dd1665.chunk.js","sourcesContent":["/*!\r\n\r\n =========================================================\r\n * Material Dashboard React - v1.10.0 based on Material Dashboard - v1.2.0\r\n =========================================================\r\n\r\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\r\n * Copyright 2021 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n =========================================================\r\n\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n */\r\n\r\n// ##############################\r\n// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n// #############################\r\nconst hexToRgb = (input) => {\r\n  input = input + \"\";\r\n  input = input.replace(\"#\", \"\");\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error(\"input is not a valid hex color.\");\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return (\r\n    parseInt(first, 16) +\r\n    \", \" +\r\n    parseInt(second, 16) +\r\n    \", \" +\r\n    parseInt(last, 16)\r\n  );\r\n};\r\n\r\n// ##############################\r\n// // // Variables - Styles that are used on more than one component\r\n// #############################\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\r\n};\r\n\r\nconst container = {\r\n  paddingRight: \"15px\",\r\n  paddingLeft: \"15px\",\r\n  marginRight: \"auto\",\r\n  marginLeft: \"auto\",\r\n};\r\n\r\nconst defaultFont = {\r\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  fontWeight: \"300\",\r\n  lineHeight: \"1.5em\",\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n  \"#999\",\r\n  \"#777\",\r\n  \"#3C4858\",\r\n  \"#AAAAAA\",\r\n  \"#D2D2D2\",\r\n  \"#DDD\",\r\n  \"#b4b4b4\",\r\n  \"#555555\",\r\n  \"#333\",\r\n  \"#a9afbb\",\r\n  \"#eee\",\r\n  \"#e7e7e7\",\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\n\r\nconst boxShadow = {\r\n  boxShadow:\r\n    \"0 10px 30px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 4px 25px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(primaryColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst infoBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(infoColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst successBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(successColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst warningBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(warningColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst dangerBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(dangerColor[0]) +\r\n    \",.4)\",\r\n};\r\nconst roseBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(roseColor[0]) +\r\n    \",.4)\",\r\n};\r\n\r\nconst warningCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n  ...warningBoxShadow,\r\n};\r\nconst successCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n  ...successBoxShadow,\r\n};\r\nconst dangerCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n  ...dangerBoxShadow,\r\n};\r\nconst infoCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n  ...infoBoxShadow,\r\n};\r\nconst primaryCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n  ...primaryBoxShadow,\r\n};\r\nconst roseCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n  ...roseBoxShadow,\r\n};\r\n\r\nconst cardActions = {\r\n  margin: \"0 20px 10px\",\r\n  paddingTop: \"10px\",\r\n  borderTop: \"1px solid \" + grayColor[10],\r\n  height: \"auto\",\r\n  ...defaultFont,\r\n};\r\n\r\nconst cardHeader = {\r\n  margin: \"-20px 15px 0\",\r\n  borderRadius: \"3px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst card = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  margin: \"25px 0\",\r\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n  borderRadius: \"3px\",\r\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n  background: whiteColor,\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n  border: \"0\",\r\n  borderRadius: \"3px\",\r\n  boxShadow:\r\n    \"0 10px 20px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 3px 20px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n  padding: \"10px 0\",\r\n  transition: \"all 150ms ease 0s\",\r\n};\r\n\r\nconst title = {\r\n  color: grayColor[2],\r\n  textDecoration: \"none\",\r\n  fontWeight: \"300\",\r\n  marginTop: \"30px\",\r\n  marginBottom: \"25px\",\r\n  minHeight: \"32px\",\r\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n  \"& small\": {\r\n    color: grayColor[1],\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\",\r\n  },\r\n};\r\n\r\nconst cardTitle = {\r\n  ...title,\r\n  marginTop: \"0\",\r\n  marginBottom: \"3px\",\r\n  minHeight: \"auto\",\r\n  \"& a\": {\r\n    ...title,\r\n    marginTop: \".625rem\",\r\n    marginBottom: \"0.75rem\",\r\n    minHeight: \"auto\",\r\n  },\r\n};\r\n\r\nconst cardSubtitle = {\r\n  marginTop: \"-.375rem\",\r\n};\r\n\r\nconst cardLink = {\r\n  \"& + $cardLink\": {\r\n    marginLeft: \"1.25rem\",\r\n  },\r\n};\r\n\r\nexport {\r\n  hexToRgb,\r\n  //variables\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n  boxShadow,\r\n  card,\r\n  defaultFont,\r\n  primaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  cardActions,\r\n  cardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n  cardTitle,\r\n  cardSubtitle,\r\n  cardLink,\r\n};\r\n","import {\r\n  grayColor,\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  roseColor,\r\n  whiteColor,\r\n  blackColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst buttonStyle = {\r\n  button: {\r\n    minHeight: \"auto\",\r\n    minWidth: \"auto\",\r\n    backgroundColor: grayColor[0],\r\n    color: whiteColor,\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.12)\",\r\n    border: \"none\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    padding: \"12px 30px\",\r\n    margin: \".3125rem 1px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"400\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0\",\r\n    willChange: \"box-shadow, transform\",\r\n    transition:\r\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\r\n    lineHeight: \"1.42857143\",\r\n    textAlign: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    verticalAlign: \"middle\",\r\n    touchAction: \"manipulation\",\r\n    cursor: \"pointer\",\r\n    \"&:hover,&:focus\": {\r\n      color: whiteColor,\r\n      backgroundColor: grayColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      marginTop: \"-1em\",\r\n      marginBottom: \"-1em\",\r\n      fontSize: \"1.1rem\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\",\r\n    },\r\n    \"& svg\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      width: \"18px\",\r\n      height: \"18px\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\",\r\n    },\r\n    \"&$justIcon\": {\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        marginTop: \"0px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        transform: \"none\",\r\n        left: \"0px\",\r\n        top: \"0px\",\r\n        height: \"100%\",\r\n        lineHeight: \"41px\",\r\n        fontSize: \"20px\",\r\n      },\r\n    },\r\n  },\r\n  white: {\r\n    \"&,&:focus,&:hover\": {\r\n      backgroundColor: whiteColor,\r\n      color: grayColor[0],\r\n    },\r\n  },\r\n  rose: {\r\n    backgroundColor: roseColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: roseColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.2)\",\r\n    },\r\n  },\r\n  simple: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: whiteColor,\r\n      background: \"transparent\",\r\n      boxShadow: \"none\",\r\n    },\r\n    \"&$rose\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: roseColor[0],\r\n      },\r\n    },\r\n    \"&$primary\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: primaryColor[0],\r\n      },\r\n    },\r\n    \"&$info\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: infoColor[0],\r\n      },\r\n    },\r\n    \"&$success\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: successColor[0],\r\n      },\r\n    },\r\n    \"&$warning\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: warningColor[0],\r\n      },\r\n    },\r\n    \"&$danger\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: dangerColor[0],\r\n      },\r\n    },\r\n  },\r\n  transparent: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: \"inherit\",\r\n      background: \"transparent\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  disabled: {\r\n    opacity: \"0.65\",\r\n    pointerEvents: \"none\",\r\n  },\r\n  lg: {\r\n    padding: \"1.125rem 2.25rem\",\r\n    fontSize: \"0.875rem\",\r\n    lineHeight: \"1.333333\",\r\n    borderRadius: \"0.2rem\",\r\n  },\r\n  sm: {\r\n    padding: \"0.40625rem 1.25rem\",\r\n    fontSize: \"0.6875rem\",\r\n    lineHeight: \"1.5\",\r\n    borderRadius: \"0.2rem\",\r\n  },\r\n  round: {\r\n    borderRadius: \"30px\",\r\n  },\r\n  block: {\r\n    width: \"100% !important\",\r\n  },\r\n  link: {\r\n    \"&,&:hover,&:focus\": {\r\n      backgroundColor: \"transparent\",\r\n      color: grayColor[0],\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  justIcon: {\r\n    paddingLeft: \"12px\",\r\n    paddingRight: \"12px\",\r\n    fontSize: \"20px\",\r\n    height: \"41px\",\r\n    minWidth: \"41px\",\r\n    width: \"41px\",\r\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\r\n      marginRight: \"0px\",\r\n    },\r\n    \"&$lg\": {\r\n      height: \"57px\",\r\n      minWidth: \"57px\",\r\n      width: \"57px\",\r\n      lineHeight: \"56px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"32px\",\r\n        lineHeight: \"56px\",\r\n      },\r\n      \"& svg\": {\r\n        width: \"32px\",\r\n        height: \"32px\",\r\n      },\r\n    },\r\n    \"&$sm\": {\r\n      height: \"30px\",\r\n      minWidth: \"30px\",\r\n      width: \"30px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"17px\",\r\n        lineHeight: \"29px\",\r\n      },\r\n      \"& svg\": {\r\n        width: \"17px\",\r\n        height: \"17px\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default buttonStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function RegularButton(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    round,\r\n    children,\r\n    disabled,\r\n    simple,\r\n    size,\r\n    block,\r\n    link,\r\n    justIcon,\r\n    className,\r\n    muiClasses,\r\n    ...rest\r\n  } = props;\r\n  const btnClasses = classNames({\r\n    [classes.button]: true,\r\n    [classes[size]]: size,\r\n    [classes[color]]: color,\r\n    [classes.round]: round,\r\n    [classes.disabled]: disabled,\r\n    [classes.simple]: simple,\r\n    [classes.block]: block,\r\n    [classes.link]: link,\r\n    [classes.justIcon]: justIcon,\r\n    [className]: className,\r\n  });\r\n  return (\r\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nRegularButton.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"rose\",\r\n    \"white\",\r\n    \"transparent\",\r\n  ]),\r\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\r\n  simple: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  link: PropTypes.bool,\r\n  justIcon: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  // use this to pass the classes props from Material-UI\r\n  muiClasses: PropTypes.object,\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n  primaryColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  defaultFont,\r\n  blackColor,\r\n  grayColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst dropdownStyle = (theme) => ({\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      marginLeft: \"30px\",\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  links: {\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n      color: grayColor[9],\r\n      marginRight: \"15px\",\r\n    },\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n  },\r\n  popperClose: {\r\n    pointerEvents: \"none\",\r\n  },\r\n  popperResponsive: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      zIndex: \"1640\",\r\n      position: \"static\",\r\n      float: \"none\",\r\n      width: \"auto\",\r\n      marginTop: \"0\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"0\",\r\n      WebkitBoxShadow: \"none\",\r\n      boxShadow: \"none\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n  popperNav: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static !important\",\r\n      left: \"unset !important\",\r\n      top: \"unset !important\",\r\n      transform: \"none !important\",\r\n      willChange: \"unset !important\",\r\n      \"& > div\": {\r\n        boxShadow: \"none !important\",\r\n        marginLeft: \"0rem\",\r\n        marginRight: \"0rem\",\r\n        transition: \"none !important\",\r\n        marginTop: \"0px !important\",\r\n        marginBottom: \"0px !important\",\r\n        padding: \"0px !important\",\r\n        backgroundColor: \"transparent !important\",\r\n        \"& ul li\": {\r\n          color: whiteColor + \" !important\",\r\n          margin: \"10px 15px 0!important\",\r\n          padding: \"10px 15px !important\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\r\n            boxShadow: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  dropdown: {\r\n    borderRadius: \"3px\",\r\n    border: \"0\",\r\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\r\n    top: \"100%\",\r\n    zIndex: \"1000\",\r\n    minWidth: \"160px\",\r\n    padding: \"5px 0\",\r\n    margin: \"2px 0 0\",\r\n    fontSize: \"14px\",\r\n    textAlign: \"left\",\r\n    listStyle: \"none\",\r\n    backgroundColor: whiteColor,\r\n    WebkitBackgroundClip: \"padding-box\",\r\n    backgroundClip: \"padding-box\",\r\n  },\r\n  dropdownItem: {\r\n    ...defaultFont,\r\n    fontSize: \"13px\",\r\n    padding: \"10px 20px\",\r\n    margin: \"0 5px\",\r\n    borderRadius: \"2px\",\r\n    WebkitTransition: \"all 150ms linear\",\r\n    MozTransition: \"all 150ms linear\",\r\n    OTransition: \"all 150ms linear\",\r\n    MsTransition: \"all 150ms linear\",\r\n    transition: \"all 150ms linear\",\r\n    display: \"block\",\r\n    clear: \"both\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1.42857143\",\r\n    color: grayColor[8],\r\n    whiteSpace: \"nowrap\",\r\n    height: \"unset\",\r\n    minHeight: \"unset\",\r\n    \"&:hover\": {\r\n      backgroundColor: primaryColor[0],\r\n      color: whiteColor,\r\n      ...primaryBoxShadow,\r\n    },\r\n  },\r\n});\r\n\r\nexport default dropdownStyle;\r\n","import {\r\n  defaultFont,\r\n  dangerColor,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\r\n\r\nconst headerLinksStyle = (theme) => ({\r\n  ...dropdownStyle(theme),\r\n  search: {\r\n    \"& > div\": {\r\n      marginTop: \"0\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"10px 15px !important\",\r\n      float: \"none !important\",\r\n      paddingTop: \"1px\",\r\n      paddingBottom: \"1px\",\r\n      padding: \"0!important\",\r\n      width: \"60%\",\r\n      marginTop: \"40px\",\r\n      \"& input\": {\r\n        color: whiteColor,\r\n      },\r\n    },\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n    margin: \"0px\",\r\n  },\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      margin: \"10px 15px 0\",\r\n      width: \"-webkit-fill-available\",\r\n      \"& svg\": {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& > span\": {\r\n        justifyContent: \"flex-start\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  },\r\n  searchButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"-50px !important\",\r\n      marginRight: \"22px\",\r\n      float: \"right\",\r\n    },\r\n  },\r\n  margin: {\r\n    zIndex: \"4\",\r\n    margin: \"0\",\r\n  },\r\n  searchIcon: {\r\n    width: \"17px\",\r\n    zIndex: \"4\",\r\n  },\r\n  notifications: {\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      top: \"2px\",\r\n      border: \"1px solid \" + whiteColor,\r\n      right: \"4px\",\r\n      fontSize: \"9px\",\r\n      background: dangerColor[0],\r\n      color: whiteColor,\r\n      minWidth: \"16px\",\r\n      height: \"16px\",\r\n      borderRadius: \"10px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"16px\",\r\n      verticalAlign: \"middle\",\r\n      display: \"block\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      ...defaultFont,\r\n      fontSize: \"14px\",\r\n      marginRight: \"8px\",\r\n    },\r\n  },\r\n  manager: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n  searchWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"-webkit-fill-available\",\r\n      margin: \"10px 15px 0\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\nexport default headerLinksStyle;\r\n","export const SUCCESS_MESSAGE = 'เรียบร้อย'\r\nexport const FAILED_MESSAGE = 'ล้มเหลว'\r\nexport const CLEAR_VALUE_MESSAGE = 'Clear Data'\r\nexport const GET_DATA_SUCCESSFULLY = 'Get Data Successfully'\r\n\r\nexport const HTTP_FETCHING = 'HTTP_FETCHING'\r\nexport const HTTP_SUCCESS = 'HTTP_SUCCESS'\r\nexport const HTTP_FAILED = 'HTTP_FAILED'\r\n\r\nexport const LOGIN_FAILED_MESSAGE = 'Username หรือ Password ไม่ถูกต้อง !'\r\nexport const HTTP_LOGIN_CLEARVALUES = 'HTTP_LOGIN_CLEARVALUES'\r\nexport const HTTP_LOGIN_FETCHING = 'HTTP_LOGIN_FETCHING'\r\nexport const HTTP_LOGIN_SUCCESS = 'HTTP_LOGIN_SUCCESS'\r\nexport const HTTP_LOGIN_FAILED = 'HTTP_LOGIN_FAILED'\r\n\r\nexport const HTTP_LOGOUT_FETCHING = 'HTTP_LOGOUT_FETCHING'\r\nexport const HTTP_LOGOUT_SUCCESS = 'HTTP_LOGOUT_SUCCESS'\r\n\r\nexport const HTTP_SELECT_COMPANY_SUCCESS = 'HTTP_SELECT_COMPANY_SUCCESS'\r\nexport const HTTP_SELECT_COMPANY_CLEAR = 'HTTP_SELECT_COMPANY_CLEAR'\r\n\r\nexport const HTTP_GET_COMPANY_ALL_FETCHING = 'HTTP_GET_COMPANY_ALL_FETCHING'\r\nexport const HTTP_GET_COMPANY_ALL_SUCCESS = 'HTTP_GET_COMPANY_ALL_SUCCESS'\r\nexport const HTTP_GET_COMPANY_ALL_FAILED = 'HTTP_GET_COMPANY_ALL_FAILED'\r\nexport const HTTP_GET_COMPANY_ALL_CLEARSTORE = 'HTTP_GET_COMPANY_ALL_CLEARSTORE'\r\nexport const HTTP_GET_COMPANY_ALL_GETDATASUCCESS = 'HTTP_GET_COMPANY_ALL_GETDATASUCCESS'\r\nexport const HTTP_GET_COMPANY_LIST_ALL_SUCCESS = 'HTTP_GET_COMPANT_LIST_ALL_SUCCESS'\r\nexport const HTTP_GET_COMPANY_LIST_CLEAR = 'HTTP_GET_COMPANT_LIST_CLEAR'\r\n\r\n\r\nexport const HTTP_HOME_SELECT_COMPANY_SUCCESS = 'HTTP_HOME_SELECT_COMPANY_SUCCESS'\r\nexport const HTTP_HOME_CLEAR_COMPANY = 'HTTP_HOME_CLEAR_COMPANY'\r\nexport const HTTP_GET_HOME_ALL_SUCCESS = 'HTTP_GET_HOME_ALL_SUCCESS'\r\nexport const HTTP_GET_HOME_CLEAR = 'HTTP_GET_HOME_CLEAR'\r\n\r\nexport const HTTP_VILLAGER_SELECT_COMPANY_SUCCESS = 'HTTP_VILLAGER_SELECT_COMPANY_SUCCESS'\r\nexport const HTTP_GET_VILLAGER_ALL_SUCCESS = 'HTTP_GET_VILLAGER_ALL_SUCCESS'\r\nexport const HTTP_VILLAGER_CLEAR_COMPANY = 'HTTP_VILLAGER_CLEAR_COMPANY'\r\nexport const HTTP_GET_VILLAGER_CLEAR = 'HTTP_GET_VILLAGER_CLEAR'\r\n\r\nexport const HTTP_GET_PRIVILEGE_ALL_SUCCESS = 'HTTP_GET_PRIVILEGE_ALL_SUCCESS'\r\nexport const HTTP_GET_PRIVILEGE_CLEAR = 'HTTP_GET_PRIVILEGE_CLEAR'\r\n\r\nexport const HTTP_GET_USER_LIST_ALL_SUCCESS = 'HTTP_GET_USER_LIST_ALL_SUCCESS'\r\nexport const HTTP_GET_USER_LIST_CLEAR = 'HTTP_GET_USER_LIST_CLEAR'\r\nexport const HTTP_SELECT_USER_SUCCESS = 'HTTP_SELECT_USER_SUCCESS'\r\nexport const HTTP_SELECT_USER_CLEAR = 'HTTP_SELECT_USER_CLEAR'\r\n\r\nexport const HTTP_GET_SLOT_NOTUSE_SUCCESS = 'HTTP_GET_SLOT_NOTUSE_SUCCESS'\r\nexport const HTTP_GET_SLOT_NOTUSE_CLEAR = 'HTTP_GET_SLOT_NOTUSE_CLEAR'\r\nexport const HTTP_GET_SLOT_MAX_SUCCESS = 'HTTP_GET_SLOT_MAX_SUCCESS'\r\nexport const HTTP_GET_SLOT_MAX_CLEAR = 'HTTP_GET_SLOT_MAX_CLEAR'\r\nexport const HTTP_ADD_SLOT_SUCCESS = 'HTTP_ADD_SLOT_SUCCESS'\r\nexport const HTTP_ADD_SLOT_CLEAR = 'HTTP_ADD_SLOT_CLEAR'\r\n\r\n","\r\n// export const MAIN_URL = `${window.origin}/bannayuu/admin/api/v1` // production\r\nexport const MAIN_URL = 'https://api-corporate-demo.bannayuu.com/cit_staff/bannayuu/admin/api/v1' // demo\r\n// export const MAIN_URL = 'http://127.0.0.1:4501/bannayuu/admin/api/v1' // test\r\n// export const WEB_USER_MANAGEMENT_RESET_PASSWORD_URL = 'https://cit.bannayuu.com/reset' // production\r\nexport const WEB_USER_MANAGEMENT_RESET_PASSWORD_URL = 'https://web_management_demo.bannayuu.com/reset' // demo\r\n\r\nexport const LOGIN_API = '/authen/login'\r\nexport const CREATE_COMPANY_API = '/company/add'\r\nexport const GET_COMPANY_ALL_API = '/company/get-all'\r\nexport const GET_COMPANY_ALL_AND_NOT_CIT_COMPANY_API = '/company/get-companylist-all-not-cit-company'\r\nexport const GET_COMPANY_BYID_API = '/company/get-by-id'\r\nexport const EDIT_COMPANY_INFO_API = '/company/edit-info'\r\nexport const DISABLE_COMPANY_API = '/company/disable'\r\nexport const ENABLE_COMPANY_API = '/company/enable'\r\nexport const GET_COMPANY_LIST_ALL_API = '/company/get-companylist-all'\r\nexport const IMPORT_EXCEL_HOME_API = '/home/import-array'\r\nexport const GET_HOME_ALL_API = '/home/get-all'\r\nexport const IMPORT_EXCEL_VILLAGER_API = '/villager/import-array'\r\nexport const GET_VILLAGER_ALL_API = '/villager/get-all'\r\nexport const GET_PRIVILEGE_ALL_API = '/user/get-privilege'\r\nexport const CREATE_USER_API = '/user/create-user'\r\nexport const GET_USER_LIST_ALL_API = '/user/get-user'\r\nexport const GET_USER_IS_BELOW_MYSELF_ALL_API = '/user/get-user-is-below-myself'\r\nexport const GET_USER_BYID_API = '/user/get-userinfo-byid'\r\nexport const EDIT_USER_INFO_API = '/user/edit-userinfo'\r\nexport const RESET_PASSWORD_USER_API = '/user/reset-password'\r\nexport const CHANGE_PRIVILEGE_USER_API = '/user/change-privilege'\r\nexport const ADD_OR_DELETE_COMPANY_LIST_USER_API = '/user/addordelete-company-list'\r\nexport const CHANGE_MAIN_COMPANY_USER_API = '/user/change-main-company'\r\nexport const GET_SLOT_NOT_USE_API = '/slot/get/not-use'\r\nexport const GET_SLOT_MAX_API = '/slot/get/max'\r\nexport const ADD_SLOT_MANUAL_API = '/slot/add/manual'\r\nexport const DISABLE_VILLAGER_API = '/villager/disable'\r\nexport const ENABLE_VILLAGER_API = '/villager/enable'","import axios from \"axios\";\r\n\r\nexport const httpClientGetMethod = async (props) => {\r\n    const { urlClient, valuesObj } = props\r\n    const access_token = valuesObj ? valuesObj.access_token : '';\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n    };\r\n    const url = urlClient;\r\n    return axios.get(url, config)\r\n        .then((res) => {\r\n            return res.data;\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n};\r\nexport const httpClientGetMethodWithPost = async (props) => {\r\n    const { urlClient, valuesObj, authStore } = props\r\n    const access_token = authStore ? authStore.access_token : '';\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${access_token}` },\r\n    };\r\n    const bodyParameters = {\r\n        ...valuesObj\r\n    };\r\n    const url = urlClient;\r\n    return axios.post(url, bodyParameters, config)\r\n        .then((res) => {\r\n            return res.data;\r\n        }).catch(err => {\r\n            console.log(err)\r\n        });\r\n};\r\n//----------------------------Post\r\nexport const httpClientPOSTMethodNotAuth = async (props) => {\r\n    const { urlClient, valuesObj } = props;\r\n    const bodyParameters = {\r\n        ...valuesObj\r\n    };\r\n    const url = urlClient;\r\n    try {\r\n        const res = await axios.post(url, bodyParameters);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err)\r\n        return {\r\n            result: null,\r\n            error: true,\r\n            message: `เชื่อมต่อ API : ${url} ล้มเหลว`\r\n        };\r\n    }\r\n};\r\n\r\nexport const httpClientPOSTMethodVerifyAuth = async (props) => {\r\n    const { urlClient, valuesObj, authStore } = props;\r\n    const bodyParameters = {\r\n        ...valuesObj\r\n    };\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${authStore.access_token}` }\r\n    }\r\n    const url = urlClient;\r\n    try {\r\n        const res = await axios.post(url, bodyParameters, config);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err)\r\n        return {\r\n            result: null,\r\n            error: true,\r\n            message: `เชื่อมต่อ API : ${url} ล้มเหลว`\r\n        };\r\n    }\r\n};\r\n\r\nexport const httpClientPOSTMethodFormData = async (props) => {\r\n    var bodyFormData = new FormData();\r\n    const { urlClient, valuesObj, authStore } = props;\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${authStore.access_token}` }\r\n    }\r\n    const url = urlClient;\r\n    //-------------Setup data to body form-data\r\n    for (const [key, value] of Object.entries(valuesObj)) {\r\n        bodyFormData.append(key, value)\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(url, bodyFormData, config);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err)\r\n        return {\r\n            result: null,\r\n            error: true,\r\n            message: `เชื่อมต่อ API : ${url} ล้มเหลว`\r\n        };\r\n    }\r\n}\r\n","\r\n\r\nexport const MESSAGE_COMPANYCODE_NOTFOUND = \"กรุณากรอกรหัสโครงการ\"\r\nexport const MESSAGE_COMPANYNAME_NOTFOUND = \"กรุณากรอกชื่อโครงการ\"\r\nexport const MESSAGE_PRICEOFCARDLOST_NOTFOUND = \"กรุณากรอกค่าปรับบัตรหาย\"\r\nexport const MESSAGE_NOTSELECT_PRO_COMPANY = \"กรุณาเลือก Pro\"\r\n\r\nexport const MESSAGE_NOTSELECTIMAGE = \"กรุณาเลือกรูปภาพ\"\r\nexport const MESSAGE_FILE_IMAGE_INVALID = \"รูปภาพต้องเป็นประเภท .jpg .bmp .png เท่านั้น\" \r\n\r\nexport const MESSAGE_GET_COMPANY_ALL_FAILED = \"เรียกดูข้อมูลบริษัท ล้มเหลว\"\r\nexport const MESSAGE_REMARKNOTFOUND = \"กรุณากรอกเหตุผล\"\r\nexport const MESSAGE_EXCELROW_NOTFOUND = \"ข้อมูลในไฟล์ Excel จากต้องมากกว่า 1 แถว\"\r\nexport const MESSAGE_EXCELCOLUMN_NOTCOMPLETE = \"จำนวนคอลัมน์ไม่ถูกต้อง\"\r\nexport const MESSAGE_SUCCESS = \"เรียบร้อย\"\r\nexport const MESSAGE_COMPANYID_NOTFOUND = 'ทำรายการผิดพลาด เลือกโครงการใหม่อีกครั้ง'\r\nexport const MESSAGE_FIRST_NAME_NOTFOUND = 'กรุณากรอกชื่อ'\r\nexport const MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL = 'ชื่อ ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_LAST_NAME_NOTFOUND = 'กรุณากรอกนามสกุล'\r\nexport const MESSAGE_LAST_NAME_PROHIBIT_SPECIAL = 'นามสกุล ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_ADDRESS_PROHITBIT_SPECIAL = 'ที่อยู่ ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_MOBILE_NOT_NUMBER = 'เบอร์โทรศัพท์ต้องเป็นตัวเลขเท่านั้น'\r\nexport const MESSAGE_MOBILE_NOT_10_CHARACTER = 'เบอร์โทรศัพท์ต้องมี 10 ตัวอักษร'\r\nexport const MESSAGE_LINE_FORMAT_INVALID = 'รูปแบบไลน์ไม่ถูกต้อง'\r\nexport const MESSAGE_EMAIL_FORMAT_INVALID = 'รูปแบบอีเมลไม่ถูกต้อง'\r\nexport const MESSAGE_NOT_SELECT_PRIVILEGE = 'กรุณาเลือกสิทธิ์การเข้าใช้งานระบบ'\r\nexport const MESSAGE_USER_NOT_FOUND = 'กรุณากรอก Username'\r\nexport const MESSAGE_USER_NOT_END_OR_NUMBER = 'Username ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น'\r\nexport const MESSAGE_PASSWORD_NOT_FOUND = 'กรุณากรอก Password'\r\nexport const MESSAGE_PASSWORD_NOT_END_OR_NUMBER = 'Password ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น'\r\nexport const MESSAGE_PASSWORD_NOT_EQUAL = 'Password ไม่ตรงกัน'\r\nexport const MESSAGE_COMPANY_ID_NOTFOUND = 'กรุณาเลือกโครงการใหม่อีกครั้ง'\r\nexport const MESSAGE_REMARK_NOT_FOUND = 'กรุณากรอกเหตุผล'\r\nexport const MESSAGE_REMARK_SPECIAL = 'เหตุผล ห้ามมีอักขระพิเศษ'\r\nexport const MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY  = 'โครงการใหม่ต้องไม่ซ้ำกับโครงการเดิม'\r\nexport const MESSAGE_NOT_SELECT_NEW_COMPANY = 'กรุณาเลือกโครงการใหม่'\r\nexport const MESSAGE_EMPLOYEE_ID_NOTFOUND = 'ไม่พบรหัสพนักงานกรุณาเลือกพนักงานใหม่อีกครั้ง'\r\nexport const MESSAGE_HOLDTIME_NOT_FOUND = 'ไม่พบเวลาที่จะต้อง Reset password กรุณาเลือกเวลา'\r\nexport const MESSAGE_SLOT_COUNT_NOT_FOUND = 'กรุณาระบุจำนวนเลข Slot'\r\nexport const MESSAGE_GUARDHOUSE_ID_NOT_FOUND = 'กรุณาระบุ Guardhouse ID'\r\nexport const MESSAGE_GUARDHOUSE_CODE_NOT_FOUND = 'กรุณาระบุ Guardhouse Code'\r\nexport const MESSAGE_HOME_LINE_ID_NOT_FOUND = 'กรุณาเลือกลูกค้า'","export function getExtension(filename) {\r\n    var parts = filename.split('.');\r\n    return parts[parts.length - 1];\r\n  }\r\n  \r\nexport function isImage(filename) {\r\n    var ext = getExtension(filename);\r\n    switch (ext.toLowerCase()) {\r\n      case 'jpg':\r\n      case 'bmp':\r\n      case 'png':\r\n        //etc\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_COMPANY_ALL_FETCHING,\r\n    HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_ALL_FAILED,\r\n    HTTP_GET_COMPANY_ALL_CLEARSTORE,\r\n    HTTP_GET_COMPANY_ALL_GETDATASUCCESS,\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYCODE_NOTFOUND,\r\n    MESSAGE_COMPANYNAME_NOTFOUND,\r\n    MESSAGE_PRICEOFCARDLOST_NOTFOUND,\r\n    MESSAGE_NOTSELECT_PRO_COMPANY,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_REMARKNOTFOUND,\r\n    MESSAGE_FILE_IMAGE_INVALID\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_COMPANY_ALL_API, GET_COMPANY_BYID_API, EDIT_COMPANY_INFO_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost, httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nexport const setGetCompanyAllFetching = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FETCHING\r\n})\r\n\r\nexport const setGetCompanyAllSuccess = (payload) => ({\r\n    type: HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setGetCompanyFailed = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FAILED\r\n})\r\n\r\nexport const setGetCompanyAllClearStore = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_CLEARSTORE\r\n})\r\n\r\nexport const setGetCompanyAllGetDataSuccess = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_GETDATASUCCESS\r\n})\r\n\r\n\r\nexport const GetCompanyAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        dispatch(setGetCompanyAllFetching());\r\n        const urlClient = `${MAIN_URL}${GET_COMPANY_ALL_API}`\r\n        const valuesObj = { ...credential }\r\n        const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            dispatch(setGetCompanyFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            if (result.result)\r\n                dispatch(setGetCompanyAllSuccess(result.result));\r\n            else\r\n                dispatch(setGetCompanyAllSuccess([]));\r\n            dispatch(setSuccess());\r\n        }\r\n    }\r\n}\r\n\r\nexport async function GetCompanyByID(dispatch, credential, authStore) {\r\n    dispatch(setFetching());\r\n    const urlClient = `${MAIN_URL}${GET_COMPANY_BYID_API}`\r\n    const valuesObj = { ...credential }\r\n    const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n    if (result.error) {\r\n        dispatch(setFailed());\r\n    } else\r\n        dispatch(setSuccess());\r\n    return result;\r\n}\r\n\r\nexport const EditCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (editCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${EDIT_COMPANY_INFO_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction editCompanyMiddleware(valuesObj) {\r\n    if (!valuesObj.company_code) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYCODE_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_name) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYNAME_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.price_of_cardloss) {\r\n        swal(\"Warning!\", MESSAGE_PRICEOFCARDLOST_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_promotion) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECT_PRO_COMPANY, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.remark) {\r\n        swal(\"Warning!\", MESSAGE_REMARKNOTFOUND, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}","import {\r\n    HTTP_FETCHING,\r\n    HTTP_SUCCESS,\r\n    HTTP_FAILED\r\n} from 'constants/constants.utils'\r\nimport { MAIN_URL } from 'constants/api-route'\r\nimport { httpClientGetMethod } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\nimport {setGetCompanyAllClearStore} from 'actions/company/company-edit.action'\r\n\r\nexport const setFetching = () => ({\r\n    type: HTTP_FETCHING\r\n})\r\n\r\nexport const setSuccess = () => ({\r\n    type: HTTP_SUCCESS,\r\n})\r\n\r\nexport const setFailed = () => ({\r\n    type: HTTP_FAILED\r\n})\r\n\r\nexport const checkJWTTOKENAction = (history,authStore) => {\r\n    const valuesObj = authStore.loginReducer.result;\r\n    return async dispatch => {\r\n        resetValuesAll(dispatch);\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}`\r\n        const result = await httpClientGetMethod({ urlClient,valuesObj })\r\n        if(!result){\r\n            dispatch(setFailed());\r\n            history.push('/page500');\r\n        }\r\n        else if(result.error){\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n            history.push('/login');\r\n        }else{\r\n            dispatch(setSuccess())\r\n        }\r\n    }\r\n}\r\n\r\nfunction resetValuesAll(dispatch){\r\n    //------reset store for company get all\r\n    dispatch(setGetCompanyAllClearStore());\r\n}","import {\r\n    HTTP_LOGIN_FETCHING,\r\n    HTTP_LOGIN_SUCCESS,\r\n    HTTP_LOGIN_FAILED,\r\n    HTTP_LOGIN_CLEARVALUES,\r\n} from '../../constants/constants.utils'\r\nimport { MAIN_URL, LOGIN_API } from '../../constants/api-route'\r\nimport { httpClientPOSTMethodNotAuth } from '../../utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\nimport {setFetching,setSuccess} from '../main/main.action'\r\nexport const setLoginFetching = () => ({\r\n    type: HTTP_LOGIN_FETCHING\r\n})\r\n\r\nexport const setLoginSuccess = (payload) => ({\r\n    type: HTTP_LOGIN_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setLoginFailed = () => ({\r\n    type: HTTP_LOGIN_FAILED\r\n})\r\n\r\nexport const setLoginClearStore = () => ({\r\n    type: HTTP_LOGIN_CLEARVALUES\r\n})\r\n\r\n\r\nexport const loginAction = (history, credential) => {\r\n    return async dispatch => {\r\n        dispatch(setLoginFetching());\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${LOGIN_API}`\r\n        const valuesObj = { ...credential }\r\n        const result = await httpClientPOSTMethodNotAuth({ urlClient, valuesObj })\r\n        if(result.error){\r\n            dispatch(setLoginFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        }else{\r\n            dispatch(setLoginSuccess(result.result))\r\n            history.push('/main');\r\n        }\r\n        dispatch(setSuccess());\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    HTTP_LOGOUT_FETCHING,\r\n    HTTP_LOGOUT_SUCCESS,\r\n} from '../../constants/constants.utils'\r\nexport const setLogoutFetching = () => ({\r\n    type: HTTP_LOGOUT_FETCHING\r\n})\r\n\r\nexport const setLogoutSuccess = () => ({\r\n    type: HTTP_LOGOUT_SUCCESS\r\n})\r\n\r\n\r\nexport const logoutAction = (history) => {\r\n    return async dispatch => {\r\n        dispatch(setLogoutFetching());\r\n        history.push('/login');\r\n        dispatch(setLogoutSuccess())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// @material-ui/icons\r\nimport Person from \"@material-ui/icons/Person\";\r\n// import Notifications from \"@material-ui/icons/Notifications\";\r\n// import Dashboard from \"@material-ui/icons/Dashboard\";\r\n// import Search from \"@material-ui/icons/Search\";\r\n// core components\r\n// import CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\r\nimport { connect } from 'react-redux'\r\nimport { setLoginClearStore } from '../../actions/login/login.action'\r\nimport { logoutAction } from '../../actions/logout/logout.action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction AdminNavbarLinks() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  // const [openNotification, setOpenNotification] = React.useState(null);\r\n  const [openProfile, setOpenProfile] = React.useState(null);\r\n  // const handleClickNotification = (event) => {\r\n  //   if (openNotification && openNotification.contains(event.target)) {\r\n  //     setOpenNotification(null);\r\n  //   } else {\r\n  //     setOpenNotification(event.currentTarget);\r\n  //   }\r\n  // };\r\n  // const handleCloseNotification = () => {\r\n  //   setOpenNotification(null);\r\n  // };\r\n  const handleClickProfile = (event) => {\r\n    if (openProfile && openProfile.contains(event.target)) {\r\n      setOpenProfile(null);\r\n    } else {\r\n      setOpenProfile(event.currentTarget);\r\n    }\r\n  };\r\n  const handleCloseProfile = () => {\r\n    setOpenProfile(null);\r\n  };\r\n  const onLogOutClick = () => {\r\n    dispatch(logoutAction(history));\r\n    dispatch(setLoginClearStore());\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.searchWrapper}>\r\n        {/* <CustomInput\r\n          formControlProps={{\r\n            className: classes.margin + \" \" + classes.search,\r\n          }}\r\n          inputProps={{\r\n            placeholder: \"Search\",\r\n            inputProps: {\r\n              \"aria-label\": \"Search\",\r\n            },\r\n          }}\r\n        /> */}\r\n        {/* <Button color=\"white\" aria-label=\"edit\" justIcon round>\r\n          <Search />\r\n        </Button> */}\r\n      </div>\r\n      {/* <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Dashboard\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Dashboard className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>Dashboard</p>\r\n        </Hidden>\r\n      </Button> */}\r\n     \r\n      <div className={classes.manager}>\r\n        <Button\r\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n          justIcon={window.innerWidth > 959}\r\n          simple={!(window.innerWidth > 959)}\r\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClickProfile}\r\n          className={classes.buttonLink}\r\n        >\r\n          <Person className={classes.icons} />\r\n          <Hidden mdUp implementation=\"css\">\r\n            <p className={classes.linkText}>Profile</p>\r\n          </Hidden>\r\n        </Button>\r\n        <Poppers\r\n          open={Boolean(openProfile)}\r\n          anchorEl={openProfile}\r\n          transition\r\n          disablePortal\r\n          className={\r\n            classNames({ [classes.popperClose]: !openProfile }) +\r\n            \" \" +\r\n            classes.popperNav\r\n          }\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              id=\"profile-menu-list-grow\"\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener\r\n                  onClickAway={handleCloseProfile}\r\n                >\r\n                  <MenuList role=\"menu\">\r\n                    <MenuItem\r\n                      // onClick={handleCloseProfile}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Profile\r\n                    </MenuItem>\r\n                    <Divider light />\r\n                    <MenuItem\r\n                      onClick={onLogOutClick}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Logout\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Poppers>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({ logoutReducer }) => ({ logoutReducer })\r\n\r\nconst mapDispatchToProps = {\r\n  logoutAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbarLinks);","import {\r\n  primaryColor,\r\n  dangerColor,\r\n  successColor,\r\n  grayColor,\r\n  defaultFont,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst customInputStyle = {\r\n  disabled: {\r\n    \"&:before\": {\r\n      backgroundColor: \"transparent !important\",\r\n    },\r\n  },\r\n  underline: {\r\n    \"&:hover:not($disabled):before,&:before\": {\r\n      borderColor: grayColor[4] + \" !important\",\r\n      borderWidth: \"1px !important\",\r\n    },\r\n    \"&:after\": {\r\n      borderColor: primaryColor[0],\r\n    },\r\n  },\r\n  underlineError: {\r\n    \"&:after\": {\r\n      borderColor: dangerColor[0],\r\n    },\r\n  },\r\n  underlineSuccess: {\r\n    \"&:after\": {\r\n      borderColor: successColor[0],\r\n    },\r\n  },\r\n  labelRoot: {\r\n    ...defaultFont,\r\n    color: grayColor[3] + \" !important\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"14px\",\r\n    lineHeight: \"1.42857\",\r\n    letterSpacing: \"unset\",\r\n  },\r\n  labelRootError: {\r\n    color: dangerColor[0],\r\n  },\r\n  labelRootSuccess: {\r\n    color: successColor[0],\r\n  },\r\n  feedback: {\r\n    position: \"absolute\",\r\n    top: \"18px\",\r\n    right: \"0\",\r\n    zIndex: \"2\",\r\n    display: \"block\",\r\n    width: \"24px\",\r\n    height: \"24px\",\r\n    textAlign: \"center\",\r\n    pointerEvents: \"none\",\r\n  },\r\n  marginTop: {\r\n    marginTop: \"16px\",\r\n  },\r\n  formControl: {\r\n    paddingBottom: \"10px\",\r\n    margin: \"27px 0 0 0\",\r\n    position: \"relative\",\r\n    verticalAlign: \"unset\",\r\n  },\r\n  labelRTL: {\r\n    right: 0,\r\n    transition: \"all 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms\",\r\n    \"&.MuiInputLabel-shrink\": {\r\n      transform: \"translate(0, 1.5px)\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default customInputStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n// @material-ui/icons\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomInput(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    formControlProps,\r\n    labelText,\r\n    id,\r\n    labelProps,\r\n    inputProps,\r\n    error,\r\n    success,\r\n    rtlActive,\r\n  } = props;\r\n\r\n  const labelClasses = classNames({\r\n    [\" \" + classes.labelRootError]: error,\r\n    [\" \" + classes.labelRootSuccess]: success && !error,\r\n    [\" \" + classes.labelRTL]: rtlActive,\r\n  });\r\n  const underlineClasses = classNames({\r\n    [classes.underlineError]: error,\r\n    [classes.underlineSuccess]: success && !error,\r\n    [classes.underline]: true,\r\n  });\r\n  const marginTop = classNames({\r\n    [classes.marginTop]: labelText === undefined,\r\n  });\r\n  let newInputProps = {\r\n    maxLength:\r\n      inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\r\n    minLength:\r\n      inputProps && inputProps.minLength ? inputProps.minLength : undefined,\r\n    step: inputProps && inputProps.step ? inputProps.step : undefined,\r\n  };\r\n  return (\r\n    <FormControl\r\n      {...formControlProps}\r\n      className={formControlProps.className + \" \" + classes.formControl}\r\n    >\r\n      {labelText !== undefined ? (\r\n        <InputLabel\r\n          className={classes.labelRoot + labelClasses}\r\n          htmlFor={id}\r\n          {...labelProps}\r\n        >\r\n          {labelText}\r\n        </InputLabel>\r\n      ) : null}\r\n      <Input\r\n        classes={{\r\n          root: marginTop,\r\n          disabled: classes.disabled,\r\n          underline: underlineClasses,\r\n        }}\r\n        id={id}\r\n        {...inputProps}\r\n        inputProps={newInputProps}\r\n      />\r\n      {error ? (\r\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\r\n      ) : success ? (\r\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\r\n      ) : null}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  labelText: PropTypes.node,\r\n  labelProps: PropTypes.object,\r\n  id: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  formControlProps: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  success: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n};\r\n","import {\r\n  defaultFont,\r\n  dangerColor,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\r\n\r\nconst headerLinksStyle = (theme) => ({\r\n  ...dropdownStyle(theme),\r\n  search: {\r\n    \"& > div\": {\r\n      marginTop: \"0\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"10px 15px !important\",\r\n      float: \"none !important\",\r\n      paddingTop: \"1px\",\r\n      paddingBottom: \"1px\",\r\n      padding: \"0!important\",\r\n      width: \"60%\",\r\n      marginTop: \"40px\",\r\n      \"& input\": {\r\n        color: whiteColor,\r\n      },\r\n    },\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n    margin: \"0px\",\r\n  },\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      margin: \"10px 15px 0\",\r\n      width: \"-webkit-fill-available\",\r\n      \"& svg\": {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\",\r\n      },\r\n      \"& > span\": {\r\n        justifyContent: \"flex-start\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  },\r\n  searchButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"-50px !important\",\r\n      marginRight: \"22px\",\r\n      float: \"right\",\r\n    },\r\n  },\r\n  margin: {\r\n    zIndex: \"4\",\r\n    margin: \"0\",\r\n  },\r\n  searchIcon: {\r\n    width: \"17px\",\r\n    zIndex: \"4\",\r\n  },\r\n  notifications: {\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      top: \"2px\",\r\n      border: \"1px solid \" + whiteColor,\r\n      right: \"4px\",\r\n      fontSize: \"9px\",\r\n      background: dangerColor[0],\r\n      color: whiteColor,\r\n      minWidth: \"16px\",\r\n      height: \"16px\",\r\n      borderRadius: \"10px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"16px\",\r\n      verticalAlign: \"middle\",\r\n      display: \"block\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      ...defaultFont,\r\n      fontSize: \"14px\",\r\n      marginRight: \"8px\",\r\n    },\r\n  },\r\n  manager: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n  searchWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"-webkit-fill-available\",\r\n      margin: \"10px 15px 0\",\r\n    },\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\nexport default headerLinksStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\n// @material-ui/icons\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Notifications from \"@material-ui/icons/Notifications\";\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Search from \"@material-ui/icons/Search\";\r\n// core components\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/rtlHeaderLinksStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function RTLNavbarLinks() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(null);\r\n  const handleToggle = (event) => {\r\n    if (open && open.contains(event.target)) {\r\n      setOpen(null);\r\n    } else {\r\n      setOpen(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.searchWrapper}>\r\n        <CustomInput\r\n          formControlProps={{\r\n            className: classes.margin + \" \" + classes.search,\r\n          }}\r\n          inputProps={{\r\n            placeholder: \"جستجو...\",\r\n            inputProps: {\r\n              \"aria-label\": \"Search\",\r\n            },\r\n          }}\r\n        />\r\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\r\n          <Search />\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Dashboard\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Dashboard className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>آمارها</p>\r\n        </Hidden>\r\n      </Button>\r\n      <div className={classes.manager}>\r\n        <Button\r\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n          justIcon={window.innerWidth > 959}\r\n          simple={!(window.innerWidth > 959)}\r\n          aria-owns={open ? \"menu-list-grow\" : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n          className={classes.buttonLink}\r\n        >\r\n          <Notifications className={classes.icons} />\r\n          <span className={classes.notifications}>۵</span>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <p onClick={handleToggle} className={classes.linkText}>\r\n              اعلان‌ها\r\n            </p>\r\n          </Hidden>\r\n        </Button>\r\n        <Poppers\r\n          open={Boolean(open)}\r\n          anchorEl={open}\r\n          transition\r\n          disablePortal\r\n          className={\r\n            classNames({ [classes.popperClose]: !open }) +\r\n            \" \" +\r\n            classes.popperNav\r\n          }\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              id=\"menu-list-grow\"\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList role=\"menu\">\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      محمدرضا به ایمیل شما پاسخ داد\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      شما ۵ وظیفه جدید دارید\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      از حالا شما با علیرضا دوست هستید\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      اعلان دیگر\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      اعلان دیگر\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Poppers>\r\n      </div>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Person\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Person className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>حساب کاربری</p>\r\n        </Hidden>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"../../actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nfunction MainPage() {\r\n    const authStore = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    function loadMainForm() {\r\n        const valuesObj = authStore.loginReducer.result;\r\n        if (!valuesObj) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, authStore));\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Main</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","export const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    }\r\n  };\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    padding: \"0 15px !important\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridItem(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    margin: \"0 -15px !important\",\r\n    width: \"unset\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridContainer(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid container {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n  blackColor,\r\n  whiteColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardStyle = {\r\n  card: {\r\n    border: \"0\",\r\n    marginBottom: \"30px\",\r\n    marginTop: \"30px\",\r\n    borderRadius: \"6px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor,\r\n    width: \"100%\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"0\",\r\n    wordWrap: \"break-word\",\r\n    fontSize: \".875rem\",\r\n  },\r\n  cardPlain: {\r\n    background: \"transparent\",\r\n    boxShadow: \"none\",\r\n  },\r\n  cardProfile: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\",\r\n  },\r\n  cardChart: {\r\n    \"& p\": {\r\n      marginTop: \"0px\",\r\n      paddingTop: \"0px\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default cardStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Card(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, chart, ...rest } = props;\r\n  const cardClasses = classNames({\r\n    [classes.card]: true,\r\n    [classes.cardPlain]: plain,\r\n    [classes.cardProfile]: profile,\r\n    [classes.cardChart]: chart,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardHeaderStyle = {\r\n  cardHeader: {\r\n    padding: \"0.75rem 1.25rem\",\r\n    marginBottom: \"0\",\r\n    borderBottom: \"none\",\r\n    background: \"transparent\",\r\n    zIndex: \"3 !important\",\r\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      margin: \"0 15px\",\r\n      padding: \"0\",\r\n      position: \"relative\",\r\n      color: whiteColor,\r\n    },\r\n    \"&:first-child\": {\r\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\",\r\n    },\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      \"&:not($cardHeaderIcon)\": {\r\n        borderRadius: \"3px\",\r\n        marginTop: \"-20px\",\r\n        padding: \"15px\",\r\n      },\r\n    },\r\n    \"&$cardHeaderStats svg\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      textAlign: \"center\",\r\n      width: \"36px\",\r\n      height: \"36px\",\r\n      margin: \"10px 10px 4px\",\r\n    },\r\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      width: \"56px\",\r\n      height: \"56px\",\r\n      textAlign: \"center\",\r\n      overflow: \"unset\",\r\n      marginBottom: \"1px\",\r\n    },\r\n    \"&$cardHeaderStats$cardHeaderIcon\": {\r\n      textAlign: \"right\",\r\n    },\r\n  },\r\n  cardHeaderPlain: {\r\n    marginLeft: \"0px !important\",\r\n    marginRight: \"0px !important\",\r\n  },\r\n  cardHeaderStats: {\r\n    \"& $cardHeaderIcon\": {\r\n      textAlign: \"right\",\r\n    },\r\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n      margin: \"0 !important\",\r\n    },\r\n  },\r\n  cardHeaderIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      background: \"transparent\",\r\n      boxShadow: \"none\",\r\n    },\r\n    \"& i,& .material-icons\": {\r\n      width: \"33px\",\r\n      height: \"33px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n    },\r\n    \"& svg\": {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n      margin: \"5px 4px 0px\",\r\n    },\r\n  },\r\n  warningCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...warningCardHeader,\r\n    },\r\n  },\r\n  successCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...successCardHeader,\r\n    },\r\n  },\r\n  dangerCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...dangerCardHeader,\r\n    },\r\n  },\r\n  infoCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...infoCardHeader,\r\n    },\r\n  },\r\n  primaryCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...primaryCardHeader,\r\n    },\r\n  },\r\n  roseCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...roseCardHeader,\r\n    },\r\n  },\r\n};\r\n\r\nexport default cardHeaderStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardHeader(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, plain, stats, icon, ...rest } = props;\r\n  const cardHeaderClasses = classNames({\r\n    [classes.cardHeader]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [classes.cardHeaderPlain]: plain,\r\n    [classes.cardHeaderStats]: stats,\r\n    [classes.cardHeaderIcon]: icon,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardHeaderClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\",\r\n  ]),\r\n  plain: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","const cardBodyStyle = {\r\n  cardBody: {\r\n    padding: \"0.9375rem 20px\",\r\n    flex: \"1 1 auto\",\r\n    WebkitBoxFlex: \"1\",\r\n    position: \"relative\",\r\n  },\r\n  cardBodyPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\",\r\n  },\r\n  cardBodyProfile: {\r\n    marginTop: \"15px\",\r\n  },\r\n};\r\n\r\nexport default cardBodyStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardBody(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, ...rest } = props;\r\n  const cardBodyClasses = classNames({\r\n    [classes.cardBody]: true,\r\n    [classes.cardBodyPlain]: plain,\r\n    [classes.cardBodyProfile]: profile,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardBodyClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardBody.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","import { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardFooterStyle = {\r\n  cardFooter: {\r\n    padding: \"0\",\r\n    paddingTop: \"10px\",\r\n    margin: \"0 15px 10px\",\r\n    borderRadius: \"0\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    backgroundColor: \"transparent\",\r\n    border: \"0\",\r\n  },\r\n  cardFooterProfile: {\r\n    marginTop: \"-15px\",\r\n  },\r\n  cardFooterPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  cardFooterStats: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n    marginTop: \"20px\",\r\n    \"& svg\": {\r\n      position: \"relative\",\r\n      top: \"4px\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\",\r\n      width: \"16px\",\r\n      height: \"16px\",\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n      fontSize: \"16px\",\r\n      position: \"relative\",\r\n      top: \"4px\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\",\r\n    },\r\n  },\r\n  cardFooterChart: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n};\r\n\r\nexport default cardFooterStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardFooterStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardFooter(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, stats, chart, ...rest } = props;\r\n  const cardFooterClasses = classNames({\r\n    [classes.cardFooter]: true,\r\n    [classes.cardFooterPlain]: plain,\r\n    [classes.cardFooterProfile]: profile,\r\n    [classes.cardFooterStats]: stats,\r\n    [classes.cardFooterChart]: chart,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardFooterClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardFooter.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n","import {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n// import InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport moment from 'moment'\r\nfunction DateMaterialUi(props) {\r\n    const {\r\n        title,\r\n        selectedDate,\r\n        setSelectedDate\r\n    } = props;\r\n    \r\n    // function filterWeekends(date) {\r\n    //     // Return false if Saturday or Sunday\r\n    //     return date.getDay() === 0 || date.getDay() === 6;\r\n    // }\r\n    const currentTime = moment(selectedDate);\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <FormLabel style={{ color: \"#AAAAAA\" }}>{title}</FormLabel><br></br>\r\n            <KeyboardDatePicker\r\n                format=\"dd/MM/yyyy\"\r\n                label=\"\"\r\n                value={currentTime}\r\n                onChange={setSelectedDate}\r\n                ampm={false}\r\n                // shouldDisableDate={filterWeekends}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n\r\nexport default DateMaterialUi;","import { useState } from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { styles } from './SelectBox-style';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles(styles);\r\nfunction SelectBox(props) {\r\n    const {\r\n        title,\r\n        setValue,\r\n        value,\r\n        items\r\n    } = props;\r\n    //----------------Create Style\r\n    const classes = useStyles();\r\n    //----------------Set Age\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    //---------------Create selectbox element\r\n    let itemsSelectElem = null;\r\n    if (items.length > 0) {\r\n       \r\n        itemsSelectElem = items.map(item=>{\r\n            return <MenuItem key={item.value} value={item.value}>{item.text}</MenuItem>\r\n        })\r\n    }\r\n    return (\r\n        <FormControl className={classes.formControlSelectBox}>\r\n            <InputLabel id=\"demo-controlled-open-select-label\">{title}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n\r\n                <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                </MenuItem>\r\n                {itemsSelectElem}\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default SelectBox;","export const styles = {\r\n     formControlSelectBox: {\r\n        margin: \"0px\",\r\n        minWidth: 200,\r\n        width:\"100%\"\r\n      },\r\n  };\r\n","export const itemSelectBoxs = [\r\n    {\r\n        value: \"STANDARD\"\r\n        , text: \"Standard\"\r\n    },{\r\n        value: \"PRO\"\r\n        , text: \"Pro\"\r\n    },{\r\n        value: \"PROPLUS\"\r\n        , text: \"Pro plus\"\r\n    }\r\n]\r\n\r\nexport const itemRadioBoxs = [\r\n    {\r\n        value: \"true\"\r\n        , text: \"จอดฟรีแยกตามวันนั้นๆ\"\r\n    },{\r\n        value: \"false\"\r\n        , text: \"จอดฟรีเฉพาะวันแรกที่จอดวันเดียวเท่านั้น\"\r\n    }\r\n]","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  grayColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardIconStyle = {\r\n  cardIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      borderRadius: \"3px\",\r\n      backgroundColor: grayColor[0],\r\n      padding: \"15px\",\r\n      marginTop: \"-20px\",\r\n      marginRight: \"15px\",\r\n      float: \"left\",\r\n    },\r\n  },\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n};\r\n\r\nexport default cardIconStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardIconStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardIcon(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, ...rest } = props;\r\n  const cardIconClasses = classNames({\r\n    [classes.cardIcon]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardIconClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardIcon.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\",\r\n  ]),\r\n  children: PropTypes.node,\r\n};\r\n","import Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nfunction CheckBox(props) {\r\n    const { setCheck, check, title } = props;\r\n    const handleChange = (event) => {\r\n        setCheck(event.target.checked);\r\n      };\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    checked={check}\r\n                    onChange={handleChange}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                />\r\n            }\r\n            label={title}\r\n        />\r\n    )\r\n}\r\n\r\nexport default CheckBox;","import Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nfunction RadioBox(props) {\r\n    const { title, value, setCheck, items } = props;\r\n    const handleChange = (event) => {\r\n        setCheck(event.target.value);\r\n    };\r\n    //------------Create Item Elemment\r\n    let radioItemsElem = null;\r\n    if (items.length > 0) {\r\n        radioItemsElem = items.map(item => {\r\n            return <FormControlLabel key={item.value} value={item.value} control={<Radio />} label={item.text} />\r\n        })\r\n    }\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">{title}</FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n                        {radioItemsElem}\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default RadioBox;","import 'date-fns';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nfunction InputFile(props) {\r\n    const {\r\n        title,\r\n        value,\r\n        setValue\r\n    } = props;\r\n    //------------------\r\n    return (\r\n        <div>\r\n            <FormLabel style={{ color: \"#AAAAAA\" }}>{title}</FormLabel>\r\n            <CustomInput\r\n                labelText=\"\"\r\n                id=\"file-select\"\r\n                formControlProps={{\r\n                    fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                    type: \"file\",\r\n                    accept: \"image/png, image/jpeg\",\r\n\r\n                    value: value,\r\n                    onChange: event=>setValue(event.target.files.item(0))\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputFile;","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CREATE_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport {\r\n    MESSAGE_COMPANYCODE_NOTFOUND,\r\n    MESSAGE_COMPANYNAME_NOTFOUND,\r\n    MESSAGE_PRICEOFCARDLOST_NOTFOUND,\r\n    MESSAGE_NOTSELECT_PRO_COMPANY,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n} from 'constants/message.constant'\r\nimport swal from 'sweetalert';\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nexport const CreateCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (createCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CREATE_COMPANY_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction createCompanyMiddleware(valuesObj) {\r\n    if (!valuesObj.company_code) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYCODE_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_name) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYNAME_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.price_of_cardloss) {\r\n        swal(\"Warning!\", MESSAGE_PRICEOFCARDLOST_NOTFOUND, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.company_promotion) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECT_PRO_COMPANY, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    }else if(!isImage(getExtension(valuesObj.image.name))){\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n","import { styles } from \"./Company-style\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport DateMaterialUi from \"components/DateTime/DateMaterialUi\";\r\nimport SelectBox from \"components/Select/SelectBox\";\r\nimport moment from \"moment\";\r\nimport { itemSelectBoxs, itemRadioBoxs } from \"../data/Company-data\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport CheckBox from \"components/CheckBox/CheckBox\";\r\nimport RadioBox from \"components/RadioBox/RadioBox\";\r\nimport InputFile from \"components/Input/InputFile\";\r\nimport { CreateCompanyAction } from \"actions/company/company-add.action\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction CompanyAdd() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const Store = useSelector((state) => state);\r\n  //----------Set default value\r\n  const dStart = moment();\r\n  const dEnd = moment().add(30, \"days\");\r\n  //----------State\r\n  const [dateStart, setDateStart] = useState(dStart);\r\n  const [dateEnd, setDateEnd] = useState(dEnd);\r\n  const [promotion, setPromotion] = useState(\"\");\r\n  const [checkCal, setCheckCal] = useState(false);\r\n  const [checkSecureEstampVisitor, setCheckSecureEstampVisitor] = useState(\r\n    false\r\n  );\r\n  const [checkSecureEstampBooking, setCheckSecureEstampBooking] = useState(\r\n    false\r\n  );\r\n  const [\r\n    checkLineNotificationBoardcast,\r\n    setCheckLineNotificationBoardcast,\r\n  ] = useState(true);\r\n  const [selectExceptDay, setSelectExceptDay] = useState(\"true\");\r\n  const [image, setImage] = useState(null);\r\n  const [companyInfo, setCompanyInfo] = useState({\r\n    company_code: \"\",\r\n    company_name: \"\",\r\n    price_of_cardloss: \"\",\r\n  });\r\n  //-----------------Form load\r\n  useEffect(() => {\r\n    loadMainForm();\r\n  }, []);\r\n  function loadMainForm() {\r\n    const authStore = Store.loginReducer.result;\r\n    if (!authStore) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(checkJWTTOKENAction(history, Store));\r\n    }\r\n  }\r\n  //-----------------Date Handing\r\n  function handdingDateStart(date) {\r\n    if (moment(date) > moment(dateEnd)) {\r\n      const newMoment = moment(date).add(1, \"days\");\r\n      setDateStart(date);\r\n      setDateEnd(newMoment);\r\n    } else setDateStart(date);\r\n  }\r\n  function handdingDateEnd(date) {\r\n    if (moment(date) < moment(dateStart)) {\r\n      const newMoment = moment(date).subtract(1, \"days\");\r\n      setDateStart(newMoment);\r\n      setDateEnd(date);\r\n    } else setDateEnd(date);\r\n  }\r\n  //----------------On Create\r\n  function onCreateClick() {\r\n    dispatch(\r\n      CreateCompanyAction(\r\n        history,\r\n        {\r\n          company_code: companyInfo.company_code,\r\n          company_name: companyInfo.company_name,\r\n          price_of_cardloss: companyInfo.price_of_cardloss.toString(),\r\n          company_start_date: moment(dateStart)\r\n            .set({ hour: 0, minute: 0, second: 0 })\r\n            .format(\"yyyy-MM-DD HH:mm:ss\"),\r\n          company_expire_date: moment(dateEnd)\r\n            .set({ hour: 0, minute: 0, second: 0 })\r\n            .format(\"yyyy-MM-DD HH:mm:ss\"),\r\n          company_promotion: promotion,\r\n          calculate_enable: checkCal,\r\n          except_time_split_from_day: selectExceptDay === \"true\" ? true : false,\r\n          booking_estamp_verify: checkSecureEstampVisitor,\r\n          visitor_estamp_verify: checkSecureEstampBooking,\r\n          line_notification_broadcast: checkLineNotificationBoardcast,\r\n          image,\r\n        },\r\n        Store.loginReducer.result\r\n      )\r\n    );\r\n  }\r\n  //----------------------------------------------------\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={10}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>สร้างโครงการใหม่</h4>\r\n              <p className={classes.cardCategoryWhite}>Create new company</p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={3}>\r\n                  <CustomInput\r\n                    labelText=\"รหัสโครงการ\"\r\n                    id=\"comp-code\"\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      maxLength: \"15\",\r\n                      value: companyInfo.company_code,\r\n                      onChange: (event) =>\r\n                        setCompanyInfo({\r\n                          ...companyInfo,\r\n                          company_code: event.target.value,\r\n                        }),\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <CustomInput\r\n                    labelText=\"ชื่อโครงการ\"\r\n                    id=\"comp-name-th\"\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      maxLength: \"255\",\r\n                      value: companyInfo.company_name,\r\n                      onChange: (event) =>\r\n                        setCompanyInfo({\r\n                          ...companyInfo,\r\n                          company_name: event.target.value,\r\n                        }),\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={6}>\r\n                  <InputFile title=\"เลือกรูปภาพใบ PO\" setValue={setImage} />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <br></br>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                  <DateMaterialUi\r\n                    title=\"วันที่เริ่มเปิดให้บริการ\"\r\n                    selectedDate={dateStart}\r\n                    setSelectedDate={handdingDateStart}\r\n                  />\r\n                </GridItem>\r\n                <br></br>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                  <DateMaterialUi\r\n                    title=\"วันทีหยุดให้บริการ\"\r\n                    selectedDate={dateEnd}\r\n                    setSelectedDate={handdingDateEnd}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={6} md={6}>\r\n                  <SelectBox\r\n                    title=\"เลือก Pro\"\r\n                    setValue={setPromotion}\r\n                    value={promotion}\r\n                    items={itemSelectBoxs}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              <br></br>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <Card>\r\n                    <CardHeader color=\"warning\" stats icon>\r\n                      <CardIcon color=\"warning\">\r\n                        <Icon>request_page</Icon>\r\n                      </CardIcon>\r\n                      <p className={classes.cardCategory}>Calculate Setup</p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkCal}\r\n                            setCheck={setCheckCal}\r\n                            title=\"เปิดระบบคิดเงิน\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <RadioBox\r\n                            title=\"เลือกการคำนวนเวลาจอดฟรี\"\r\n                            value={selectExceptDay}\r\n                            setCheck={setSelectExceptDay}\r\n                            items={itemRadioBoxs}\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={3}>\r\n                          <CustomInput\r\n                            labelText=\"ค่าปรับบัตรหาย\"\r\n                            id=\"setup-cardlost\"\r\n                            formControlProps={{\r\n                              fullWidth: false,\r\n                            }}\r\n                            inputProps={{\r\n                              maxLength: \"5\",\r\n                              value: companyInfo.price_of_cardloss,\r\n                              onChange: (event) =>\r\n                                setCompanyInfo({\r\n                                  ...companyInfo,\r\n                                  price_of_cardloss: event.target.value,\r\n                                }),\r\n                            }}\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                    </CardBody>\r\n                  </Card>\r\n                </GridItem>\r\n              </GridContainer>\r\n              <br></br>\r\n              <GridContainer>\r\n                <GridItem xs={12} sm={12} md={12}>\r\n                  <Card>\r\n                    <CardHeader color=\"info\" stats icon>\r\n                      <CardIcon color=\"info\">\r\n                        <Icon>admin_panel_settings</Icon>\r\n                      </CardIcon>\r\n                      <p className={classes.cardCategory}>Security Setup</p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkLineNotificationBoardcast}\r\n                            setCheck={setCheckLineNotificationBoardcast}\r\n                            title=\"เปิด Boardcast Line Notification\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkSecureEstampVisitor}\r\n                            setCheck={setCheckSecureEstampVisitor}\r\n                            title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Visitor ทั่วไป)\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={12}>\r\n                          <CheckBox\r\n                            check={checkSecureEstampBooking}\r\n                            setCheck={setCheckSecureEstampBooking}\r\n                            title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Booking หรือจากการจอง)\"\r\n                          />\r\n                        </GridItem>\r\n                      </GridContainer>\r\n                      <p style={{ color: \"red\" }}>\r\n                        ***เป็นการตรวจสอบว่าผู้มาเยือนได้ถูกประทับตรา (E-Stamp)\r\n                        จากลูกบ้านที่มาติดต่อ หรือจากฝ่ายนิติบุคคลแล้ว หรือไม่\r\n                      </p>\r\n                    </CardBody>\r\n                  </Card>\r\n                </GridItem>\r\n              </GridContainer>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button color=\"success\" onClick={onCreateClick}>\r\n                สร้างโครงการใหม่\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer });\r\n\r\nconst mapDispatchToProps = {\r\n  CreateCompanyAction,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyAdd);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nexport default function TableCustom(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTableCustom.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n","export function createData(company_id, company_code, company_name, company_promotion, status) {\r\n    return { company_id, company_code, company_name, company_promotion, status };\r\n}\r\n\r\nexport function addRow(valueObjArr) {\r\n    return valueObjArr.map(item => {\r\n        return createData(\r\n            item.company_id,\r\n            item.company_code,\r\n            item.company_name,\r\n            item.company_promotion,\r\n            item.status\r\n        )\r\n    })\r\n}\r\n\r\nexport const headerTable = {\r\n    company_id: \"\",\r\n    company_code: \"รหัสโครงการ\",\r\n    company_name: \"ชื่อโครงการ\",\r\n    company_promotion: \"โปร\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\nexport const itemSelectBoxs = [\r\n    {\r\n        value: \"STANDARD\"\r\n        , text: \"Standard\"\r\n    }, {\r\n        value: \"PRO\"\r\n        , text: \"Pro\"\r\n    }, {\r\n        value: \"PROPLUS\"\r\n        , text: \"Pro plus\"\r\n    }\r\n]\r\n\r\nexport const itemRadioBoxs = [\r\n    {\r\n        value: \"true\"\r\n        , text: \"จอดฟรีแยกตามวันนั้นๆ\"\r\n    }, {\r\n        value: \"false\"\r\n        , text: \"จอดฟรีเฉพาะวันแรกที่จอดวันเดียวเท่านั้น\"\r\n    }\r\n]\r\n\r\nexport const getStatus = (status) => {\r\n    switch (status) {\r\n        case \"NORMAL\":\r\n            return \"สถานะพร้อมใช้งาน\";\r\n        case \"EXPIRE\":\r\n            return \"สถานะหมดอายุ\";\r\n        case \"NOTOPEN\":\r\n            return \"สถานะยังไม่เปิดให้บริการ\"\r\n        default:\r\n            return \"สถานะระงับการให้บริการ\";\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      maxWidth: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  }));","import React, { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useStyles } from './ButtonSearchStyle';\r\n\r\n\r\nfunction ButtonSearch(props) {\r\n    const { placeholder, searchFunc } = props\r\n    const classes = useStyles();\r\n    const [text, setText] = useState(\"\");\r\n    function onSearchClick(e) {\r\n        e.preventDefault();\r\n        searchFunc(text);\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder={placeholder}\r\n                inputProps={\r\n                    {\r\n                        'aria-label': {placeholder},\r\n                        onChange: event => setText(event.target.value)\r\n                    }}\r\n\r\n            />\r\n            <IconButton type=\"submit\"\r\n                className={classes.iconButton}\r\n                aria-label=\"search\"\r\n                onClick={onSearchClick}\r\n            >\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    )\r\n}\r\nexport default ButtonSearch;","export const editCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}","// import Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deepOrange, green, grey, red,yellow } from '@material-ui/core/colors';\r\nconst useStyles = makeStyles((theme) => ({\r\n    square: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    }, normalStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#fff',\r\n        backgroundColor: green[500]\r\n    }, expireStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#fff',\r\n        backgroundColor: red[500]\r\n    }, disableStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#fff',\r\n        backgroundColor: grey[500]\r\n    }, notopenStatus: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '4px',\r\n        padding: '5px 15px',\r\n        color: '#000',\r\n        backgroundColor: yellow[500]\r\n    }\r\n}));\r\n\r\nfunction AvatarForm(props) {\r\n    const classes = useStyles();\r\n    const { text, status } = props;\r\n    const getStyle = (item) => {\r\n        switch (item) {\r\n            case \"NORMAL\":\r\n                return classes.normalStatus;\r\n            case \"EXPIRE\":\r\n                return classes.expireStatus;\r\n            case \"NOTOPEN\":\r\n                return classes.notopenStatus;\r\n            default:\r\n                return classes.disableStatus;\r\n        }\r\n    }\r\n    return (\r\n        <div className={getStyle(status)}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvatarForm;","import FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nexport default function Label(props) {\r\n    const { title, value } = props\r\n    return (\r\n        <FormControl disabled style={{ width: \"100%\" }} >\r\n            <InputLabel>{title}</InputLabel>\r\n            <Input value={value} />\r\n        </FormControl>\r\n    )\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nexport const modalStyle = makeStyles(() => ({\r\n  paper: {\r\n    minWidth: \"600px\",\r\n    minHeight: \"650px\",\r\n  },\r\n  headModalAdd: {\r\n    backgroundColor: \"#388e3c\",\r\n    color: \"#fff\",\r\n  },\r\n  headModalEdit: {\r\n    backgroundColor: \"#1a237e\",\r\n    color: \"#fff\",\r\n  },\r\n  btnCancel: {\r\n    backgroundColor: \"#ffc400\",\r\n    color: \"#000\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#b28900\",\r\n    },\r\n  },\r\n  btnSave: {\r\n    backgroundColor: \"#388e3c\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#1b5e20\",\r\n    },\r\n  },\r\n  btnEnable: {\r\n    backgroundColor: \"#2196f3\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#1976d2\",\r\n    },\r\n  },\r\n  btnAdd: {\r\n    backgroundColor: \"#3ea90a\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#327d0e\",\r\n    },\r\n  },\r\n  btnDisable: {\r\n    backgroundColor: \"#f32121\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#9b0b0b\",\r\n    },\r\n  },\r\n  btnSelect: {\r\n    backgroundColor: \"#2196f3\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#1976d2\",\r\n    },\r\n  },\r\n  btnImportExcel: {\r\n    padding: \"10px\",\r\n    fontWeight: \"600\",\r\n    backgroundColor: \"#311b92\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#000063\",\r\n    },\r\n  },\r\n  btnUpload: {\r\n    padding: \"10px\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"18px\",\r\n    backgroundColor: \"#130af7\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#0000aa\",\r\n    },\r\n  },\r\n  btnNextPage: {\r\n    padding: \"10px\",\r\n    fontWeight: \"600\",\r\n    fontSize: \"18px\",\r\n    backgroundColor: \"#29b6f6\",\r\n    color: \"#fff\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#0086c3\",\r\n    },\r\n  },\r\n  chipAvailable: {\r\n    backgroundColor: \"#3ea90a\",\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    color: \"#fff\",\r\n  },\r\n  chipDisable: {\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n    backgroundColor: \"#f32121\",\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n","import {\r\n  itemSelectBoxs,\r\n  itemRadioBoxs,\r\n  getStatus,\r\n} from \"../data/Company-edit-data\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport DateMaterialUi from \"components/DateTime/DateMaterialUi\";\r\nimport SelectBox from \"components/Select/SelectBox\";\r\nimport CheckBox from \"components/CheckBox/CheckBox\";\r\nimport RadioBox from \"components/RadioBox/RadioBox\";\r\nimport InputFile from \"components/Input/InputFile\";\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AvatarForm from \"components/Avatar/Avatar-form\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Label from \"components/Label/Label\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { modalStyle } from \"utils/modalStyle.utils\";\r\nimport moment from \"moment\";\r\nfunction CompanyEditModalInfo(props) {\r\n  const {\r\n    companyInfo,\r\n    setCompanyInfo,\r\n    checkCal,\r\n    setCheckCal,\r\n    checkSecureEstampVisitor,\r\n    setCheckSecureEstampVisitor,\r\n    checkSecureEstampBooking,\r\n    setCheckSecureEstampBooking,\r\n    checkLineNotificationBoardcast,\r\n    setCheckLineNotificationBoardcast,\r\n    promotion,\r\n    setPromotion,\r\n    setImage,\r\n    setRemark,\r\n    setSelectExceptDay,\r\n    setDateStart,\r\n    setDateEnd,\r\n    setLineConfig,\r\n    dateStart,\r\n    dateEnd,\r\n    remark,\r\n    lineConfig,\r\n    selectExceptDay,\r\n  } = props;\r\n  const classes = modalStyle();\r\n  //-----------------Date Handing\r\n  function handdingDateStart(date) {\r\n    if (moment(date) > moment(dateEnd)) {\r\n      const newMoment = moment(date).add(1, \"days\");\r\n      setDateStart(date);\r\n      setDateEnd(newMoment);\r\n    } else setDateStart(date);\r\n  }\r\n  function handdingDateEnd(date) {\r\n    if (moment(date) < moment(dateStart)) {\r\n      const newMoment = moment(date).subtract(1, \"days\");\r\n      setDateStart(newMoment);\r\n      setDateEnd(date);\r\n    } else setDateEnd(date);\r\n  }\r\n  //------------Status Avatar\r\n  let statusAvatarElem = null;\r\n  if (companyInfo.status) {\r\n    statusAvatarElem = (\r\n      <GridContainer>\r\n        <GridItem>\r\n          <AvatarForm\r\n            text={getStatus(companyInfo.status)}\r\n            status={companyInfo.status}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n  }\r\n\r\n  //-------------\r\n  let formCreateDataElem = null;\r\n  if (companyInfo.create_date) {\r\n    formCreateDataElem = (\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"วันที่สร้าง\"\r\n              defaultValue={companyInfo.create_date}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"ผู้สร้าง\"\r\n              defaultValue={companyInfo.create_by}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n  //-------------When updated data\r\n  let formUpdateDataElem = null;\r\n  if (companyInfo.update_date) {\r\n    formUpdateDataElem = (\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"วันที่แก้ไขล่าสุด\"\r\n              defaultValue={companyInfo.update_date}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"ผู้แก้ไขล่าสุด\"\r\n              defaultValue={companyInfo.update_by}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n  //-------------When Disable data\r\n  let formDisableDataElem = null;\r\n  if (companyInfo.delete_date) {\r\n    formDisableDataElem = (\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"วันที่ระงับให้บริการล่าสุด\"\r\n              defaultValue={companyInfo.delete_date}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={6} md={6}>\r\n            <TextField\r\n              disabled\r\n              label=\"ผู้ระงับล่าสุด\"\r\n              defaultValue={companyInfo.delete_by}\r\n              variant=\"filled\"\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <DialogContent dividers={scroll === \"paper\"}>\r\n      <div>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={12}>\r\n            {statusAvatarElem}\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={5}>\r\n                <Label title=\"Company ID\" value={companyInfo.company_id} />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={5}>\r\n                <CustomInput\r\n                  labelText=\"รหัสโครงการ\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    maxLength: \"15\",\r\n                    value: companyInfo.company_code,\r\n                    onChange: (event) =>\r\n                      setCompanyInfo({\r\n                        ...companyInfo,\r\n                        company_code: event.target.value,\r\n                      }),\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <CustomInput\r\n                  labelText=\"ชื่อโครงการ\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    maxLength: \"255\",\r\n                    value: companyInfo.company_name,\r\n                    onChange: (event) =>\r\n                      setCompanyInfo({\r\n                        ...companyInfo,\r\n                        company_name: event.target.value,\r\n                      }),\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <InputFile\r\n                  title=\"เลือกรูปภาพหลักฐานที่ขอแก้ไขข้อมูล\"\r\n                  setValue={setImage}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={6} md={6}>\r\n                <DateMaterialUi\r\n                  title=\"วันที่เริ่มเปิดให้บริการ\"\r\n                  selectedDate={dateStart}\r\n                  setSelectedDate={handdingDateStart}\r\n                />\r\n              </GridItem>\r\n              <br></br>\r\n              <GridItem xs={12} sm={6} md={6}>\r\n                <DateMaterialUi\r\n                  title=\"วันทีหยุดให้บริการ\"\r\n                  selectedDate={dateEnd}\r\n                  setSelectedDate={handdingDateEnd}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            {formCreateDataElem}\r\n            {formUpdateDataElem}\r\n            {formDisableDataElem}\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <SelectBox\r\n                  title=\"เลือก Pro\"\r\n                  setValue={setPromotion}\r\n                  value={promotion}\r\n                  items={itemSelectBoxs}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                  <CardHeader color=\"warning\" stats icon>\r\n                    <CardIcon color=\"warning\">\r\n                      <Icon>request_page</Icon>\r\n                    </CardIcon>\r\n                    <p>Calculate Setup</p>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkCal}\r\n                          setCheck={setCheckCal}\r\n                          title=\"เปิดระบบคิดเงิน\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <RadioBox\r\n                          title=\"เลือกการคำนวนเวลาจอดฟรี\"\r\n                          value={selectExceptDay}\r\n                          setCheck={setSelectExceptDay}\r\n                          items={itemRadioBoxs}\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={5}>\r\n                        <CustomInput\r\n                          labelText=\"ค่าปรับบัตรหาย\"\r\n                          id=\"setup-cardlost\"\r\n                          formControlProps={{\r\n                            fullWidth: false,\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: \"5\",\r\n                            value: companyInfo.price_of_cardloss,\r\n                            onChange: (event) =>\r\n                              setCompanyInfo({\r\n                                ...companyInfo,\r\n                                price_of_cardloss: event.target.value,\r\n                              }),\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                  </CardBody>\r\n                </Card>\r\n              </GridItem>\r\n            </GridContainer>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                  <CardHeader color=\"danger\" stats icon>\r\n                    <CardIcon color=\"danger\">\r\n                      <Icon>admin_panel_settings</Icon>\r\n                    </CardIcon>\r\n                    <p className={classes.cardCategory}>Security Setup</p>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkLineNotificationBoardcast}\r\n                          setCheck={setCheckLineNotificationBoardcast}\r\n                          title=\"เปิด Boardcast Line Notification\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkSecureEstampVisitor}\r\n                          setCheck={setCheckSecureEstampVisitor}\r\n                          title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Visitor ทั่วไป)\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CheckBox\r\n                          check={checkSecureEstampBooking}\r\n                          setCheck={setCheckSecureEstampBooking}\r\n                          title=\"เปิดระบบตรวจสอบ E-Stamp ก่อนออกจากโครงการ (Booking หรือจากการจอง)\"\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                    <p style={{ color: \"red\" }}>\r\n                      ***เป็นการตรวจสอบว่าผู้มาเยือนได้ถูกประทับตรา (E-Stamp)\r\n                      จากลูกบ้านที่มาติดต่อ หรือจากฝ่ายนิติบุคคลแล้ว หรือไม่\r\n                    </p>\r\n                  </CardBody>\r\n                </Card>\r\n              </GridItem>\r\n            </GridContainer>\r\n            <br></br>\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <Card>\r\n                  <CardHeader color=\"info\" stats icon>\r\n                    <CardIcon color=\"info\">\r\n                      <Icon>app_settings_alt</Icon>\r\n                    </CardIcon>\r\n                    <p>Line Configuration</p>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <GridContainer>\r\n                      <GridItem xs={12} sm={12} md={12}>\r\n                        <CustomInput\r\n                          labelText=\"Line configuration data\"\r\n                          formControlProps={{\r\n                            fullWidth: true,\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: \"1000\",\r\n                            value: lineConfig,\r\n                            multiline: true,\r\n                            rows: 7,\r\n                            onChange: (event) =>\r\n                              setLineConfig(event.target.value),\r\n                          }}\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n                  </CardBody>\r\n                </Card>\r\n              </GridItem>\r\n            </GridContainer>\r\n\r\n            <GridContainer>\r\n              <GridItem xs={12} sm={12} md={12}>\r\n                <CustomInput\r\n                  labelText=\"กรอกเหตุผลที่แก้ไขข้อมูล\"\r\n                  id=\"comp-name-th\"\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    maxLength: \"255\",\r\n                    value: remark,\r\n                    multiline: true,\r\n                    rows: 4,\r\n                    onChange: (event) => setRemark(event.target.value),\r\n                  }}\r\n                />\r\n              </GridItem>\r\n            </GridContainer>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </div>\r\n    </DialogContent>\r\n  );\r\n}\r\n\r\nexport default CompanyEditModalInfo;\r\n","import GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nfunction CompanyEditModalDisable(props) {\r\n    const {\r\n        setImage,\r\n        setRemark,\r\n        remark,\r\n    } = props;\r\n    return (\r\n        <DialogContent dividers={scroll === 'paper'} >\r\n            <div>\r\n                <GridContainer>\r\n                    <GridItem xs={12} sm={12} md={12}>\r\n                        <GridContainer>\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <InputFile\r\n                                    title=\"เลือกรูปภาพหลักฐานที่แจ้งระงับโครงการ\"\r\n                                    setValue={setImage}\r\n                                />\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                        <GridContainer>\r\n                            <GridItem xs={12} sm={12} md={12}>\r\n                                <CustomInput\r\n                                    labelText=\"กรอกเหตุผลที่แก้ไขข้อมูล\"\r\n                                    id=\"comp-name-th\"\r\n                                    formControlProps={{\r\n                                        fullWidth: true,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        maxLength: \"255\",\r\n                                        value: remark,\r\n                                        multiline: true,\r\n                                        rows: 4,\r\n                                        onChange: event => setRemark(event.target.value)\r\n                                    }}\r\n                                />\r\n                            </GridItem>\r\n                        </GridContainer>\r\n                    </GridItem>\r\n                </GridContainer>\r\n            </div>\r\n        </DialogContent>\r\n    )\r\n}\r\n\r\nexport default CompanyEditModalDisable;","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_REMARKNOTFOUND,\r\n    MESSAGE_FILE_IMAGE_INVALID\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, DISABLE_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\n\r\nexport const DisableCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (disableCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${DISABLE_COMPANY_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction disableCompanyMiddleware(valuesObj) {\r\n     if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    }else if(!isImage(getExtension(valuesObj.image.name))){\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    } else if(!valuesObj.remark){\r\n        swal(\"Warning!\", MESSAGE_REMARKNOTFOUND, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_REMARKNOTFOUND,\r\n    MESSAGE_FILE_IMAGE_INVALID\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, ENABLE_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\n\r\nexport const EnableCompanyAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (enableCompanyMiddleware(credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${ENABLE_COMPANY_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        refreshPage();\r\n                        dispatch(setSuccess());\r\n                    });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction enableCompanyMiddleware(valuesObj) {\r\n    if (!valuesObj.image) {\r\n        swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n        return false;\r\n    } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n        swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n        return false;\r\n    } else if (!valuesObj.remark) {\r\n        swal(\"Warning!\", MESSAGE_REMARKNOTFOUND, \"warning\");\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { GetCompanyByID } from 'actions/company/company-edit.action'\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CompanyEditModalInfo from './Company-edit-modal-info'\r\nimport CompanyEditModalDisable from './Company-edit-modal-disable'\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport swal from 'sweetalert';\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport moment from \"moment\";\r\nimport { EditCompanyAction } from 'actions/company/company-edit.action'\r\nimport { DisableCompanyAction } from 'actions/company/company-disable.action'\r\nimport { EnableCompanyAction } from 'actions/company/company-enable.action'\r\n\r\nfunction CompanyEditModal(props) {\r\n    const { showModal, setShowModal, valuesObj } = props\r\n    const scroll = 'paper';\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const Store = useSelector(state => state)\r\n    const classes = modalStyle();\r\n    //----------State\r\n    const [companyInfo, setCompanyInfo] = useState({\r\n        company_id: \"\",\r\n        company_code: \"\",\r\n        company_name: \"\",\r\n        company_promotion: \"\",\r\n        status: \"DISABLE\",\r\n        company_start_date: \"\",\r\n        company_expire_date: \"\",\r\n        company_remark: \"\",\r\n        create_by: \"\",\r\n        create_date: \"\",\r\n        update_by: \"\",\r\n        update_date: \"\",\r\n        delete_by: \"\",\r\n        delete_date: \"\",\r\n        calculate_enable: false,\r\n        price_of_cardloss: \"0\",\r\n        except_time_split_from_day: false,\r\n        line_notification_broadcast:false,\r\n        line_company_data :\"\"\r\n    })\r\n    //----------Set default value\r\n    const dStart = moment();\r\n    const dEnd = moment().add(30, 'days');\r\n    const [showFormInfo, setShowFormInfo] = useState(true);\r\n    const [showFormDisable, setShowFormDisable] = useState(false);\r\n    const [showFormEnable, setShowFormEnable] = useState(false);\r\n    const [headerTextModal, setHeaderTextModal] = useState(\"แก้ไขข้อมูลโครงการ\");\r\n    //-------------------\r\n    const [checkCal, setCheckCal] = useState(false);\r\n    const [checkSecureEstampVisitor, setCheckSecureEstampVisitor] = useState(false);\r\n    const [checkSecureEstampBooking, setCheckSecureEstampBooking] = useState(false);\r\n    const [checkLineNotificationBoardcast, setCheckLineNotificationBoardcast] = useState(false);\r\n    \r\n    const [promotion, setPromotion] = useState(\"\");\r\n    //----------State\r\n    const [dateStart, setDateStart] = useState(dStart);\r\n    const [dateEnd, setDateEnd] = useState(dEnd);\r\n    const [image, setImage] = useState(null);\r\n    const [remark, setRemark] = useState(\"\")\r\n    const [lineConfig, setLineConfig] = useState(\"\");\r\n    const [selectExceptDay, setSelectExceptDay] = useState(\"true\");\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadEditForm();\r\n    }, []);\r\n    async function loadEditForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const values = {\r\n                company_id: parseInt(valuesObj)\r\n            }\r\n            const getData = await GetCompanyByID(dispatch, values, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\");\r\n            } else {\r\n                const result = getData.result;\r\n                setCompanyInfo(result)\r\n                setCheckCal(result.calculate_enable);\r\n                setCheckSecureEstampVisitor(result.visitor_estamp_verify);\r\n                setCheckSecureEstampBooking(result.booking_estamp_verify);\r\n                setCheckLineNotificationBoardcast(result.line_notification_broadcast)\r\n                setPromotion(result.company_promotion)\r\n                setDateStart(result.company_start_date ? result.company_start_date : dStart)\r\n                setDateEnd(result.company_expire_date ? result.company_expire_date : dEnd)\r\n                setSelectExceptDay(result.except_time_split_from_day.toString())\r\n                setLineConfig(JSON.stringify(result.line_company_data))\r\n            }\r\n        }\r\n    }\r\n\r\n    //----------------On Create\r\n    function onEditClick() {\r\n        dispatch(EditCompanyAction(history, {\r\n            company_id: companyInfo.company_id.toString(),\r\n            company_code: companyInfo.company_code,\r\n            company_name: companyInfo.company_name,\r\n            price_of_cardloss: companyInfo.price_of_cardloss.toString(),\r\n            company_start_date: moment(dateStart).set({ hour: 0, minute: 0, second: 0 }).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n            company_expire_date: moment(dateEnd).set({ hour: 0, minute: 0, second: 0 }).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n            company_promotion: promotion,\r\n            calculate_enable: checkCal,\r\n            except_time_split_from_day: selectExceptDay === \"true\" ? true : false,\r\n            image,\r\n            remark,\r\n            booking_estamp_verify: checkSecureEstampBooking,\r\n            visitor_estamp_verify: checkSecureEstampVisitor,\r\n            line_notification_broadcast: checkLineNotificationBoardcast,\r\n            line_company_data: lineConfig\r\n        }, Store.loginReducer.result))\r\n    }\r\n    //---------------On Disable \r\n    function onDisableClick() {\r\n        dispatch(DisableCompanyAction(history, {\r\n            company_id: companyInfo.company_id.toString(),\r\n            image,\r\n            remark\r\n        }, Store.loginReducer.result))\r\n    }\r\n    //---------------On Enable\r\n    function onEnableClick() {\r\n        dispatch(EnableCompanyAction(history, {\r\n            company_id: companyInfo.company_id.toString(),\r\n            image,\r\n            remark\r\n        }, Store.loginReducer.result))\r\n    }\r\n    function onCloseModal() {\r\n        setShowModal(false);\r\n    }\r\n    //------------btn disable\r\n    let btnDisableElem = null;\r\n    let btnEditSaveElem = null;\r\n    let btnEnableElem = null;\r\n    if (companyInfo.status.toUpperCase() !== 'DISABLE') {\r\n        btnDisableElem = <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            endIcon={<Icon>remove_circle</Icon>}\r\n            onClick={() => { setShowFormInfo(false); setShowFormDisable(true); setHeaderTextModal(\"ระงับการใช้งานโครงการ\"); }}\r\n        >\r\n            ระงับการใช้งาน\r\n        </Button>\r\n        btnEditSaveElem = <Button onClick={onEditClick}\r\n            color=\"primary\"\r\n            className={classes.btnSave}\r\n            endIcon={<Icon>save</Icon>}\r\n        >\r\n            แก้ไขข้อมูล\r\n        </Button>\r\n    } else {\r\n        btnEnableElem = <Button\r\n            className={classes.btnEnable}\r\n            endIcon={<Icon>history</Icon>}\r\n            onClick={() => { setShowFormInfo(false); setShowFormEnable(true); setHeaderTextModal(\"เปิดให้บริการโครงการใหม่อีกครั้ง\"); }}\r\n        >\r\n            เปิดให้บริการใหม่\r\n        </Button>\r\n    }\r\n    //----------------Show Form Info\r\n    let formInfoElem = null;\r\n    let formBottomElemInfo = null;\r\n    if (showFormInfo) {\r\n        formInfoElem = <CompanyEditModalInfo\r\n            companyInfo={companyInfo}\r\n            onCloseModal={onCloseModal}\r\n            setCompanyInfo={setCompanyInfo}\r\n            setShowFormInfo={setShowFormInfo}\r\n            checkCal={checkCal}\r\n            setCheckCal={setCheckCal}\r\n            checkSecureEstampVisitor={checkSecureEstampVisitor}\r\n            setCheckSecureEstampVisitor={setCheckSecureEstampVisitor}\r\n            checkLineNotificationBoardcast={checkLineNotificationBoardcast}\r\n            setCheckLineNotificationBoardcast={setCheckLineNotificationBoardcast}\r\n            checkSecureEstampBooking={checkSecureEstampBooking}\r\n            setCheckSecureEstampBooking={setCheckSecureEstampBooking}\r\n            promotion={promotion}\r\n            setPromotion={setPromotion}\r\n            setImage={setImage}\r\n            remark={remark}\r\n            setRemark={setRemark}\r\n            selectExceptDay={selectExceptDay}\r\n            setSelectExceptDay={setSelectExceptDay}\r\n            setDateStart={setDateStart}\r\n            setDateEnd={setDateEnd}\r\n            dateStart={dateStart}\r\n            dateEnd={dateEnd}\r\n            setLineConfig={setLineConfig}\r\n            lineConfig={lineConfig}\r\n        />\r\n        formBottomElemInfo = <DialogActions>\r\n            {btnEnableElem}\r\n            {btnDisableElem}\r\n            {btnEditSaveElem}\r\n            <Button onClick={onCloseModal}\r\n                color=\"primary\"\r\n                className={classes.btnCancel}\r\n            >\r\n                ยกเลิก\r\n            </Button>\r\n        </DialogActions>\r\n    }\r\n    //--------------Show Form Disable\r\n    let formDisableElem = null;\r\n    let formBottomElemDisable = null;\r\n    if (showFormDisable) {\r\n        formDisableElem = <CompanyEditModalDisable\r\n            setImage={setImage}\r\n            remark={remark}\r\n            setRemark={setRemark}\r\n        />\r\n        formBottomElemDisable = <DialogActions>\r\n            <Button onClick={onDisableClick}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                endIcon={<Icon>save</Icon>}\r\n            >\r\n                ระงับโครงการ\r\n            </Button>\r\n            <Button onClick={onCloseModal}\r\n                color=\"primary\"\r\n                className={classes.btnCancel}\r\n            >\r\n                ยกเลิก\r\n            </Button>\r\n        </DialogActions>\r\n    }\r\n    //-------------Show Form Enable\r\n    let formEnableElem = null;\r\n    let formBottomElemEnable = null;\r\n    if (showFormEnable) {\r\n        formEnableElem = <CompanyEditModalDisable\r\n            setImage={setImage}\r\n            remark={remark}\r\n            setRemark={setRemark}\r\n        />\r\n        formBottomElemEnable = <DialogActions>\r\n            <Button onClick={onEnableClick}\r\n                className={classes.btnEnable}\r\n                endIcon={<Icon>save</Icon>}\r\n            >\r\n                เปิดให้บริการใหม่\r\n            </Button>\r\n            <Button onClick={onCloseModal}\r\n                color=\"primary\"\r\n                className={classes.btnCancel}\r\n            >\r\n                ยกเลิก\r\n            </Button>\r\n        </DialogActions>\r\n    }\r\n    //-------------------------------------\r\n    return (\r\n        <Dialog\r\n            open={showModal}\r\n            scroll={scroll}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle className={classes.headModalEdit} id=\"scroll-dialog-title\">{headerTextModal}</DialogTitle>\r\n            <DialogContent>\r\n                {formInfoElem}\r\n                {formDisableElem}\r\n                {formEnableElem}\r\n            </DialogContent>\r\n            {formBottomElemInfo}\r\n            {formBottomElemDisable}\r\n            {formBottomElemEnable}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CompanyEditModal;","import PropTypes from 'prop-types';\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSvgIconStyle.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function SvgIconStyle({ src, sx }) {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 24,\r\n        height: 24,\r\n        display: 'inline-block',\r\n        bgcolor: 'currentColor',\r\n        mask: `url(${src}) no-repeat center / contain`,\r\n        WebkitMask: `url(${src}) no-repeat center / contain`,\r\n        ...sx,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n// component\r\nimport SvgIconStyle from './SvgIconStyle';\r\n// ----------------------------------------------------------------------\r\n\r\nLogoExcel.propTypes = {\r\n  sx: PropTypes.object,\r\n};\r\nconst getIcon = (name) => <SvgIconStyle src={`/icons/${name}.svg`} sx={{ width: 1, height: 1 }} />;\r\nexport default function LogoExcel({ sx }) {\r\n  const logo = (\r\n    <Box sx={{ width: 80, height: 60, display: 'flex', justifyContent: 'center', alignItems: 'center', ...sx }}>\r\n      {getIcon('ic_excel')}\r\n    </Box>\r\n  );\r\n\r\n  return <>{logo}</>;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as moment from 'moment';\r\n// @mui\r\nimport { IconButton } from '@mui/material';\r\n// components\r\nimport LogoExcel from '../LogoExcel';\r\n\r\nconst ExcelJs = require('exceljs');\r\n\r\n// draf header\r\n// const header_arr = [{ name: 'รายงาน', value: reportname }, { name: 'วันที่', value: '21' }, { name: 'ถึง', value: '23' }];\r\n\r\n// draf table\r\n// const tableExcel = {\r\n//     name: 'MyTable',\r\n//     ref: 'A1',\r\n//     headerRow: true,\r\n//     totalsRow: true,\r\n//     style: {\r\n//         // theme: 'None',\r\n//         showRowStripes: true\r\n//     },\r\n//     columns: [\r\n//         { name: 'Date', totalsRowLabel: 'Totals:', filterButton: true },\r\n//         { name: 'Amount', totalsRowFunction: 'sum', filterButton: false }\r\n//     ],\r\n//     rows: [\r\n//         [new Date('2019-07-20'), 70.1],\r\n//         [new Date('2019-07-21'), 70.6],\r\n//         [new Date('2019-07-22'), 70.1]\r\n//     ]\r\n// }\r\n\r\nExcelExportWithExcelJs.propTypes = {\r\n    fileName: PropTypes.string,\r\n    sheetName: PropTypes.string,\r\n    headers: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string,\r\n            value: PropTypes.string\r\n        })\r\n    ),\r\n    table: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        ref: PropTypes.string,\r\n        headerRow: PropTypes.bool,\r\n        totalsRow: PropTypes.bool,\r\n        style: PropTypes.shape({\r\n            theme: PropTypes.string,\r\n            showRowStripes: PropTypes.bool\r\n        }),\r\n        columns: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                name: PropTypes.string,\r\n                filterButton: PropTypes.bool,\r\n                totalsRowLabel: PropTypes.string,\r\n                totalsRowFunction: PropTypes.oneOf([\r\n                    'none',\r\n                    'average',\r\n                    'countNums',\r\n                    'count',\r\n                    'max',\r\n                    'min',\r\n                    'stdDev',\r\n                    'var',\r\n                    'sum',\r\n                    'custom'\r\n                ]),\r\n                totalsRowFormula: PropTypes.string\r\n            })\r\n        ),\r\n        rows: PropTypes.array\r\n    })\r\n};\r\nfunction ExcelExportWithExcelJs({ fileName, sheetName, headers, table }) {\r\n    const currentDateText = moment().format('DDMMyyyy_HHmmss');\r\n\r\n    const file_name = fileName ? `${fileName} ${currentDateText}.xlsx` : `download_${currentDateText}.xlsx`;\r\n    const sheet_name = sheetName ? sheetName : 'Sheet1';\r\n    const columns_count = table?.columns?.length || 0;\r\n\r\n    const exportExcelFile = async () => {\r\n        const workbook = new ExcelJs.Workbook();\r\n        const sheet = workbook.addWorksheet(sheet_name);\r\n\r\n        // set table\r\n        sheet.addTable(table ? table : null);\r\n\r\n        // Autofit column widths\r\n        let column_index = 0;\r\n        sheet.columns.forEach((column) => {\r\n            const lengths = column.values.map((v) => v.toString().length);\r\n            const maxLength = Math.max(...lengths.filter((v) => typeof v === 'number'));\r\n            if (column_index > 0) column.width = maxLength + 2;\r\n            column_index++;\r\n        });\r\n\r\n        // set header\r\n        if (headers && headers.length > 0) {\r\n            headers.forEach((head, index) => {\r\n                const rowIndex = index + 1;\r\n                const row = sheet.getRow(rowIndex);\r\n                row.getCell(1).value = head.name;\r\n                row.getCell(2).value = head.value;\r\n                const firstCell = row.getCell(2).address;\r\n                const lastCell = row.getCell(columns_count).address;\r\n                sheet.mergeCells(firstCell, lastCell);\r\n            });\r\n        }\r\n\r\n        // set fill last row\r\n        // const last_row = sheet.lastRow;\r\n        // last_row.fill = {\r\n            // type: 'pattern',\r\n            // pattern: 'solid',\r\n            // fgColor: { argb: '92D050' }\r\n        // };\r\n\r\n        // write to a new buffer\r\n        const buffer = await workbook.xlsx.writeBuffer();\r\n        const blob = new Blob([buffer]);\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = file_name;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n    };\r\n    return (\r\n        <>\r\n            <IconButton onClick={exportExcelFile}>\r\n                <LogoExcel sx={{ fontSize: 40 }} />\r\n            </IconButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExcelExportWithExcelJs;\r\n","import React from \"react\";\r\nimport { ExcelExportWithExcelJs } from \"../../../components/Excel\";\r\n\r\nfunction generateDataSet(values) {\r\n  const rowItems = values\r\n    ? values.map((item, index) => {\r\n        return [\r\n          index + 1,\r\n          item.company_id.toString(),\r\n          item.company_code,\r\n          item.company_name,\r\n          item.company_promotion,\r\n          item.status,\r\n        ];\r\n      })\r\n    : [];\r\n\r\n  const tableExcel = {\r\n    name: \"TablePaymentTransaction\",\r\n    ref: \"A3\",\r\n    headerRow: true,\r\n    totalsRow: true,\r\n    style: {\r\n      theme: \"TableStyleMedium9\",\r\n      showRowStripes: true,\r\n    },\r\n    columns: [\r\n      { name: \"No\" },\r\n      { name: \"ID โครงการ\", filterButton: true },\r\n      { name: \"รหัสโครงการ\", filterButton: true },\r\n      { name: \"ชื่อโครงการ\", filterButton: true },\r\n      { name: \"ประเภท\", filterButton: true },\r\n      { name: \"สถานะ\", filterButton: true },\r\n    ],\r\n\r\n    rows: [...rowItems],\r\n  };\r\n  return tableExcel;\r\n}\r\n\r\nfunction Excel({ headers, values }) {\r\n  const reportname =\r\n    headers && headers.reportName ? headers.reportName : \"รายงาน\";\r\n  const header_arr = [{ name: \"รายงาน\", value: reportname }];\r\n\r\n  const multiDataSet = generateDataSet(values);\r\n  return (\r\n    <ExcelExportWithExcelJs\r\n      fileName={`${reportname}`}\r\n      table={multiDataSet}\r\n      headers={header_arr}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Excel;\r\n\r\n//     const datestart = headers ? `${headers.dateStart}` : '-';\r\n//     const dateend = headers ? `${headers.dateEnd}` : '-';\r\n//     const textsearch = headers && headers.searchText ? `${headers.searchText}` : null;\r\n","import { styles } from \"../Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n// import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\n// import { addRow } from \"./Company-edit-data\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from './data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from './Company-edit-style'\r\nimport CompanyEditModal from './modal/Company-edit-modal'\r\n// excel\r\nimport Excel from \"../excel/ExportExcel\";\r\n\r\nconst header = {\r\n    reportName: \"ข้อมูลโครงการ\",\r\n  };\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction CompanyEdit() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectRow, setSelectRow] = useState({ company_id: \"\" })\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        setSelectRow(company_id);\r\n        company_id && setShowModal(true);\r\n    }\r\n    //--------------Modal edit\r\n    let modalEditElem = null;\r\n    if (showModal) {\r\n        modalEditElem = <CompanyEditModal\r\n            showModal={showModal}\r\n            setShowModal={setShowModal}\r\n            valuesObj={selectRow}\r\n        />\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            {modalEditElem}\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>โครงการในระบบ (แก้ไขข้อมูลโครงการ)</h4>\r\n                            <p className={classes.cardCategoryWhite}>Company List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n\r\n                                                          <br></br>\r\n              {Store.companyGetAllReducer.result &&\r\n                Array.isArray(Store.companyGetAllReducer.result) &&\r\n                Store.companyGetAllReducer.result.length > 0 && (\r\n                  <Excel\r\n                    headers={header}\r\n                    values={Store.companyGetAllReducer.result}\r\n                  />\r\n                )}\r\n              <br></br>\r\n\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon company_id={row.company_id}>create</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyEdit);","export const homeCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}\r\nexport const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    }\r\n  };\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_HOME_SELECT_COMPANY_SUCCESS,\r\n    HTTP_HOME_CLEAR_COMPANY,\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, IMPORT_EXCEL_HOME_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\n\r\nexport const setSelectCompanySuccess = (payload) => ({\r\n    type: HTTP_HOME_SELECT_COMPANY_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSelectCompany = () => ({\r\n    type: HTTP_HOME_CLEAR_COMPANY\r\n})\r\n\r\nexport const ImportExcelHomeAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${IMPORT_EXCEL_HOME_API}`\r\n        const newCredential = { ...credential }\r\n        const items = newCredential.data;\r\n        const newItems = items.map(item => {\r\n            return {\r\n                home_address: item[0].value,\r\n                remark: item[1].value\r\n            }\r\n        })\r\n        const valuesObj = {\r\n            company_id: newCredential.company_id,\r\n            data: newItems\r\n        }\r\n        const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            swal(\"Success\", result.message, \"success\")\r\n                .then(() => {\r\n                    refreshPage();\r\n                    dispatch(setSuccess());\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_HOME_ALL_SUCCESS,\r\n    HTTP_GET_HOME_CLEAR\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYID_NOTFOUND\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_HOME_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetHomeAllSuccess = (payload) => ({\r\n    type: HTTP_GET_HOME_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearHomeAll = () => ({\r\n    type: HTTP_GET_HOME_CLEAR,\r\n})\r\n\r\nexport const GetHomeAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (getHomeMiddleware(history,credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_HOME_ALL_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetHomeAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetHomeAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getHomeMiddleware(history,valuesObj) {\r\n    if (!valuesObj.company_id) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYID_NOTFOUND, \"warning\");\r\n        history.goBack();\r\n    }\r\n    return true\r\n}","export function createData(company_id, company_code, company_name, company_promotion, status) {\r\n    return { company_id, company_code, company_name, company_promotion, status };\r\n}\r\n\r\nexport function addRow(valueObjArr) {\r\n    return valueObjArr.map(item => {\r\n        return createData(\r\n            item.company_id,\r\n            item.company_code,\r\n            item.company_name,\r\n            item.company_promotion,\r\n            item.status\r\n        )\r\n    })\r\n}\r\n\r\nexport const headerTable = {\r\n    company_id: \"\",\r\n    company_code: \"รหัสโครงการ\",\r\n    company_name: \"ชื่อโครงการ\",\r\n    company_promotion: \"โปร\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\nexport const headerHomeListTable = {\r\n    home_code: \"รหัสบ้าน\",\r\n    home_address: \"บ้านเลขที่\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\n\r\nexport const getStatus = (status) => {\r\n    switch (status) {\r\n        case \"NORMAL\":\r\n            return \"สถานะพร้อมใช้งาน\";\r\n        case \"EXPIRE\":\r\n            return \"สถานะหมดอายุ\";\r\n        default:\r\n            return \"สถานะระงับการให้บริการ\";\r\n    }\r\n}","import { styles } from \"./Home-main-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n// import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\n// import { addRow } from \"./Company-edit-data\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/home/home-import-excel.action\"\r\nimport { setClearHomeAll } from \"actions/home/home-get-all.action\"\r\nimport { headerTable } from '../data/Home-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { homeCompantStyle } from './Home-main-style'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(homeCompantStyle);\r\nfunction HomeMain() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeMainForm();\r\n    }, []);\r\n    async function loadHomeMainForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(setClearSelectCompany());\r\n            dispatch(setClearHomeAll());\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadHomeMainForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        const company_name = event.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id, company_name }))\r\n            history.push(\"/home-import\");\r\n        }\r\n    }\r\n    //--------------Modal edit\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>โครงการในระบบ (Import Home From Excel)</h4>\r\n                            <p className={classes.cardCategoryWhite}>Company List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            company_name={row.company_name}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id} company_name={row.company_name}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer, homeImportExcelReducer, homeGetAllReducer }) => ({ mainReducer, companyGetAllReducer, homeImportExcelReducer, homeGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    setClearHomeAll,\r\n    GetCompanyAllAction,\r\n    setSelectCompanySuccess,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeMain);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_VILLAGER_SELECT_COMPANY_SUCCESS,\r\n    HTTP_VILLAGER_CLEAR_COMPANY,\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, IMPORT_EXCEL_VILLAGER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\n\r\nexport const setVillagerSelectCompanySuccess = (payload) => ({\r\n    type: HTTP_VILLAGER_SELECT_COMPANY_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setVillagerClearSelectCompany = () => ({\r\n    type: HTTP_VILLAGER_CLEAR_COMPANY\r\n})\r\n\r\n\r\nexport const ImportExcelVillagerAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${IMPORT_EXCEL_VILLAGER_API}`\r\n        const newCredential = { ...credential }\r\n        let items = newCredential.data;\r\n        \r\n        const newItems = items.map(item => {\r\n            return {\r\n                home_address: item[0].value,\r\n                first_name: item[1].value,\r\n                last_name: item[2].value,\r\n                tel_number: item[3].value,\r\n                remark: item[4] ? item[4].value : null\r\n            }\r\n        })\r\n        const valuesObj = {\r\n            company_id: newCredential.company_id,\r\n            data: newItems\r\n        }\r\n        const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            swal(\"Success\", result.message, \"success\")\r\n                .then(() => {\r\n                    refreshPage();\r\n                    dispatch(setSuccess());\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\n\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_VILLAGER_ALL_SUCCESS,\r\n    HTTP_GET_VILLAGER_CLEAR\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYID_NOTFOUND\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_VILLAGER_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetVillagerAllSuccess = (payload) => ({\r\n    type: HTTP_GET_VILLAGER_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearVillagerAll = () => ({\r\n    type: HTTP_GET_VILLAGER_CLEAR,\r\n})\r\n\r\nexport const GetVillagerAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (getVillagerMiddleware(history,credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_VILLAGER_ALL_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetVillagerAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetVillagerAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getVillagerMiddleware(history,valuesObj) {\r\n    if (!valuesObj.company_id) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYID_NOTFOUND, \"warning\");\r\n        history.goBack();\r\n    }\r\n    return true\r\n}","export function createData(company_id, company_code, company_name, company_promotion, status) {\r\n    return { company_id, company_code, company_name, company_promotion, status };\r\n}\r\n\r\nexport function addRow(valueObjArr) {\r\n    return valueObjArr.map(item => {\r\n        return createData(\r\n            item.company_id,\r\n            item.company_code,\r\n            item.company_name,\r\n            item.company_promotion,\r\n            item.status\r\n        )\r\n    })\r\n}\r\n\r\nexport const headerTable = {\r\n    company_id: \"\",\r\n    company_code: \"รหัสโครงการ\",\r\n    company_name: \"ชื่อโครงการ\",\r\n    company_promotion: \"โปร\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\nexport const headerVillagerListTable = {\r\n    villager_id:\"ปุ่ม\",\r\n    villager_code:\"รหัสลูกบ้าน\",\r\n    home_address: \"บ้านเลขที่\",\r\n    full_name:\"ชื่อ-นามสกุล\",\r\n    tel_number:\"เบอร์โทรศัพท์\",\r\n    home_line_type:'line notification',\r\n    status: \"สถานะ\",\r\n}\r\n\r\n\r\nexport const getStatus = (status) => {\r\n    switch (status) {\r\n        case \"NORMAL\":\r\n            return \"สถานะพร้อมใช้งาน\";\r\n        case \"EXPIRE\":\r\n            return \"สถานะหมดอายุ\";\r\n        default:\r\n            return \"สถานะระงับการให้บริการ\";\r\n    }\r\n}","export const villagerCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}\r\nexport const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    },\r\n    cardHeader:{\r\n        background:\"linear-gradient(81deg, #66bb6a, #43a047)\"\r\n    }\r\n  };\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n// import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\n// import { addRow } from \"./Company-edit-data\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { setVillagerClearSelectCompany, setVillagerSelectCompanySuccess } from \"actions/villager/villager-import-excel.action\"\r\nimport { setClearVillagerAll } from \"actions/villager/villager-get-all.action\"\r\nimport { headerTable } from '../data/Villager-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { villagerCompantStyle, styles } from './Villager-main-style'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(villagerCompantStyle);\r\nfunction VillagerMain() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeMainForm();\r\n    }, []);\r\n    async function loadHomeMainForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(setVillagerClearSelectCompany());\r\n            dispatch(setClearVillagerAll());\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadHomeMainForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        const company_name = event.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            dispatch(setVillagerSelectCompanySuccess({ company_id, company_name }))\r\n            history.push(\"/villager-import\");\r\n        }\r\n    }\r\n    //--------------Modal edit\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #3f51b5, #283593)\" }} color=\"success\" >\r\n                            <h4 className={classes.cardTitleWhite}>โครงการในระบบ (Import Villager From Excel)</h4>\r\n                            <p className={classes.cardCategoryWhite}>Company List Table</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            company_name={row.company_name}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id} company_name={row.company_name}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer, villagerImportExcelReducer, villagerGetAllReducer }) => ({ mainReducer, companyGetAllReducer, villagerImportExcelReducer, villagerGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    setVillagerClearSelectCompany,\r\n    GetCompanyAllAction,\r\n    setVillagerSelectCompanySuccess,\r\n    setClearVillagerAll,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VillagerMain);","export const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    }\r\n  };\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const buttonStyle = makeStyles(() => ({\r\n    btnAdd: {\r\n        background: 'linear-gradient(60deg, #66bb6a, #43a047)',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        fontSize:\"17px\",\r\n        width:\"100%\",\r\n        height:\"120px\",\r\n        '&:hover': {\r\n            background: 'linear-gradient(60deg, #66bb6a, #1f5221)',\r\n        },\r\n    },btnEdit: {\r\n        background: 'linear-gradient(60deg, #ffa726, #fb8c00)',\r\n        color: '#fff',\r\n        boxShadow: \"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",\r\n        fontSize:\"17px\",\r\n        width:\"100%\",\r\n        height:\"120px\",\r\n        '&:hover': {\r\n            background: 'linear-gradient(60deg, #ffa726, #d05600)',\r\n        },\r\n    }\r\n}));","import {\r\n    HTTP_SELECT_COMPANY_SUCCESS,\r\n    HTTP_SELECT_COMPANY_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nexport const setSelectCompanySuccess = (payload) => ({\r\n    type: HTTP_SELECT_COMPANY_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSelectCompany = () => ({\r\n    type: HTTP_SELECT_COMPANY_CLEAR,\r\n})\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { buttonStyle } from \"utils/btnStyle.utils\"\r\nimport { setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserMain() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    function onCreateClick() {\r\n        history.push(\"/user-add-select\")\r\n    }\r\n    function onEditInformationClick() {\r\n        history.push(\"/user-edit-info-select\")\r\n    }\r\n    function onChangePrivilegeClick() {\r\n        history.push(\"/user-change-privilege-select\")\r\n    }\r\n    function onChangeCompanySelect() {\r\n        history.push(\"/user-change-company-select\")\r\n    }\r\n    function onAddOrDeleteCompanyList() {\r\n        history.push(\"/user-addordelete-listcompany-select\")\r\n    }\r\n    function onResetPassword() {\r\n        history.push(\"/user-reset-password-listcompany-select\")\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>จัดการผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>User Management</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <h3>เลือกทำรายการ</h3>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onCreateClick}\r\n                                        className={classesBtn.btnAdd}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>person_add</Icon>}\r\n                                    >\r\n                                        เพิ่มผู้ใช้งานใหม่\r\n                                    </Button>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onEditInformationClick}\r\n                                        className={classesBtn.btnEdit}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>recent_actors</Icon>}\r\n                                    >\r\n                                        แก้ไขข้อมูลผู้ใช้งาน\r\n                                    </Button>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onChangePrivilegeClick}\r\n                                        className={classesBtn.btnAdd}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>admin_panel_settings</Icon>}\r\n                                    >\r\n                                        เปลี่ยนสิทธิ์เข้าใช้งานระบบ\r\n                                    </Button>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onChangeCompanySelect}\r\n                                        className={classesBtn.btnEdit}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>storefront</Icon>}\r\n                                    >\r\n                                        เปลี่ยนโครงการหลักที่ผู้ใช้งานอยู่ในปัจจุบัน\r\n                                    </Button>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onAddOrDeleteCompanyList}\r\n                                        className={classesBtn.btnAdd}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>add_business</Icon>}\r\n                                    >\r\n                                        เพิ่มโครงการในการดูแลให้กับผู้ใช้งาน\r\n                                    </Button>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Button\r\n                                        onClick={onResetPassword}\r\n                                        className={classesBtn.btnEdit}\r\n                                        endIcon={<Icon style={{ fontSize: \"30px\" }}>password</Icon>}\r\n                                    >\r\n                                        Reset Passowrd\r\n                                    </Button>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMain);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_SELECT_COMPANY_SUCCESS,\r\n    HTTP_SELECT_COMPANY_CLEAR,\r\n    HTTP_GET_SLOT_NOTUSE_SUCCESS,\r\n    HTTP_GET_SLOT_NOTUSE_CLEAR\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYID_NOTFOUND\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_SLOT_NOT_USE_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\nexport const setSlotSelectCompanySuccess = (payload) => ({\r\n    type: HTTP_SELECT_COMPANY_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setSlotClearSelectCompany = () => ({\r\n    type: HTTP_SELECT_COMPANY_CLEAR\r\n})\r\n\r\n\r\nexport const setGetSlotNotUseAllSuccess = (payload) => ({\r\n    type: HTTP_GET_SLOT_NOTUSE_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSlotAll = () => ({\r\n    type: HTTP_GET_SLOT_NOTUSE_CLEAR,\r\n})\r\n\r\nexport const GetSlotNotUseAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (getSlotNotUseMiddleware(history,credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_SLOT_NOT_USE_API}`\r\n            const valuesObj = { company_id : parseInt(credential.company_id) }\r\n\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetSlotNotUseAllSuccess(result.result));\r\n                else\r\n                    dispatch(setClearSlotAll([]));\r\n                dispatch(setSuccess());\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getSlotNotUseMiddleware(history,valuesObj) {\r\n    if (!valuesObj.company_id) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYID_NOTFOUND, \"warning\");\r\n        history.goBack();\r\n    }\r\n    return true\r\n}","export function createData(company_id, company_code, company_name, company_promotion, status) {\r\n    return { company_id, company_code, company_name, company_promotion, status };\r\n}\r\n\r\nexport function addRow(valueObjArr) {\r\n    return valueObjArr.map(item => {\r\n        return createData(\r\n            item.company_id,\r\n            item.company_code,\r\n            item.company_name,\r\n            item.company_promotion,\r\n            item.status\r\n        )\r\n    })\r\n}\r\n\r\nexport const headerTable = {\r\n    company_id: \"\",\r\n    company_code: \"รหัสโครงการ\",\r\n    company_name: \"ชื่อโครงการ\",\r\n    company_promotion: \"โปร\",\r\n    status: \"สถานะ\"\r\n}\r\n\r\nexport const headerSlotNotUseListTable = {\r\n    visitor_slot_number:\"เลข Slot\",\r\n    company_name: \"โคงการ\",\r\n    use_status: \"ถูกใช้งาน\"\r\n}\r\n\r\n\r\nexport const getStatus = (status) => {\r\n    switch (status) {\r\n        case \"NORMAL\":\r\n            return \"สถานะพร้อมใช้งาน\";\r\n        case \"EXPIRE\":\r\n            return \"สถานะหมดอายุ\";\r\n        default:\r\n            return \"สถานะระงับการให้บริการ\";\r\n    }\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n// import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\n// import { addRow } from \"./Company-edit-data\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { setSlotSelectCompanySuccess,setSlotClearSelectCompany,setClearSlotAll } from \"actions/slot/get/slot-get-not-use.controller\"\r\nimport { headerTable } from '../data/data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { SlotCompantStyle, styles } from './SlotMainPageSelectCompanyStyle'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(SlotCompantStyle);\r\nfunction SlotMainPageSelectCompanyPage() {\r\n\r\n   \r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeMainForm();\r\n    }, []);\r\n    async function loadHomeMainForm(textSearch) {\r\n        const authStore = Store?.loginReducer?.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(setSlotClearSelectCompany());\r\n            dispatch(setClearSlotAll());\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadHomeMainForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        const company_name = event.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            const valuesObj = { company_id, company_name }\r\n            dispatch(setSlotSelectCompanySuccess(valuesObj))\r\n            history.push(\"/slot-not-use\");\r\n        }\r\n    }\r\n    //--------------Modal edit\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, rgb(181 63 63), rgb(147 40 40))\" }} color=\"success\" >\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพิ่มตรวจสอบเลข Slot</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for check slot number</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            company_name={row.company_name}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id} company_name={row.company_name}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    setSlotSelectCompanySuccess,\r\n    GetCompanyAllAction,\r\n    setSlotClearSelectCompany,\r\n    setClearSlotAll,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SlotMainPageSelectCompanyPage);","export const SlotCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}\r\nexport const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    },\r\n    cardHeader:{\r\n        background:\"linear-gradient(81deg, #66bb6a, #43a047)\"\r\n    }\r\n  };\r\n  ","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.10.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n// @material-ui/icons\r\nimport MainPage from \"views/Main/Main-page\"\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Business from \"@material-ui/icons/Business\"\r\nimport HomeWork from \"@material-ui/icons/HomeWork\"\r\nimport Group from \"@material-ui/icons/Group\"\r\nimport AccountBalance from \"@material-ui/icons/SupervisedUserCircle\"\r\nimport StyleIcon from '@material-ui/icons/Style';\r\n// core components/views for Admin layout\r\n// import DashboardPage from \"views/Dashboard/Dashboard.js\";\r\nimport CompanyAdd from \"views/Company/Add/Company-add\";\r\nimport CompanyEdit from \"views/Company/Edit/Company-edit\";\r\nimport HomeMain from \"views/Home/main/Home-main\";\r\nimport VillagerMain from \"views/Villager/main/Villager-main\"\r\nimport UserMain from \"views/user/main/User-main\"\r\nimport SlotMainPageSelectCompanyPage from \"views/slot/main/SlotMainPageSelectCompanyPage\"\r\n// core components/views for RTL layout\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/main\",\r\n    name: \"Main\",\r\n    rtlName: \"لوحة القيادة\",\r\n    icon: Dashboard,\r\n    component: MainPage,\r\n    layout: \"\",\r\n  },\r\n  // {\r\n  //   path: \"/dashboard\",\r\n  //   name: \"Main\",\r\n  //   rtlName: \"لوحة القيادة\",\r\n  //   icon: Dashboard,\r\n  //   component: DashboardPage,\r\n  //   layout: \"/\",\r\n  // },\r\n  {\r\n    path: \"/company-add\",\r\n    name: \"Company Add\",\r\n    icon: Business,\r\n    component: CompanyAdd,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/company-edit\",\r\n    name: \"Company Edit\",\r\n    icon: Business,\r\n    component: CompanyEdit,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/home-main\",\r\n    name: \"Home Import From Excel\",\r\n    icon: HomeWork,\r\n    component: HomeMain,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/villager-main\",\r\n    name: \"Villager Import From Excel\",\r\n    icon: Group,\r\n    component: VillagerMain,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/user-main\",\r\n    name: \"User Management\",\r\n    icon: AccountBalance,\r\n    component: UserMain,\r\n    layout: \"\",\r\n  },\r\n  {\r\n    path: \"/slot-main\",\r\n    name: \"Slot\",\r\n    icon: StyleIcon,\r\n    component: SlotMainPageSelectCompanyPage,\r\n    layout: \"\",\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import {\r\n  container,\r\n  defaultFont,\r\n  primaryColor,\r\n  defaultBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst headerStyle = () => ({\r\n  appBar: {\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    paddingTop: \"10px\",\r\n    zIndex: \"1029\",\r\n    color: grayColor[7],\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\",\r\n    minHeight: \"50px\",\r\n    display: \"block\",\r\n  },\r\n  container: {\r\n    ...container,\r\n    minHeight: \"50px\",\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    ...defaultFont,\r\n    letterSpacing: \"unset\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"18px\",\r\n    borderRadius: \"3px\",\r\n    textTransform: \"none\",\r\n    color: \"inherit\",\r\n    margin: \"0\",\r\n    \"&:hover,&:focus\": {\r\n      background: \"transparent\",\r\n    },\r\n  },\r\n  appResponsive: {\r\n    top: \"8px\",\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow,\r\n  },\r\n});\r\n\r\nexport default headerStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n// core components\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\n//hooks\r\nimport { useRouteName } from \"hooks\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  const routeName = useRouteName();\r\n  const { color,loginStore } = props;\r\n  const appBarClasses = classNames({\r\n    [\" \" + classes[color]]: color,\r\n  });\r\n  \r\n  return (\r\n    <AppBar className={classes.appBar + appBarClasses}>\r\n     \r\n      <Toolbar className={classes.container}>\r\n        <div className={classes.flex}>\r\n      \r\n          {/* Here we create navbar brand, based on route name */}\r\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\r\n            {routeName}\r\n          </Button>\r\n        </div>\r\n        <span>ผู้ใช้งาน {loginStore ? loginStore.first_name_th : \"\"}  {loginStore ? loginStore.last_name_th : \"\"}</span>\r\n        <Hidden smDown implementation=\"css\">\r\n          {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n        </Hidden>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerToggle}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import routes from \"routes\";\r\n\r\nexport const useRouteName = () => {\r\n  let name = \"\";\r\n  routes.forEach((route) => {\r\n    if (window.location.href.indexOf(route.layout + route.path) !== -1) {\r\n      name = routes.rtlActive ? route.rtlName : route.name;\r\n    }\r\n  });\r\n  return name;\r\n};\r\n","import {\r\n  defaultFont,\r\n  container,\r\n  primaryColor,\r\n  grayColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst footerStyle = {\r\n  block: {\r\n    color: \"inherit\",\r\n    padding: \"15px\",\r\n    textTransform: \"uppercase\",\r\n    borderRadius: \"3px\",\r\n    textDecoration: \"none\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    ...defaultFont,\r\n    fontWeight: \"500\",\r\n    fontSize: \"12px\",\r\n  },\r\n  left: {\r\n    float: \"left!important\",\r\n    display: \"block\",\r\n  },\r\n  right: {\r\n    padding: \"15px 0\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    float: \"right!important\",\r\n  },\r\n  footer: {\r\n    bottom: \"0\",\r\n    borderTop: \"1px solid \" + grayColor[11],\r\n    padding: \"15px 0\",\r\n    ...defaultFont,\r\n  },\r\n  container,\r\n  a: {\r\n    color: primaryColor,\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  list: {\r\n    marginBottom: \"0\",\r\n    padding: \"0\",\r\n    marginTop: \"0\",\r\n  },\r\n  inlineBlock: {\r\n    display: \"inline-block\",\r\n    padding: \"0px\",\r\n    width: \"auto\",\r\n  },\r\n};\r\nexport default footerStyle;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/footerStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Footer(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <div className={classes.container}>\r\n        <div className={classes.left}>\r\n          <List className={classes.list}>\r\n            <ListItem className={classes.inlineBlock}>\r\n              <a href=\"#home\" className={classes.block}>\r\n                Home\r\n              </a>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n        <p className={classes.right}>\r\n          <span>\r\n            &copy; {1900 + new Date().getYear()}{\" \"}\r\n            <a\r\n              href=\"https://cit.bannayuu.com\"\r\n              target=\"_blank\"\r\n              className={classes.a}\r\n            >\r\n              CIT Bannayuu\r\n            </a>\r\n            , Power by Creative Innovation\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  boxShadow,\r\n  defaultFont,\r\n  primaryColor,\r\n  primaryBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor,\r\n  blackColor,\r\n  hexToRgb,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst sidebarStyle = (theme) => ({\r\n  drawerPaper: {\r\n    border: \"none\",\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"1\",\r\n    ...boxShadow,\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidth,\r\n      position: \"fixed\",\r\n      height: \"100%\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n      ...boxShadow,\r\n      position: \"fixed\",\r\n      display: \"block\",\r\n      top: \"0\",\r\n      height: \"100vh\",\r\n      right: \"0\",\r\n      left: \"auto\",\r\n      zIndex: \"1032\",\r\n      visibility: \"visible\",\r\n      overflowY: \"visible\",\r\n      borderTop: \"none\",\r\n      textAlign: \"left\",\r\n      paddingRight: \"0px\",\r\n      paddingLeft: \"0\",\r\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\r\n      ...transition,\r\n    },\r\n  },\r\n  drawerPaperRTL: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      left: \"auto !important\",\r\n      right: \"0 !important\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"0  !important\",\r\n      right: \"auto !important\",\r\n    },\r\n  },\r\n  logo: {\r\n    position: \"relative\",\r\n    padding: \"15px 15px\",\r\n    zIndex: \"4\",\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      bottom: \"0\",\r\n\r\n      height: \"1px\",\r\n      right: \"15px\",\r\n      width: \"calc(100% - 30px)\",\r\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\",\r\n    },\r\n  },\r\n  logoLink: {\r\n    ...defaultFont,\r\n    textTransform: \"uppercase\",\r\n    padding: \"5px 0\",\r\n    display: \"block\",\r\n    fontSize: \"18px\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"30px\",\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"transparent\",\r\n    \"&,&:hover\": {\r\n      color: whiteColor,\r\n    },\r\n  },\r\n  logoLinkRTL: {\r\n    textAlign: \"right\",\r\n  },\r\n  logoImage: {\r\n    width: \"30px\",\r\n    display: \"inline-block\",\r\n    maxHeight: \"30px\",\r\n    marginLeft: \"10px\",\r\n    marginRight: \"15px\",\r\n  },\r\n  img: {\r\n    width: \"35px\",\r\n    top: \"22px\",\r\n    position: \"absolute\",\r\n    verticalAlign: \"middle\",\r\n    border: \"0\",\r\n  },\r\n  background: {\r\n    position: \"absolute\",\r\n    zIndex: \"1\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center center\",\r\n    \"&:after\": {\r\n      position: \"absolute\",\r\n      zIndex: \"3\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      background: blackColor,\r\n      opacity: \".8\",\r\n    },\r\n  },\r\n  list: {\r\n    marginTop: \"20px\",\r\n    paddingLeft: \"0\",\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    listStyle: \"none\",\r\n    position: \"unset\",\r\n  },\r\n  item: {\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    textDecoration: \"none\",\r\n    \"&:hover,&:focus,&:visited,&\": {\r\n      color: whiteColor,\r\n    },\r\n  },\r\n  itemLink: {\r\n    width: \"auto\",\r\n    transition: \"all 300ms linear\",\r\n    margin: \"10px 15px 0\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    padding: \"10px 15px\",\r\n    backgroundColor: \"transparent\",\r\n    ...defaultFont,\r\n  },\r\n  itemIcon: {\r\n    width: \"24px\",\r\n    height: \"30px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"30px\",\r\n    float: \"left\",\r\n    marginRight: \"15px\",\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\",\r\n  },\r\n  itemIconRTL: {\r\n    marginRight: \"3px\",\r\n    marginLeft: \"15px\",\r\n    float: \"right\",\r\n  },\r\n  itemText: {\r\n    ...defaultFont,\r\n    margin: \"0\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"14px\",\r\n    color: whiteColor,\r\n  },\r\n  itemTextRTL: {\r\n    textAlign: \"right\",\r\n  },\r\n  whiteFont: {\r\n    color: whiteColor,\r\n  },\r\n  purple: {\r\n    backgroundColor: primaryColor[0],\r\n    ...primaryBoxShadow,\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      ...primaryBoxShadow,\r\n    },\r\n  },\r\n  blue: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  green: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  orange: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  red: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.2)\",\r\n    },\r\n  },\r\n  sidebarWrapper: {\r\n    position: \"relative\",\r\n    height: \"calc(100vh - 75px)\",\r\n    overflow: \"auto\",\r\n    width: \"260px\",\r\n    zIndex: \"4\",\r\n    overflowScrolling: \"touch\",\r\n  },\r\n  activePro: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      bottom: \"13px\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default sidebarStyle;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// core components\r\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\r\nconst stypeLogoHeader = {\r\n  padding: \"10px\",\r\n  cursor:\"pointer\"\r\n};\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  let location = useLocation();\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return location.pathname === routeName;\r\n  }\r\n  const { color, logo, image, logoText, routes,secondRoutes } = props;\r\n  var newRoute = [...routes,...secondRoutes]\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n        if (prop.path === \"/upgrade-to-pro\") {\r\n          activePro = classes.activePro + \" \";\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: true,\r\n          });\r\n        } else {\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\r\n          });\r\n        }\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path),\r\n        });\r\n        return (\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            className={activePro + classes.item}\r\n            activeClassName=\"active\"\r\n            key={key}\r\n          >\r\n            <ListItem button className={classes.itemLink + listItemClasses}>\r\n              {typeof prop.icon === \"string\" ? (\r\n                <Icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive,\r\n                  })}\r\n                >\r\n                  {prop.icon}\r\n                </Icon>\r\n              ) : (\r\n                <prop.icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive,\r\n                  })}\r\n                />\r\n              )}\r\n              <ListItemText\r\n                primary={props.rtlActive ? prop.rtlName : prop.name}\r\n                className={classNames(classes.itemText, whiteFontClasses, {\r\n                  [classes.itemTextRTL]: props.rtlActive,\r\n                })}\r\n                disableTypography={true}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <div\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive,\r\n        })}\r\n        style={stypeLogoHeader}\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        {logoText}\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={props.rtlActive ? \"left\" : \"right\"}\r\n          open={props.open}\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }),\r\n          }}\r\n          onClose={props.handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n            {links}\r\n          </div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }),\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\r\n  logo: PropTypes.string,\r\n  image: PropTypes.string,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  open: PropTypes.bool,\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const useStylesExcelArea = makeStyles(() => ({\r\n    excelArea: {\r\n        marginTop:\"20px\",\r\n        maxHeight: \"450px\",\r\n        overflowY: \"auto\",\r\n        border:\"1px solid #babdbe\"\r\n    }\r\n}));","import { AttachFile, Description, PictureAsPdf, Theaters } from '@material-ui/icons';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setFetching, setSuccess } from 'actions/main/main.action'\r\nfunction ExcelFormMaterialUi(props) {\r\n    const { setItemExcel } = props;\r\n    const dispatch = useDispatch();\r\n    function onSelectFile(files) {\r\n        if (files.length > 0) {\r\n            const file = files[0]\r\n            importExcel(file);\r\n        }\r\n    }\r\n    async function importExcel(file) {\r\n        dispatch(setFetching());\r\n        document.body.style.cursor = 'wait';\r\n        var file_name_string = file.name;\r\n        var file_name_array = file_name_string.split(\".\");\r\n        var file_extension = file_name_array[file_name_array.length - 1];\r\n        if (file_extension.toLowerCase() === \"xlsx\") {\r\n            const excel_values = await readXlsxFile(file)\r\n            const items = await excel_values.map(item => {\r\n                return item.map(value => {\r\n                    return { value }\r\n                })\r\n            })\r\n            setItemExcel(items)\r\n            dispatch(setSuccess());\r\n        } else {\r\n            setItemExcel([])\r\n        }\r\n        document.body.style.cursor = 'default';\r\n    }\r\n\r\n    const handlePreviewIcon = (fileObject, classes) => {\r\n        const { type } = fileObject.file\r\n        const iconProps = {\r\n            className: classes.image,\r\n        }\r\n\r\n        if (type.startsWith(\"video/\")) return <Theaters {...iconProps} />\r\n        // if (type.startsWith(\"audio/\")) return <AudioTrack {...iconProps} />\r\n\r\n        switch (type) {\r\n            case \"application/msword\":\r\n            case \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":\r\n                return <Description {...iconProps} />\r\n            case \"application/pdf\":\r\n                return <PictureAsPdf {...iconProps} />\r\n            case \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":\r\n                return <Description {...iconProps} />\r\n            default:\r\n                return <AttachFile {...iconProps} />\r\n        }\r\n    }\r\n\r\n    return (<DropzoneArea\r\n        acceptedFiles={[\".xlsx\"]}\r\n        filesLimit={1}\r\n        dropzoneText={\"Drag and drop an excel file here or click\"}\r\n        getPreviewIcon={handlePreviewIcon}\r\n        onChange={onSelectFile}\r\n    />)\r\n}\r\n\r\nexport default ExcelFormMaterialUi;","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { ImportExcelHomeAction } from \"actions/home/home-import-excel.action\"\r\nimport { setClearHomeAll } from \"actions/home/home-get-all.action\"\r\nimport { styles } from '../main/Home-main-style'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { useStylesExcelArea } from './Home-import-style'\r\nimport ExcelFormMaterialUi from 'components/Excel/ExcelFormMaterialUi'\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_EXCELROW_NOTFOUND,\r\n    MESSAGE_EXCELCOLUMN_NOTCOMPLETE\r\n} from 'constants/message.constant'\r\nimport Spreadsheet from \"react-spreadsheet\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction HomeImportData() {\r\n    const classes = useStyles();\r\n    const classesModal = modalStyle();\r\n    const classesExcel = useStylesExcelArea();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [excelItems, setExcelItems] = useState([]);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadHomeImportExcelForm();\r\n    }, []);\r\n    async function loadHomeImportExcelForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!Store.homeImportExcelReducer.result) {\r\n                history.push(\"/home-main\");\r\n            } else {\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(setClearHomeAll());\r\n            }\r\n        }\r\n    }\r\n    let formExcelElem = null;\r\n    if (excelItems.length > 0) {\r\n\r\n        formExcelElem = <div className={classesExcel.excelArea}><Spreadsheet data={excelItems} /></div>\r\n\r\n    }\r\n\r\n    //-------------------On Upload\r\n    function onUploadClick() {\r\n        if (checkRow()) {\r\n            if (checkColum()) {\r\n                uploadData();\r\n            } else swal(\"Warning!\", `${MESSAGE_EXCELCOLUMN_NOTCOMPLETE} จำนวนคอลัมน์จะต้องมี 2-4 เท่านั้น`, \"warning\");\r\n        } else swal(\"Warning!\", MESSAGE_EXCELROW_NOTFOUND, \"warning\");\r\n    }\r\n    function checkRow() {\r\n        if (excelItems.length <= 1)\r\n            return false;\r\n        return true;\r\n    }\r\n    function checkColum() {\r\n        const filterColumns = excelItems.find(item => {\r\n            return item.length > 4 || item.length < 2\r\n        });\r\n        if (filterColumns) return false;\r\n        return true;\r\n    }\r\n    function uploadData() {\r\n        try{\r\n            const homeImportReducer = Store.homeImportExcelReducer.result;\r\n            const arrExcel = excelItems.map(items=>{\r\n                const newItems =  items.map(item=>{\r\n                     const ei = {value:item.value ? String(item.value) : null}\r\n                     return ei;\r\n                 })\r\n                 return newItems;\r\n             })\r\n             let itemFromExcel = [...arrExcel];\r\n            const valueObj = {\r\n                company_id: homeImportReducer.company_id,\r\n                data: itemFromExcel\r\n            }\r\n            dispatch(ImportExcelHomeAction(history, valueObj, Store.loginReducer.result));\r\n        }catch{\r\n            history.push(\"/page500\");\r\n        }\r\n        \r\n    }\r\n    //----------------On go to Home list \r\n    function onGotoHomeListClick() {\r\n        history.push('/home-list')\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>Import Data From Excel For Upload To Home</h4>\r\n                            <p className={classes.cardCategoryWhite}>Import Data From Excel For Upload To Home</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <p style={{ color: \"#1a237e\" }}>เลือกไฟล์ Excel ที่นามสกุลไฟล์เป็น .xlsx เท่านั้น</p>\r\n                            <p style={{ color: \"#1a237e\" }}>หลังจากเลือกไฟล์ Excel แล้ว ให้ตรวจสอบข้อมูลก่อนว่าครบถ้วน และถูกต้องหรือไม่</p>\r\n                            <p style={{ color: \"#1a237e\" }}>***หากข้อมูลไม่ครบถ้วน หรือไม่ถูกต้องให้แก้ไขข้อมูลที่ไฟล์ Excel ต้นฉบับก่อน แล้วเลือก Excel (ที่แก้ไขข้อมูลแล้ว) ใหม่อีกครั้ง</p>\r\n                            <p style={{ color: \"#1a237e\" }}>จากนั้น กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</p>\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnNextPage}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>keyboard_tab</Icon>}\r\n                                    onClick={onGotoHomeListClick}\r\n                                >\r\n                                    <span>ตรวจสอบข้อมูลบ้าน</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            <ExcelFormMaterialUi setItemExcel={setExcelItems} />\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnUpload}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>backup</Icon>}\r\n                                    onClick={onUploadClick}\r\n                                >\r\n                                    <span>กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            {formExcelElem}\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, homeImportExcelReducer, homeGetAllReducer }) => ({ mainReducer, homeImportExcelReducer, homeGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    ImportExcelHomeAction,\r\n    setClearHomeAll,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeImportData);","import React from \"react\";\r\nimport { ExcelExportWithExcelJs } from \"../../../components/Excel\";\r\n\r\nfunction generateDataSet(values) {\r\n    console.log(values)\r\n  const rowItems = values\r\n    ? values.map((item, index) => {\r\n        return [\r\n          index + 1,\r\n          item.home_code,\r\n          item.home_address.toString(),\r\n          item.status,\r\n        ];\r\n      })\r\n    : [];\r\n\r\n  const tableExcel = {\r\n    name: \"TablePaymentTransaction\",\r\n    ref: \"A3\",\r\n    headerRow: true,\r\n    totalsRow: true,\r\n    style: {\r\n      theme: \"TableStyleMedium12\",\r\n      showRowStripes: true,\r\n    },\r\n    columns: [\r\n      { name: \"No\" },\r\n      { name: \"รหัสบ้านเลขที่\", filterButton: true },\r\n      { name: \"บ้านเลขที่\", filterButton: true },\r\n      { name: \"สถานะ\", filterButton: true },\r\n    ],\r\n\r\n    rows: [...rowItems],\r\n  };\r\n  return tableExcel;\r\n}\r\n\r\nfunction Excel({ headers, values }) {\r\n  const reportname =\r\n    headers && headers.reportName ? headers.reportName : \"รายงาน\";\r\n  const header_arr = [{ name: \"รายงาน\", value: reportname }];\r\n\r\n  const multiDataSet = generateDataSet(values);\r\n  return (\r\n    <ExcelExportWithExcelJs\r\n      fileName={`${reportname}`}\r\n      table={multiDataSet}\r\n      headers={header_arr}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Excel;\r\n\r\n//     const datestart = headers ? `${headers.dateStart}` : '-';\r\n//     const dateend = headers ? `${headers.dateEnd}` : '-';\r\n//     const textsearch = headers && headers.searchText ? `${headers.searchText}` : null;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useState, useEffect } from \"react\";\r\nimport TableCustom from \"components/Table/TableCustom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { GetHomeAllAction } from \"actions/home/home-get-all.action\";\r\nimport { headerHomeListTable } from \"../data/Home-data\";\r\n// import Button from '@material-ui/core/Button';\r\n// import Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from \"components/Button/ButtonSearch\";\r\n// import { modalStyle } from 'utils/modalStyle.utils'\r\nimport {\r\n  // homeCompantStyle,\r\n  styles,\r\n} from \"../main/Home-main-style\";\r\n// excel\r\nimport Excel from \"../excel/ExportExcel\";\r\n\r\nconst header = {\r\n  reportName: \"ข้อมูลบ้านเลขที่\",\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n// const useStyles2 = makeStyles(homeCompantStyle);\r\nfunction HomeList() {\r\n  const classes = useStyles();\r\n  // const classes2 = useStyles2();\r\n  // const classesModal = modalStyle();\r\n  const Store = useSelector((store) => store);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const emptyRows = calEmptyRows(\r\n    Store.homeGetAllReducer.result ? Store.homeGetAllReducer.result : 0\r\n  );\r\n  //---------------------on load\r\n  useEffect(() => {\r\n    loadHomeMainForm();\r\n  }, []);\r\n  async function loadHomeMainForm(textSearch) {\r\n    const authStore = Store.loginReducer.result;\r\n    if (!authStore) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!Store.homeImportExcelReducer.result) {\r\n        history.push(\"/home-main\");\r\n      } else {\r\n        const result = Store.homeImportExcelReducer.result;\r\n        const valuesObj = {\r\n          company_id: result.company_id,\r\n          home_address: textSearch,\r\n        };\r\n        dispatch(checkJWTTOKENAction(history, Store));\r\n        dispatch(GetHomeAllAction(history, valuesObj, authStore));\r\n      }\r\n    }\r\n  }\r\n  //---------------On Search Click\r\n  function onSearchClick(e) {\r\n    loadHomeMainForm(e);\r\n  }\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  //--------cal Row Height\r\n  function calEmptyRows(rowsLength) {\r\n    return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage);\r\n  }\r\n\r\n  //--------Style\r\n  const styleTableHeader = {\r\n    backgroundColor: \"rgb(144,138,138)\",\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n  };\r\n\r\n  //----------------------------------------------------\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={10}>\r\n          <Card>\r\n            <CardHeader color=\"success\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                ตารางบ้านเลขที่ของโครงการ{\" \"}\r\n                {Store.homeImportExcelReducer.result\r\n                  ? Store.homeImportExcelReducer.result.company_name\r\n                  : \"\"}\r\n              </h4>\r\n              <p className={classes.cardCategoryWhite}>Home List Table</p>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n              <ButtonSearch\r\n                placeholder=\"บ้านเลขที่\"\r\n                searchFunc={(e) => onSearchClick(e)}\r\n              />\r\n              <br></br>\r\n              {Store.homeGetAllReducer.result &&\r\n                Array.isArray(Store.homeGetAllReducer.result) &&\r\n                Store.homeGetAllReducer.result.length > 0 && (\r\n                  <Excel\r\n                    headers={header}\r\n                    values={Store.homeGetAllReducer.result}\r\n                  />\r\n                )}\r\n              <br></br>\r\n\r\n              <TableContainer component={Paper}>\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-label=\"custom pagination table\"\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        style={{ width: 160, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerHomeListTable.home_code}\r\n                      </TableCell>\r\n                      <TableCell style={{ ...styleTableHeader }}>\r\n                        {headerHomeListTable.home_address}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ width: 120, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerHomeListTable.status}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {(rowsPerPage > 0\r\n                      ? Store.homeGetAllReducer.result.slice(\r\n                          page * rowsPerPage,\r\n                          page * rowsPerPage + rowsPerPage\r\n                        )\r\n                      : Store.homeGetAllReducer.result\r\n                    ).map((row) => (\r\n                      <TableRow key={row.home_id ? row.home_id : \"0\"}>\r\n                        <TableCell style={{ width: 160 }} align=\"left\">\r\n                          {row.home_code ? row.home_code : \"\"}\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.home_address ? row.home_address : \"\"}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: 120 }} align=\"left\">\r\n                          {row.status ? row.status : \"\"}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                    {emptyRows > 0 && (\r\n                      <TableRow style={{ height: 53 * emptyRows }}>\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[\r\n                          5,\r\n                          10,\r\n                          25,\r\n                          { label: \"All\", value: -1 },\r\n                        ]}\r\n                        colSpan={3}\r\n                        count={\r\n                          Store.homeGetAllReducer.result\r\n                            ? Store.homeGetAllReducer.result.length\r\n                            : 0\r\n                        }\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        SelectProps={{\r\n                          inputProps: { \"aria-label\": \"rows per page\" },\r\n                          native: true,\r\n                        }}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        ActionsComponent={TableCustom}\r\n                      />\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardBody>\r\n            <CardFooter></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ mainReducer, homeGetAllReducer }) => ({\r\n  mainReducer,\r\n  homeGetAllReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  GetHomeAllAction,\r\n  checkJWTTOKENAction,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeList);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nexport const useStylesExcelArea = makeStyles(() => ({\r\n    excelArea: {\r\n        marginTop:\"20px\",\r\n        maxHeight: \"450px\",\r\n        overflowY: \"auto\",\r\n        border:\"1px solid #babdbe\"\r\n    }\r\n}));","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { ImportExcelVillagerAction } from \"actions/villager/villager-import-excel.action\"\r\nimport { setClearVillagerAll } from \"actions/villager/villager-get-all.action\"\r\nimport { styles } from '../main/Villager-main-style'\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { useStylesExcelArea } from './Villager-import-style'\r\nimport ExcelFormMaterialUi from 'components/Excel/ExcelFormMaterialUi'\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_EXCELROW_NOTFOUND,\r\n    MESSAGE_EXCELCOLUMN_NOTCOMPLETE\r\n} from 'constants/message.constant'\r\nimport Spreadsheet from \"react-spreadsheet\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction VillagerImportData() {\r\n    const classes = useStyles();\r\n    const classesModal = modalStyle();\r\n    const classesExcel = useStylesExcelArea();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [excelItems, setExcelItems] = useState([]);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadVillagerImportExcelForm();\r\n    }, []);\r\n    async function loadVillagerImportExcelForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (!Store.villagerImportExcelReducer.result) {\r\n                history.push(\"/villager-main\");\r\n            } else {\r\n                dispatch(setClearVillagerAll());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n            }\r\n        }\r\n    }\r\n    let formExcelElem = null;\r\n    if (excelItems.length > 0) {\r\n        formExcelElem = <div className={classesExcel.excelArea}><Spreadsheet data={excelItems} /></div>\r\n\r\n    }\r\n\r\n    //-------------------On Upload\r\n    function onUploadClick() {\r\n        if (checkRow()) {\r\n            if (checkColum()) {\r\n                uploadData();\r\n            } else swal(\"Warning!\", `${MESSAGE_EXCELCOLUMN_NOTCOMPLETE} จำนวนคอลัมน์จะต้องมี 5-6 เท่านั้น`, \"warning\");\r\n        } else swal(\"Warning!\", MESSAGE_EXCELROW_NOTFOUND, \"warning\");\r\n    }\r\n    function checkRow() {\r\n        if (excelItems.length <= 1)\r\n            return false;\r\n        return true;\r\n    }\r\n    function checkColum() {\r\n        const filterColumns = excelItems.find(item => {\r\n            return item.length > 6 || item.length < 5\r\n        });\r\n        if (filterColumns) {\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n            \r\n    }\r\n    function uploadData() {\r\n        try {\r\n            const villagerImportReducer = Store.villagerImportExcelReducer.result;\r\n            const arrExcel = excelItems.map(items => {\r\n                const newItems = items.map(item => {\r\n                    const ei = { value: item.value ? String(item.value) : null }\r\n                    return ei;\r\n                })\r\n                return newItems;\r\n            })\r\n            let itemFromExcel = [...arrExcel];\r\n            itemFromExcel.shift();\r\n            const valueObj = {\r\n                company_id: villagerImportReducer.company_id,\r\n                data: itemFromExcel\r\n            }\r\n            dispatch(ImportExcelVillagerAction(history, valueObj, Store.loginReducer.result));\r\n        } catch {\r\n            history.push(\"/page500\");\r\n        }\r\n    }\r\n    //----------------On go to Home list \r\n    function onGotoVillagerListClick() {\r\n        history.push('/villager-list')\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #3f51b5, #283593)\" }} color=\"success\">\r\n                            <h4 className={classes.cardTitleWhite}>Import Data From Excel For Upload To Villager</h4>\r\n                            <p className={classes.cardCategoryWhite}>Import Data From Excel For Upload To Villager</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <p style={{ color: \"#1a237e\" }}>เลือกไฟล์ Excel ที่นามสกุลไฟล์เป็น .xlsx เท่านั้น</p>\r\n                            <p style={{ color: \"#1a237e\" }}>หลังจากเลือกไฟล์ Excel แล้ว ให้ตรวจสอบข้อมูลก่อนว่าครบถ้วน และถูกต้องหรือไม่</p>\r\n                            <p style={{ color: \"#1a237e\" }}>***หากข้อมูลไม่ครบถ้วน หรือไม่ถูกต้องให้แก้ไขข้อมูลที่ไฟล์ Excel ต้นฉบับก่อน แล้วเลือก Excel (ที่แก้ไขข้อมูลแล้ว) ใหม่อีกครั้ง</p>\r\n                            <p style={{ color: \"#1a237e\" }}>จากนั้น กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</p>\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnNextPage}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>keyboard_tab</Icon>}\r\n                                    onClick={onGotoVillagerListClick}\r\n                                >\r\n                                    <span>ตรวจสอบข้อมูลลูกบ้าน</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            <ExcelFormMaterialUi setItemExcel={setExcelItems} />\r\n                            <br></br>\r\n                            <div style={{ textAlign: \"end\" }}>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    className={classesModal.btnUpload}\r\n                                    endIcon={<Icon style={{ fontSize: \"25px\" }}>backup</Icon>}\r\n                                    onClick={onUploadClick}\r\n                                >\r\n                                    <span>กดปุ่มอัพโหลดข้อมูลเข้าสู่ระบบ</span>\r\n                                </Button>\r\n                            </div>\r\n                            <br></br>\r\n                            {formExcelElem}\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, villagerGetAllReducer }) => ({ mainReducer, villagerGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    setClearVillagerAll,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VillagerImportData);","import { setFetching, setSuccess, setFailed } from \"actions/main/main.action\";\r\nimport { MAIN_URL, DISABLE_VILLAGER_API } from \"constants/api-route\";\r\nimport { httpClientPOSTMethodVerifyAuth } from \"utils/httpClient.utils\";\r\nimport {\r\n    MESSAGE_HOME_LINE_ID_NOT_FOUND,\r\n} from \"constants/message.constant\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst DisableVillagerAction = (credential, authStore,refreshFunc) => {\r\n  return async (dispatch) => {\r\n    if (disableVillagerMiddleware(credential)) {\r\n      dispatch(setFetching());\r\n      const urlClient = `${MAIN_URL}${DISABLE_VILLAGER_API}`;\r\n      const valuesObj = {\r\n        home_line_id: parseInt(credential.home_line_id),\r\n      };\r\n      const result = await httpClientPOSTMethodVerifyAuth({\r\n        urlClient,\r\n        valuesObj,\r\n        authStore,\r\n      });\r\n      if (result.error) {\r\n        dispatch(setFailed());\r\n        swal(\"Warning!\", result.message, \"warning\");\r\n      } else {\r\n        dispatch(setSuccess());\r\n        swal(\"Success\", \"ปิดสถานะสำเร็จ\", \"success\").then(() => {\r\n            refreshFunc();\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nfunction disableVillagerMiddleware(valuesObj) {\r\n  if (!valuesObj.home_line_id) {\r\n    swal(\"Warning!\", MESSAGE_HOME_LINE_ID_NOT_FOUND, \"warning\");\r\n    return false;\r\n  } \r\n  return true;\r\n}\r\n\r\nexport default DisableVillagerAction;\r\n","import { setFetching, setSuccess, setFailed } from \"actions/main/main.action\";\r\nimport { MAIN_URL, ENABLE_VILLAGER_API } from \"constants/api-route\";\r\nimport { httpClientPOSTMethodVerifyAuth } from \"utils/httpClient.utils\";\r\nimport {\r\n    MESSAGE_HOME_LINE_ID_NOT_FOUND,\r\n} from \"constants/message.constant\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst EnableVillagerAction = (credential, authStore,refreshFunc) => {\r\n  return async (dispatch) => {\r\n    if (enableVillagerMiddleware(credential)) {\r\n      dispatch(setFetching());\r\n      const urlClient = `${MAIN_URL}${ENABLE_VILLAGER_API}`;\r\n      const valuesObj = {\r\n        home_line_id: parseInt(credential.home_line_id),\r\n      };\r\n      const result = await httpClientPOSTMethodVerifyAuth({\r\n        urlClient,\r\n        valuesObj,\r\n        authStore,\r\n      });\r\n      if (result.error) {\r\n        dispatch(setFailed());\r\n        swal(\"Warning!\", result.message, \"warning\");\r\n      } else {\r\n        dispatch(setSuccess());\r\n        swal(\"Success\", \"ปิดสถานะสำเร็จ\", \"success\").then(() => {\r\n            refreshFunc();\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nfunction enableVillagerMiddleware(valuesObj) {\r\n  if (!valuesObj.home_line_id) {\r\n    swal(\"Warning!\", MESSAGE_HOME_LINE_ID_NOT_FOUND, \"warning\");\r\n    return false;\r\n  } \r\n  return true;\r\n}\r\n\r\nexport default EnableVillagerAction;\r\n","import React from \"react\";\r\nimport { ExcelExportWithExcelJs } from \"../../../components/Excel\";\r\n\r\nfunction generateDataSet(values) {\r\n  const rowItems = values\r\n    ? values.map((item, index) => {\r\n        return [\r\n          index + 1,\r\n          item.villager_code,\r\n          item.home_address.toString(),\r\n          item.first_name,\r\n          item.last_name,\r\n          item.tel_number.toString(),\r\n          item.status,\r\n          item.home_line_type,\r\n        ];\r\n      })\r\n    : [];\r\n\r\n  const tableExcel = {\r\n    name: \"TablePaymentTransaction\",\r\n    ref: \"A3\",\r\n    headerRow: true,\r\n    totalsRow: true,\r\n    style: {\r\n      theme: \"TableStyleMedium13\",\r\n      showRowStripes: true,\r\n    },\r\n    columns: [\r\n      { name: \"No\" },\r\n      { name: \"รหัสลูกบ้าน\", filterButton: true },\r\n      { name: \"บ้านเลขที่\", filterButton: true },\r\n      { name: \"ชื่อ\", filterButton: true },\r\n      { name: \"นามสกุล\", filterButton: true },\r\n      { name: \"เบอร์โทรศัพท์\", filterButton: true },\r\n      { name: \"สถานะ\", filterButton: true },\r\n      { name: \"line notification\", filterButton: true },\r\n    ],\r\n\r\n    rows: [...rowItems],\r\n  };\r\n  return tableExcel;\r\n}\r\n\r\nfunction Excel({ headers, values }) {\r\n  const reportname =\r\n    headers && headers.reportName ? headers.reportName : \"รายงาน\";\r\n  const header_arr = [{ name: \"รายงาน\", value: reportname }];\r\n\r\n  const multiDataSet = generateDataSet(values);\r\n  return (\r\n    <ExcelExportWithExcelJs\r\n      fileName={`${reportname}`}\r\n      table={multiDataSet}\r\n      headers={header_arr}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Excel;\r\n\r\n//     const datestart = headers ? `${headers.dateStart}` : '-';\r\n//     const dateend = headers ? `${headers.dateEnd}` : '-';\r\n//     const textsearch = headers && headers.searchText ? `${headers.searchText}` : null;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useState, useEffect } from \"react\";\r\nimport TableCustom from \"components/Table/TableCustom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\";\r\nimport { useSelector } from \"react-redux\";\r\n// action\r\nimport { GetVillagerAllAction } from \"actions/villager/villager-get-all.action\";\r\nimport { DisableVillagerAction, EnableVillagerAction } from \"actions/villager\";\r\nimport { headerVillagerListTable } from \"../data/Villager-data\";\r\n// import Button from '@material-ui/core/Button';\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport ButtonSearch from \"components/Button/ButtonSearch\";\r\nimport { modalStyle } from \"utils/modalStyle.utils\";\r\nimport { villagerCompantStyle, styles } from \"../main/Villager-main-style\";\r\n// excel\r\nimport Excel from \"../excel/ExportExcel\";\r\n\r\nconst header = {\r\n  reportName: \"ข้อมูลลูกบ้านทั้งหมด\",\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(villagerCompantStyle);\r\nfunction VillagerList() {\r\n  const classes = useStyles();\r\n  const classes2 = useStyles2();\r\n  const classesModal = modalStyle();\r\n  const Store = useSelector((store) => store);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  // start\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const emptyRows = calEmptyRows(\r\n    Store.villagerGetAllReducer.result ? Store.villagerGetAllReducer.result : 0\r\n  );\r\n  //---------------------on load\r\n  useEffect(() => {\r\n    loadVillagerMainForm();\r\n  }, []);\r\n  async function loadVillagerMainForm(textSearch) {\r\n    const authStore = Store.loginReducer.result;\r\n    if (!authStore) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!Store.villagerImportExcelReducer.result) {\r\n        history.push(\"/villager-main\");\r\n      } else {\r\n        const result = Store.villagerImportExcelReducer.result;\r\n        const valuesObj = {\r\n          company_id: result.company_id,\r\n          home_address: textSearch,\r\n        };\r\n        dispatch(checkJWTTOKENAction(history, Store));\r\n        dispatch(GetVillagerAllAction(history, valuesObj, authStore));\r\n      }\r\n    }\r\n  }\r\n  //---------------On Search Click\r\n  function onSearchClick(e) {\r\n    loadVillagerMainForm(e);\r\n  }\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  //--------cal Row Height\r\n  function calEmptyRows(rowsLength) {\r\n    return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage);\r\n  }\r\n\r\n  //--------Style\r\n  const styleTableHeader = {\r\n    backgroundColor: \"rgb(144,138,138)\",\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n  };\r\n\r\n  function onDisableClick(event) {\r\n    swal({\r\n      title: \"ปิดสถานะ ?\",\r\n      text: \"ต้องการปิดสถานะ หรือไม่?\",\r\n      icon: \"info\",\r\n      buttons: {\r\n        cancel: true,\r\n        confirm: \"Confirm\",\r\n      },\r\n    }).then((willOk) => {\r\n      if (willOk) {\r\n        const villager_id = event.target.getAttribute(\"villager_id\");\r\n        if (villager_id) {\r\n          const valuesObj = { home_line_id: villager_id };\r\n          dispatch(\r\n            DisableVillagerAction(\r\n              valuesObj,\r\n              Store.loginReducer.result,\r\n              loadVillagerMainForm\r\n            )\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function onEnableClick(event) {\r\n    swal({\r\n      title: \"เปิดใช้งาน ?\",\r\n      text: \"ต้องการเปิดใช้งาน หรือไม่?\",\r\n      icon: \"info\",\r\n      buttons: {\r\n        cancel: true,\r\n        confirm: \"Confirm\",\r\n      },\r\n    }).then((willOk) => {\r\n      if (willOk) {\r\n        const villager_id = event.target.getAttribute(\"villager_id\");\r\n        if (villager_id) {\r\n          const valuesObj = { home_line_id: villager_id };\r\n          dispatch(\r\n            EnableVillagerAction(\r\n              valuesObj,\r\n              Store.loginReducer.result,\r\n              loadVillagerMainForm\r\n            )\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  //----------------------------------------------------\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={10}>\r\n          <Card>\r\n            <CardHeader\r\n              style={{ background: \"linear-gradient(60deg, #3f51b5, #283593)\" }}\r\n              color=\"success\"\r\n            >\r\n              <h4 className={classes.cardTitleWhite}>\r\n                ตารางข้อมูลลูกบ้านของโครงการ{\" \"}\r\n                {Store.villagerGetAllReducer.result\r\n                  ? Store.villagerGetAllReducer.result.company_name\r\n                  : \"\"}\r\n              </h4>\r\n              <p className={classes.cardCategoryWhite}>Villager List Table</p>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n              <ButtonSearch\r\n                placeholder=\"บ้านเลขที่\"\r\n                searchFunc={(e) => onSearchClick(e)}\r\n              />\r\n              <br></br>\r\n              {Store.villagerGetAllReducer.result &&\r\n                Array.isArray(Store.villagerGetAllReducer.result) &&\r\n                Store.villagerGetAllReducer.result.length > 0 && (\r\n                  <Excel\r\n                    headers={header}\r\n                    values={Store.villagerGetAllReducer.result}\r\n                  />\r\n                )}\r\n              <br></br>\r\n              <TableContainer component={Paper}>\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-label=\"custom pagination table\"\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell\r\n                        style={{ width: 120, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerVillagerListTable.villager_id}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ width: 180, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerVillagerListTable.villager_code}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ width: 160, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerVillagerListTable.home_address}\r\n                      </TableCell>\r\n                      <TableCell style={{ ...styleTableHeader }}>\r\n                        {headerVillagerListTable.full_name}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ width: 160, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerVillagerListTable.tel_number}\r\n                      </TableCell> <TableCell\r\n                        style={{ width: 160, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerVillagerListTable.home_line_type}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ width: 120, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerVillagerListTable.status}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {(rowsPerPage > 0\r\n                      ? Store.villagerGetAllReducer.result.slice(\r\n                          page * rowsPerPage,\r\n                          page * rowsPerPage + rowsPerPage\r\n                        )\r\n                      : Store.villagerGetAllReducer.result\r\n                    ).map((row) => (\r\n                      <TableRow key={row.villager_id ? row.villager_id : \"0\"}>\r\n                        <TableCell style={{ width: 120 }} align=\"left\">\r\n                          {row.status && row.status == \"NORMAL\" ? (\r\n                            <div className={classes2.tableRowBtn}>\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                className={classesModal.btnDisable}\r\n                                villager_id={row.villager_id}\r\n                                onClick={onDisableClick}\r\n                              >\r\n                                <span villager_id={row.villager_id}>\r\n                                  ปิดสถานะ\r\n                                </span>\r\n                              </Button>\r\n                              <br></br>\r\n                            </div>\r\n                          ) : (\r\n                            <div className={classes2.tableRowBtn}>\r\n                              <Button\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                className={classesModal.btnAdd}\r\n                                villager_id={row.villager_id}\r\n                                onClick={onEnableClick}\r\n                              >\r\n                                <span villager_id={row.villager_id}>\r\n                                  เปิดใช้งาน\r\n                                </span>\r\n                              </Button>\r\n                              <br></br>\r\n                            </div>\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: 180 }} align=\"left\">\r\n                          {row.villager_code ? row.villager_code : \"\"}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: 160 }} align=\"left\">\r\n                          {row.home_address ? row.home_address : \"\"}\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.home_address\r\n                            ? `${row.first_name} ${row.last_name}`\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: 160 }} align=\"left\">\r\n                          {row.tel_number ? row.tel_number : \"\"}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: 160 }} align=\"left\">\r\n                          {row.home_line_type ? row.home_line_type : \"\"}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: 140 }} align=\"left\">\r\n                          {row.status && row.status == \"NORMAL\" ? (\r\n                            <Chip\r\n                              label={row.status}\r\n                              color=\"primary\"\r\n                              icon={\r\n                                <Icon villager_id={row.villager_id}>check</Icon>\r\n                              }\r\n                            />\r\n                          ) : (\r\n                            <Chip\r\n                              label={row.status}\r\n                              color=\"secondary\"\r\n                              icon={\r\n                                <Icon villager_id={row.villager_id}>close</Icon>\r\n                              }\r\n                            />\r\n                          )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                    {emptyRows > 0 && (\r\n                      <TableRow style={{ height: 53 * emptyRows }}>\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[\r\n                          5,\r\n                          10,\r\n                          25,\r\n                          { label: \"All\", value: -1 },\r\n                        ]}\r\n                        colSpan={3}\r\n                        count={\r\n                          Store.villagerGetAllReducer.result\r\n                            ? Store.villagerGetAllReducer.result.length\r\n                            : 0\r\n                        }\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        SelectProps={{\r\n                          inputProps: { \"aria-label\": \"rows per page\" },\r\n                          native: true,\r\n                        }}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        ActionsComponent={TableCustom}\r\n                      />\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardBody>\r\n            <CardFooter></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ mainReducer, villagerGetAllReducer }) => ({\r\n  mainReducer,\r\n  villagerGetAllReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  GetVillagerAllAction,\r\n  checkJWTTOKENAction,\r\n  DisableVillagerAction,\r\n  EnableVillagerAction,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VillagerList);\r\n","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserAddSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if(company_id){\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-add\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อสร้าง User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for create user</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddSelectCompany);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width:\"100%\",\r\n        margin: 'auto',\r\n    },\r\n    cardHeader: {\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    list: {\r\n        minWidth: 200,\r\n        maxWidth: 350,\r\n        height: 450,\r\n        backgroundColor: theme.palette.background.paper,\r\n        overflow: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5, 0),\r\n    },\r\n}));\r\n\r\nfunction not(a, b) {\r\n    return a.filter((item) => {\r\n        const test = b.map(function (e) {return e.id; }).indexOf(item.id);\r\n        return test === -1\r\n        // b.indexOf(value.id) === -1)\r\n    });\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter((item) => {\r\n        const test = b.map(function (e) { return e.id; }).indexOf(item.id);\r\n        return test !== -1\r\n        // return b.indexOf(item.id) !== -1\r\n    });\r\n}\r\n\r\nfunction union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList(props) {\r\n    const {\r\n        titleLeft, titleRight,\r\n        leftItems, setLeftItems,\r\n        rightItems, setRightItems\r\n    } = props\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([]);\r\n    const leftChecked = intersection(checked, leftItems);\r\n    const rightChecked = intersection(checked, rightItems);\r\n    //-------------------------------------------------\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.map(function (e) { return e.id; }).indexOf(value.id);\r\n        const newChecked = [...checked];\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n    const handleToggleAll = (items) => () => {\r\n        if (numberOfChecked(items) === items.length) {\r\n            setChecked(not(checked, items));\r\n        } else {\r\n            setChecked(union(checked, items));\r\n        }\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        setRightItems(rightItems.concat(leftChecked));\r\n        setLeftItems(not(leftItems, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n        setLeftItems(leftItems.concat(rightChecked));\r\n        setRightItems(not(rightItems, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n    };\r\n\r\n    const checkBoxHandle = (item) => {\r\n        const test = checked.map(function (e) { return e.id; }).indexOf(item.id);\r\n        return test != -1\r\n    }\r\n    const customList = (title, items) => (\r\n        <Card>\r\n            <CardHeader\r\n                className={classes.cardHeader}\r\n                avatar={\r\n                    <Checkbox\r\n                        onClick={handleToggleAll(items)}\r\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n                        indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n                        disabled={items.length === 0}\r\n                        inputProps={{ 'aria-label': 'all items selected' }}\r\n                    />\r\n                }\r\n                title={title}\r\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n            />\r\n            <Divider />\r\n            <List className={classes.list} dense component=\"div\" role=\"list\">\r\n                {items.map((item) => {\r\n                    const labelId = `transfer-list-all-item-${item.value}-label`;\r\n                    return (\r\n                        <ListItem key={item.id} listid={item.id} role=\"listitem\" button onClick={handleToggle(item)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checkBoxHandle(item)}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={`${item.value}`} />\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem />\r\n            </List>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n            <Grid item>{customList(titleLeft, leftItems)}</Grid>\r\n            <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        onClick={handleCheckedRight}\r\n                        disabled={leftChecked.length === 0}\r\n                        aria-label=\"move selected right\"\r\n                    >\r\n                        &gt;\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        onClick={handleCheckedLeft}\r\n                        disabled={rightChecked.length === 0}\r\n                        aria-label=\"move selected left\"\r\n                    >\r\n                        &lt;\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item>{customList(titleRight, rightItems)}</Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_PRIVILEGE_ALL_SUCCESS,\r\n    HTTP_GET_PRIVILEGE_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_PRIVILEGE_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetPrivilegeAllSuccess = (payload) => ({\r\n    type: HTTP_GET_PRIVILEGE_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearPrivilegeAll = () => ({\r\n    type: HTTP_GET_PRIVILEGE_CLEAR,\r\n})\r\n\r\nexport const GetPrivilegeAllAction = (history,  authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_PRIVILEGE_ALL_API}`\r\n            const valuesObj = { }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetPrivilegeAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetPrivilegeAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n    }\r\n}\r\n","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_COMPANY_LIST_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_LIST_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_COMPANY_LIST_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetCompanyListAllSuccess = (payload) => ({\r\n    type: HTTP_GET_COMPANY_LIST_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearCompanyListAll = () => ({\r\n    type: HTTP_GET_COMPANY_LIST_CLEAR,\r\n})\r\n\r\nexport const GetCompanyListAllAction = (history,  authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_COMPANY_LIST_ALL_API}`\r\n            const valuesObj = { }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetCompanyListAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetCompanyListAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n    }\r\n}\r\n","\r\nexport function isNotEngCharOrNumber(input) {\r\n    const formatEng = /[^a-zA-Z0-9]/;\r\n    if (formatEng.test(input))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nexport function allnumeric(inputtxt) {\r\n    const numbers = /^[0-9]+$/;\r\n    if (inputtxt.match(numbers)) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function ValidateEmail(mail) {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(mail)) {\r\n        return (true)\r\n    }\r\n    return (false)\r\n}\r\n\r\nexport function ValidateLine(inputtxt) {\r\n    const formatline = /[`!#$%^&*()+\\-={};':\"\\\\|,<>?~]/;\r\n    if (formatline.test(inputtxt)) {\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function IsProhibitSpecial(input) {\r\n    const formatname = /[`!@#$%^&*()_+\\-={};':\"\\\\|,.<>?~]/;\r\n    if (formatname.test(input))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nexport function IsHomeProbitSpecial(input) {\r\n    const formathome = /[`@#$%^&*;'|<>~]/;\r\n    if (formathome.test(input))\r\n        return true;\r\n    return false;\r\n}\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport SelectBox from \"components/Select/SelectBox\"\r\nimport TransferList from \"components/TransferList/TransferList\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetCompanyListAllAction } from \"actions/company/company-list.action\"\r\nimport { CreateUserAction } from \"actions/user/user-add.action\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport swal from 'sweetalert';\r\nimport { ValidateEmail, ValidateLine, allnumeric, isNotEngCharOrNumber, IsProhibitSpecial, IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport {\r\n    MESSAGE_FIRST_NAME_NOTFOUND,\r\n    MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_LAST_NAME_NOTFOUND,\r\n    MESSAGE_LAST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_ADDRESS_PROHITBIT_SPECIAL,\r\n    MESSAGE_MOBILE_NOT_NUMBER,\r\n    MESSAGE_MOBILE_NOT_10_CHARACTER,\r\n    MESSAGE_LINE_FORMAT_INVALID,\r\n    MESSAGE_EMAIL_FORMAT_INVALID,\r\n    MESSAGE_NOT_SELECT_PRIVILEGE,\r\n    MESSAGE_USER_NOT_FOUND,\r\n    MESSAGE_USER_NOT_END_OR_NUMBER,\r\n    MESSAGE_PASSWORD_NOT_FOUND,\r\n    MESSAGE_PASSWORD_NOT_END_OR_NUMBER,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_PASSWORD_NOT_EQUAL\r\n} from \"constants/message.constant\"\r\n// import { buttonStyle } from \"utils/btnStyle.utils\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserAdd() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        password_confirm: \"\"\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        password_confirm: \"\",\r\n        privilege: \"\"\r\n    })\r\n    const [selectPrivilege, setSelectPrivilege] = useState(\"\");\r\n    const [companyListItemRight, setCompanyListItemRight] = useState([]);\r\n    const [companyListItemLeft, setCompanyListItemLeft] = useState([]);\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!Store.companySelectedReducer.result) {\r\n            history.push(\"/user-main\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetPrivilegeAllAction(history, authStore))\r\n            dispatch(GetCompanyListAllAction(history, authStore))\r\n        }\r\n    }\r\n    const privilegeItems = Store.privilegeGetAllReducer.result.map(item => {\r\n        return {\r\n            key: item.employee_privilege_type,\r\n            value: item.employee_privilege_id,\r\n            text: item.employee_privilege_name_th\r\n        }\r\n    })\r\n    if (Store.companyListGetAllReducer.result.length > 0 && companyListItemLeft.length === 0 && companyListItemRight.length === 0)\r\n        setCompanyListItemLeft(Store.companyListGetAllReducer.result.map(item => {\r\n            return { value: item.company_name, id: item.company_id }\r\n        }).filter(fil => fil.id != Store.companySelectedReducer.result.company_id))\r\n\r\n    //-----------------------On Create Click\r\n    function onCreateClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_type = Store.privilegeGetAllReducer.result.filter(item => { return item.employee_privilege_id == selectPrivilege }).map(item => {\r\n            return item.employee_privilege_type\r\n        })\r\n        const company_list = companyListItemRight.map(item => item.id)\r\n        const valuesObj = {\r\n            first_name: userInfo.first_name,\r\n            last_name: userInfo.last_name,\r\n            address: userInfo.address,\r\n            mobile: userInfo.mobile,\r\n            line: userInfo.line,\r\n            email: userInfo.email,\r\n            username: userInfo.username,\r\n            password: userInfo.password,\r\n            password_confirm: userInfo.password_confirm,\r\n            employee_privilege_id: selectPrivilege.toString(),\r\n            status: \"INIT\",\r\n            employee_type: employee_type[0],\r\n            company_id: company_id.toString(),\r\n            company_list: [company_id, ...company_list]\r\n        }\r\n        if (createUserMiddleware(valuesObj)) {\r\n            dispatch(CreateUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function createUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.first_name) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.first_name)) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (!valuesObj.last_name) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.last_name)) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (!valuesObj.username) {\r\n            swal(\"Warning!\", MESSAGE_USER_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_FOUND })\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(valuesObj.username)) {\r\n            swal(\"Warning!\", MESSAGE_USER_NOT_END_OR_NUMBER, \"warning\");\r\n            setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_END_OR_NUMBER })\r\n            return false;\r\n        } else if (!valuesObj.password) {\r\n            swal(\"Warning!\", MESSAGE_PASSWORD_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_FOUND })\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(valuesObj.password)) {\r\n            swal(\"Warning!\", MESSAGE_PASSWORD_NOT_END_OR_NUMBER, \"warning\");\r\n            setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_END_OR_NUMBER })\r\n            return false;\r\n        } else if (valuesObj.password != valuesObj.password_confirm) {\r\n            swal(\"Warning!\", MESSAGE_PASSWORD_NOT_EQUAL, \"warning\");\r\n            setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_EQUAL, password_confirm: MESSAGE_PASSWORD_NOT_EQUAL })\r\n            return false;\r\n        } else if (!valuesObj.employee_privilege_id) {\r\n            swal(\"Warning!\", MESSAGE_NOT_SELECT_PRIVILEGE, \"warning\");\r\n            setMessageErr({ ...messageErr, privilege: MESSAGE_NOT_SELECT_PRIVILEGE })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.address)) {\r\n            swal(\"Warning!\", MESSAGE_ADDRESS_PROHITBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n            return false;\r\n        }\r\n        if (valuesObj.email)\r\n            if (!ValidateEmail(valuesObj.email)) {\r\n                swal(\"Warning!\", MESSAGE_EMAIL_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.line)\r\n            if (!ValidateLine(valuesObj.line)) {\r\n                swal(\"Warning!\", MESSAGE_LINE_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.moblie) {\r\n            if (!allnumeric(valuesObj.moblie)) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_NUMBER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                return false;\r\n            } else if (valuesObj.moblie.length != 10) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_10_CHARACTER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\",\r\n            mobile: \"\",\r\n            line: \"\",\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            password_confirm: \"\",\r\n            privilege: \"\"\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>สร้างผู้ใช้งานใหม่</h4>\r\n                            <p className={classes.cardCategoryWhite}>Create New User</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ชื่อ\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.first_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, first_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, first_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.first_name}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"นามสกุล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.last_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, last_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, last_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.last_name}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"เบอร์โทรศัพท์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"10\",\r\n                                            value: userInfo.mobile,\r\n                                            onChange: event => setUserInfo({ ...userInfo, mobile: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!allnumeric(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                                                } else if (event.target.value.length != 10) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, mobile: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.mobile}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"อีเมล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"100\",\r\n                                            value: userInfo.email,\r\n                                            onChange: event => setUserInfo({ ...userInfo, email: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateEmail(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, email: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.email}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ไลน์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"50\",\r\n                                            value: userInfo.line,\r\n                                            onChange: event => setUserInfo({ ...userInfo, line: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateLine(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, line: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.line}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"ที่อยู่\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: userInfo.address,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setUserInfo({ ...userInfo, address: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, address: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.address}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <CustomInput\r\n                                                        labelText=\"Username\"\r\n                                                        formControlProps={{\r\n                                                            fullWidth: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            maxLength: \"100\",\r\n                                                            value: userInfo.username,\r\n                                                            onChange: event => setUserInfo({ ...userInfo, username: event.target.value }),\r\n                                                            onBlur: event => {\r\n                                                                const pass = event.target.value\r\n                                                                if (!pass) {\r\n                                                                    setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_FOUND })\r\n                                                                } else if (isNotEngCharOrNumber(pass)) {\r\n                                                                    setMessageErr({ ...messageErr, username: MESSAGE_USER_NOT_END_OR_NUMBER })\r\n                                                                } else {\r\n                                                                    setMessageErr({ ...messageErr, username: \"\" })\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.username}</span>\r\n                                                </GridItem>\r\n\r\n                                            </GridContainer>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <CustomInput\r\n                                                        labelText=\"Password\"\r\n                                                        formControlProps={{\r\n                                                            fullWidth: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            maxLength: \"50\",\r\n                                                            type: \"password\",\r\n                                                            value: userInfo.password,\r\n                                                            onChange: event => setUserInfo({ ...userInfo, password: event.target.value }),\r\n                                                            onBlur: event => {\r\n                                                                const pass = event.target.value\r\n                                                                if (!pass) {\r\n                                                                    setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_FOUND })\r\n                                                                } else if (isNotEngCharOrNumber(pass)) {\r\n                                                                    setMessageErr({ ...messageErr, password: MESSAGE_PASSWORD_NOT_END_OR_NUMBER })\r\n                                                                } else {\r\n                                                                    setMessageErr({ ...messageErr, password: \"\" })\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.password}</span>\r\n                                                </GridItem>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <CustomInput\r\n                                                        labelText=\"Comfirm-Password\"\r\n                                                        formControlProps={{\r\n                                                            fullWidth: true,\r\n                                                        }}\r\n                                                        inputProps={{\r\n                                                            maxLength: \"50\",\r\n                                                            type: \"password\",\r\n                                                            value: userInfo.password_confirm,\r\n                                                            onChange: event => setUserInfo({ ...userInfo, password_confirm: event.target.value }),\r\n                                                            onBlur: event => {\r\n                                                                const pass = event.target.value\r\n                                                                if (pass != userInfo.password) {\r\n                                                                    setMessageErr({ ...messageErr, password_confirm: MESSAGE_PASSWORD_NOT_EQUAL })\r\n                                                                } else {\r\n                                                                    setMessageErr({ ...messageErr, password_confirm: \"\" })\r\n                                                                }\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.password_confirm}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <SelectBox\r\n                                                        title=\"เลือกสิทธิ์การเข้าใช้งาน\"\r\n                                                        value={selectPrivilege}\r\n                                                        setValue={setSelectPrivilege}\r\n                                                        items={privilegeItems}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.privilege}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <br></br>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <h4 style={{ textAlign: \"center\" }}>เลือกโครงการที่ดูแลเพิ่มเติม</h4>\r\n                                                </GridItem>\r\n                                                <br></br>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <TransferList\r\n                                                        titleLeft=\"โครงการที่ยังไม่เลือก\"\r\n                                                        titleRight=\"โครงการที่ถูกเลือก\"\r\n                                                        leftItems={companyListItemLeft}\r\n                                                        setLeftItems={setCompanyListItemLeft}\r\n                                                        rightItems={companyListItemRight}\r\n                                                        setRightItems={setCompanyListItemRight}\r\n                                                    />\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"success\"\r\n                                onClick={onCreateClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>person_add</Icon>}\r\n                            >สร้างผู้ใช้งาน</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAdd);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CREATE_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const CreateUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CREATE_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-add-select')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserEditSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-edit-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไปแก้ไขข้อมูล User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for edit user information</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditSelectCompany);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_USER_LIST_ALL_SUCCESS,\r\n    HTTP_GET_USER_LIST_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_USER_IS_BELOW_MYSELF_ALL_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetUserListAllSuccess = (payload) => ({\r\n    type: HTTP_GET_USER_LIST_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearUserListAll = () => ({\r\n    type: HTTP_GET_USER_LIST_CLEAR,\r\n})\r\n\r\nexport const GetCompanyListAllAction = (history,credential,  authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_USER_IS_BELOW_MYSELF_ALL_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetUserListAllSuccess(result.result));\r\n                else\r\n                    dispatch(setGetUserListAllSuccess([]));\r\n                dispatch(setSuccess());\r\n            }\r\n    }\r\n}\r\n","import {\r\n    HTTP_SELECT_USER_SUCCESS,\r\n    HTTP_SELECT_USER_CLEAR\r\n} from 'constants/constants.utils'\r\n\r\nexport const setSelectUserSuccess = (payload) => ({\r\n    type: HTTP_SELECT_USER_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSelectUser = () => ({\r\n    type: HTTP_SELECT_USER_CLEAR,\r\n})\r\n\r\n","export const userHeaderTable = {\r\n    employee_id: \"\",\r\n    username:\"Username\",\r\n    first_name_th: \"ชื่อ\",\r\n    last_name_th: \"นามสกุล\",\r\n    employee_privilege_type: \"โปร\",\r\n}\r\n\r\n\r\nexport const itemSelectBoxsHoldTime = [\r\n    {\r\n        value: \"5 minutes\"\r\n        , text: \"5 นาที\"\r\n    },{\r\n        value: \"10 minutes\"\r\n        , text: \"10 นาที\"\r\n    },{\r\n        value: \"15 minutes\"\r\n        , text: \"15 นาที\"\r\n    },{\r\n        value: \"30 minutes\"\r\n        , text: \"30 นาที\"\r\n    },{\r\n        value: \"1 hours\"\r\n        , text: \"1 ชั่วโมง\"\r\n    },{\r\n        value: \"2 hours\"\r\n        , text: \"2 ชั่วโมง\"\r\n    }\r\n]","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserEditList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-edit-info-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-edit-info\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือก User เพื่อแก้ไขข้อมูล</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for edit information</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditList);","import { MAIN_URL, GET_USER_BYID_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nexport async function GetUserByID(dispatch, credential, authStore) {\r\n    dispatch(setFetching());\r\n    const urlClient = `${MAIN_URL}${GET_USER_BYID_API}`\r\n    const valuesObj = { ...credential }\r\n    const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n    if (result.error) {\r\n        dispatch(setFailed());\r\n    } else\r\n        dispatch(setSuccess());\r\n    return result;\r\n}\r\n","\r\nimport { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, EDIT_USER_INFO_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const EditUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${EDIT_USER_INFO_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-edit-list')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Label from \"components/Label/Label\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { EditUserAction } from \"actions/user/user-edit-info.action\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport swal from 'sweetalert';\r\nimport { ValidateEmail, ValidateLine, allnumeric, IsProhibitSpecial, IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport {\r\n    MESSAGE_FIRST_NAME_NOTFOUND,\r\n    MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_LAST_NAME_NOTFOUND,\r\n    MESSAGE_LAST_NAME_PROHIBIT_SPECIAL,\r\n    MESSAGE_ADDRESS_PROHITBIT_SPECIAL,\r\n    MESSAGE_MOBILE_NOT_NUMBER,\r\n    MESSAGE_MOBILE_NOT_10_CHARACTER,\r\n    MESSAGE_LINE_FORMAT_INVALID,\r\n    MESSAGE_EMAIL_FORMAT_INVALID,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n} from \"constants/message.constant\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserEditInfo() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\"\r\n    })\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-edit-info-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-edit-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(()=>{\r\n                    history.push(\"/user-edit-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    address: result.address,\r\n                    mobile: result.employee_mobile,\r\n                    line: result.employee_line,\r\n                    email: result.employee_email,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onEditInfoClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const valuesObj = {\r\n            employee_id: employee_id.toString(),\r\n            first_name: userInfo.first_name,\r\n            last_name: userInfo.last_name,\r\n            address: userInfo.address,\r\n            mobile: userInfo.mobile,\r\n            line: userInfo.line,\r\n            email: userInfo.email,\r\n            company_id: company_id.toString(),\r\n        }\r\n        if (editInfoUserMiddleware(valuesObj)) {\r\n            dispatch(EditUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function editInfoUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.first_name) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.first_name)) {\r\n            swal(\"Warning!\", MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (!valuesObj.last_name) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_NOTFOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.last_name)) {\r\n            swal(\"Warning!\", MESSAGE_LAST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.address)) {\r\n            swal(\"Warning!\", MESSAGE_ADDRESS_PROHITBIT_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n            return false;\r\n        }\r\n        if (valuesObj.email)\r\n            if (!ValidateEmail(valuesObj.email)) {\r\n                swal(\"Warning!\", MESSAGE_EMAIL_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.line)\r\n            if (!ValidateLine(valuesObj.line)) {\r\n                swal(\"Warning!\", MESSAGE_LINE_FORMAT_INVALID, \"warning\");\r\n                setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                return false;\r\n            }\r\n        if (valuesObj.moblie) {\r\n            if (!allnumeric(valuesObj.moblie)) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_NUMBER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                return false;\r\n            } else if (valuesObj.moblie.length != 10) {\r\n                swal(\"Warning!\", MESSAGE_MOBILE_NOT_10_CHARACTER, \"warning\");\r\n                setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\",\r\n            mobile: \"\",\r\n            line: \"\",\r\n            email: \"\"\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>แก้ไขข้อมูลผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Edit user information</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Label\r\n                                title=\"Username\"\r\n                                value={userInfo.username}\r\n                            />\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ชื่อ\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.first_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, first_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, first_name: MESSAGE_FIRST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, first_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.first_name}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"นามสกุล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"250\",\r\n                                            value: userInfo.last_name,\r\n                                            onChange: event => setUserInfo({ ...userInfo, last_name: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n                                                } else if (IsProhibitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, last_name: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.last_name}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"เบอร์โทรศัพท์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"10\",\r\n                                            value: userInfo.mobile,\r\n                                            onChange: event => setUserInfo({ ...userInfo, mobile: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!allnumeric(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_NUMBER })\r\n                                                } else if (event.target.value.length != 10) {\r\n                                                    setMessageErr({ ...messageErr, mobile: MESSAGE_MOBILE_NOT_10_CHARACTER })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, mobile: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.mobile}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"อีเมล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"100\",\r\n                                            value: userInfo.email,\r\n                                            onChange: event => setUserInfo({ ...userInfo, email: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateEmail(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, email: MESSAGE_EMAIL_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, email: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.email}</span>\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <CustomInput\r\n                                        labelText=\"ไลน์\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"50\",\r\n                                            value: userInfo.line,\r\n                                            onChange: event => setUserInfo({ ...userInfo, line: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (!ValidateLine(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, line: MESSAGE_LINE_FORMAT_INVALID })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, line: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.line}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"ที่อยู่\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: userInfo.address,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setUserInfo({ ...userInfo, address: event.target.value }),\r\n                                            onBlur: event => {\r\n                                                if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, address: MESSAGE_ADDRESS_PROHITBIT_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, address: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.address}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                className={classes.btnSave}\r\n                                onClick={onEditInfoClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >แก้ไขข้อมูลผู้ใช้งาน</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction,\r\n    GetUserByID,\r\n    EditUserAction,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditInfo);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangePrivilegeSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-change-privilege-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไปเปลี่ยนแปลงสิทธิ์การใช้งานระบบของ User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for change privilege of user</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangePrivilegeSelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangePrivilegeList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-change-privilege-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-change-privilege\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>เลือก User เพื่อเปลี่ยนแปลงสิทธิ์การใช้งานระบบ</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for change privilege</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangePrivilegeList);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CHANGE_PRIVILEGE_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const ChangePrivilegeUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CHANGE_PRIVILEGE_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-change-privilege-list')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport SelectBox from \"components/Select/SelectBox\"\r\nimport Label from \"components/Label/Label\"\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { ChangePrivilegeUserAction } from \"actions/user/user-change-privilege.action\"\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_NOT_SELECT_PRIVILEGE,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n} from \"constants/message.constant\"\r\nimport { IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserChangePrivilege() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        privilege: \"\"\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        privilege: \"\"\r\n    })\r\n    const [selectPrivilege, setSelectPrivilege] = useState(\"\");\r\n    const [image, setImage] = useState(null)\r\n    const [remark, setRemark] = useState(\"\");\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-change-privilege-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-change-privilege-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetPrivilegeAllAction(history, authStore))\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-change-privilege-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    privilege: result.employee_privilege_id,\r\n                })\r\n                setSelectPrivilege(result.employee_privilege_id)\r\n            }\r\n        }\r\n    }\r\n    const privilegeItems = Store.privilegeGetAllReducer.result.map(item => {\r\n        return {\r\n            key: item.employee_privilege_type,\r\n            value: item.employee_privilege_id,\r\n            text: item.employee_privilege_name_th\r\n        }\r\n    })\r\n\r\n    //-----------------------On Create Click\r\n    function onChangePrivilegeClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const employee_type = Store.privilegeGetAllReducer.result.filter(item => { return item.employee_privilege_id == selectPrivilege }).map(item => {\r\n            return item.employee_privilege_type\r\n        })\r\n        const valuesObj = {\r\n            image,\r\n            employee_privilege_id: selectPrivilege.toString(),\r\n            remark,\r\n            employee_type: employee_type[0],\r\n            company_id: company_id.toString(),\r\n            employee_id: employee_id.toString()\r\n        }\r\n        if (changePrivilegeUserMiddleware(valuesObj)) {\r\n            dispatch(ChangePrivilegeUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function changePrivilegeUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.employee_privilege_id) {\r\n            swal(\"Warning!\", MESSAGE_NOT_SELECT_PRIVILEGE, \"warning\");\r\n            setMessageErr({ ...messageErr, privilege: MESSAGE_NOT_SELECT_PRIVILEGE })\r\n            return false;\r\n        } else if (!valuesObj.image) {\r\n            swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_NOTSELECTIMAGE })\r\n            return false;\r\n        } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n            swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_FILE_IMAGE_INVALID })\r\n            return false;\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            privilege: \"\",\r\n            image: \"\",\r\n            remark: \"\",\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เปลี่ยนแปลงสิทธิ์เข้าใช้งานระบบ</h4>\r\n                            <p className={classes.cardCategoryWhite}>Change Privilege</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={5} md={5}>\r\n                                    <Label\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={7} md={7}>\r\n                                    <Label\r\n                                        title=\"ชื่อ-นามสกุล\"\r\n                                        value={`${userInfo.first_name} ${userInfo.last_name}`}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={6} md={6}>\r\n                                                    <SelectBox\r\n                                                        title=\"เลือกสิทธิ์การเข้าใช้งาน\"\r\n                                                        value={selectPrivilege}\r\n                                                        setValue={setSelectPrivilege}\r\n                                                        items={privilegeItems}\r\n                                                    />\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.privilege}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <InputFile\r\n                                        title=\"เลือกรูปภาพหลักฐานการแจ้งเปลี่ยนสิทธิ์เข้าใช้งานของ User\"\r\n                                        setValue={setImage}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.image}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่เปลี่ยนสิทธิ์การเข้าใช้งานระบบ\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"primary\"\r\n                                onClick={onChangePrivilegeClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >บันทึก</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction,\r\n    GetUserByID,\r\n    ChangePrivilegeUserAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangePrivilege);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_COMPANY_ALL_FETCHING,\r\n    HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_ALL_FAILED\r\n} from 'constants/constants.utils'\r\n\r\nimport { MAIN_URL, GET_COMPANY_ALL_AND_NOT_CIT_COMPANY_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\nexport const setGetCompanyAllFetching = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FETCHING\r\n})\r\n\r\nexport const setGetCompanyAllSuccess = (payload) => ({\r\n    type: HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setGetCompanyFailed = () => ({\r\n    type: HTTP_GET_COMPANY_ALL_FAILED\r\n})\r\n\r\nexport const GetCompanyListAndNotCitCompanyAllAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        dispatch(setFetching());\r\n        const urlClient = `${MAIN_URL}${GET_COMPANY_ALL_AND_NOT_CIT_COMPANY_API}`\r\n        const valuesObj = { ...credential }\r\n        const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n        if (result.error) {\r\n            dispatch(setFailed());\r\n            swal(\"Warning!\", result.message, \"warning\");\r\n        } else {\r\n            if (result.result)\r\n                dispatch(setGetCompanyAllSuccess(result.result));\r\n            else\r\n                dispatch(setGetCompanyAllSuccess([]));\r\n            dispatch(setSuccess());\r\n        }\r\n    }\r\n}\r\n","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAndNotCitCompanyAllAction } from \"actions/company/company-list-not-cit-company.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangeComapnySelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    \r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch ? textSearch : \"\"\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyListAndNotCitCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        const company_name = event.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id,company_name }));\r\n            history.push(\"/user-change-company-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไปเปลี่ยนแปลงโครงการหลักที่ User ดูแลอยู่</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for change main company</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            company_name={row.company_name}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id }company_name={row.company_name}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAndNotCitCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangeComapnySelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserChangeCompanyList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadChangeCompanyForm();\r\n    }, []);\r\n    async function loadChangeCompanyForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-change-company-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadChangeCompanyForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-change-company\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>เลือก User เพื่อเปลี่ยนแปลงโครงการหลักที่ดูแลอยู่ปัจจุบัน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for change main company</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangeCompanyList);","import { useState, useEffect } from \"react\"\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\n// import GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\n//--------Style\r\nconst styleTableHeader = {\r\n    backgroundColor: \"rgb(144,138,138)\",\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    fontWeight: 600\r\n}\r\n\r\nexport default function UserChangeCompanyModal(props) {\r\n    const { showModal, setShowModal, setSelectNewCompany } = props\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const scroll = 'paper';\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    //-------------------State\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyEditForm();\r\n    }, []);\r\n    async function loadCompanyEditForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n        }\r\n    }\r\n    //--------------------Function\r\n    function onCloseModal() {\r\n        setShowModal(false);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyEditForm(e);\r\n    }\r\n    //----------------On Select company\r\n    function onSelectCompay(e) {\r\n        const company_id = e.target.getAttribute(\"company_id\")\r\n        const company_code = e.target.getAttribute(\"company_code\")\r\n        const company_name = e.target.getAttribute(\"company_name\")\r\n        if (company_id) {\r\n            setSelectNewCompany({ company_id, company_code, company_name });\r\n            onCloseModal(false);\r\n        }\r\n    }\r\n    //------------------------------------------------------\r\n    return (\r\n        <Dialog\r\n            open={showModal}\r\n            scroll={scroll}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n            <DialogTitle className={classesModal.headModalEdit} id=\"scroll-dialog-title\">เลือกโครงการใหม่</DialogTitle>\r\n            <DialogContent dividers={scroll === 'paper'} >\r\n                <GridContainer>\r\n                    <CardBody>\r\n                        <ButtonSearch\r\n                            placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                            searchFunc={e => onSearchClick(e)}\r\n                        />\r\n                        <br></br>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                            {headerTable.company_code}\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 200, ...styleTableHeader }}>\r\n                                            {headerTable.company_name}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {(rowsPerPage > 0\r\n                                        ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        : Store.companyGetAllReducer.result\r\n                                    ).map((row) => (\r\n                                        <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                            <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                <div className={classes2.tableRowBtn}>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        size=\"small\"\r\n                                                        className={classesModal.btnSelect}\r\n                                                        endIcon={<Icon company_id={row.company_id} company_name={row.company_name} company_code={row.company_code}>task_alt</Icon>}\r\n                                                        company_id={row.company_id}\r\n                                                        company_name={row.company_name}\r\n                                                        company_code={row.company_code}\r\n                                                        onClick={onSelectCompay}\r\n                                                    >\r\n                                                        <span company_id={row.company_id} company_name={row.company_name} company_code={row.company_code}>เลือก</span>\r\n                                                    </Button><br></br>\r\n\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120 }} align=\"left\">\r\n                                            <div style={{ maxWidth: 120, overflowX: \"auto\" }}>\r\n                                                    <span> {row.company_code ? row.company_code : ''}</span>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 300 }} align=\"left\">\r\n                                                <div style={{ maxWidth: 300, overflowX: \"auto\" }}>\r\n                                                    <span>{row.company_name ? row.company_name : ''}</span>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    {emptyRows > 0 && (\r\n                                        <TableRow style={{ height: 53 * emptyRows }}>\r\n                                            <TableCell colSpan={3} />\r\n                                        </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n                                <TableFooter >\r\n                                    <TableRow >\r\n                                        <TablePagination\r\n                                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                            colSpan={3}\r\n                                            count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                            rowsPerPage={rowsPerPage}\r\n                                            page={page}\r\n                                            SelectProps={{\r\n                                                inputProps: { 'aria-label': 'rows per page' },\r\n                                                native: true,\r\n                                            }}\r\n                                            onChangePage={handleChangePage}\r\n                                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                            ActionsComponent={TableCustom}\r\n                                        />\r\n                                    </TableRow>\r\n                                </TableFooter>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </CardBody>\r\n                </GridContainer>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCloseModal}\r\n                    color=\"primary\"\r\n                    className={classesModal.btnCancel}\r\n                >\r\n                    ยกเลิก\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, CHANGE_MAIN_COMPANY_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const ChangeMainCompanyUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${CHANGE_MAIN_COMPANY_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-change-company-select')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport Label from \"components/Label/Label\"\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport UserChangeCompanyModal from \"views/user/change-main-company/User-change-company-modal\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { ChangeMainCompanyUserAction } from \"actions/user/user-change-main-company.action\"\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n    MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY,\r\n    MESSAGE_NOT_SELECT_NEW_COMPANY,\r\n} from \"constants/message.constant\"\r\nimport { IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserChangeCompany() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        privilege: \"\"\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        privilege: \"\"\r\n    })\r\n    const [image, setImage] = useState(null)\r\n    const [remark, setRemark] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectNewCompany, setSelectNewCompany] = useState({ company_id: \"\", company_code: \"\", company_name: \"\" });\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-change-company-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-change-company-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-change-company-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    privilege: result.employee_privilege_id,\r\n                })\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onChangeMainCompanyClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n\r\n        const valuesObj = {\r\n            image,\r\n            remark,\r\n            old_company_id: company_id.toString(),\r\n            new_company_id: selectNewCompany.company_id.toString(),\r\n            employee_id: employee_id.toString()\r\n        }\r\n        if (changeMainCompanyUserMiddleware(valuesObj)) {\r\n            dispatch(ChangeMainCompanyUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function changeMainCompanyUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.old_company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.new_company_id) {\r\n            swal(\"Warning!\", MESSAGE_NOT_SELECT_NEW_COMPANY, \"warning\");\r\n            setMessageErr({ ...messageErr, new_company: MESSAGE_NOT_SELECT_NEW_COMPANY })\r\n            return false;\r\n        } else if (valuesObj.old_company_id == valuesObj.new_company_id) {\r\n            swal(\"Warning!\", MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY, \"warning\");\r\n            setMessageErr({ ...messageErr, new_company: MESSAGE_SELECT_NEW_COMPANY_DUPLICATE_OLD_COMPANY })\r\n            return false;\r\n        } else if (!valuesObj.image) {\r\n            swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_NOTSELECTIMAGE })\r\n            return false;\r\n        } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n            swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_FILE_IMAGE_INVALID })\r\n            return false;\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            privilege: \"\",\r\n            image: \"\",\r\n            remark: \"\",\r\n        })\r\n    }\r\n    //--------------------------Modal\r\n    function onShowModal() {\r\n        setShowModal(true)\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <UserChangeCompanyModal\r\n                showModal={showModal}\r\n                setShowModal={setShowModal}\r\n                setSelectNewCompany={setSelectNewCompany}\r\n            />\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เปลี่ยนแปลงโครงการหลักที่ดูแลอยู่ในปัจจุบัน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Change main company</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={5} md={5}>\r\n                                    <Label\r\n                                        key={1}\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={7} md={7}>\r\n                                    <Label\r\n                                        key={2}\r\n                                        title=\"ชื่อ-นามสกุล\"\r\n                                        value={`${userInfo.first_name} ${userInfo.last_name}`}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <Label\r\n                                                        title=\"โครงการหลักที่ดูแลปัจจุบัน\"\r\n                                                        value={Store.companySelectedReducer.result ? Store.companySelectedReducer.result.company_name : \"\"}\r\n                                                    />\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <br></br>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <Label\r\n                                                        title=\"โครงการหลักที่ดูแล (ใหม่)\"\r\n                                                        value={selectNewCompany.company_name}\r\n                                                    />\r\n                                                    <br></br>\r\n                                                    <span style={{ color: \"red\" }}>{messageErr.new_company}</span>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                            <br></br>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12} style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\r\n                                                    <Button color=\"info\"\r\n                                                        onClick={onShowModal}\r\n                                                        endIcon={<Icon style={{ fontSize: \"25px\" }}>flip_camera_android</Icon>}\r\n                                                    >เลือกโครงการใหม่</Button>\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <InputFile\r\n                                        title=\"เลือกรูปภาพหลักฐานการแจ้งเปลี่ยนโครงการหลักที่ User ดูแลอยู่ปัจจุบัน\"\r\n                                        setValue={setImage}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.image}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่เปลี่ยนโครงการหลักที่ User ดูแลอยู่ปัจจุบัน\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"primary\"\r\n                                onClick={onChangeMainCompanyClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >บันทึก</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer }) => ({ mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetUserByID,\r\n    ChangeMainCompanyUserAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserChangeCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserResetPassowrdSelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadCompanyResetPasswordForm();\r\n    }, []);\r\n    async function loadCompanyResetPasswordForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadCompanyResetPasswordForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-reset-password-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการเพื่อเข้าไป Reset Password</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for reset password</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserResetPassowrdSelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserResetPasswordList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadUserListForm();\r\n    }, []);\r\n    async function loadUserListForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-edit-info-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadUserListForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-reset-password\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือก Reset Password User</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for reset password </p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserResetPasswordList);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, RESET_PASSWORD_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodVerifyAuth } from 'utils/httpClient.utils'\r\nimport {MESSAGE_SUCCESS} from 'constants/message.constant'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const ResetPasswordUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${RESET_PASSWORD_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodVerifyAuth({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", MESSAGE_SUCCESS, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        const url_reset_password = `${result.result}`\r\n                        console.log(url_reset_password)\r\n                        history.push('/user-reset-password-list')\r\n                        window.open(url_reset_password);\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Label from \"components/Label/Label\"\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetPrivilegeAllAction } from \"actions/privilege/privilege-all.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { ResetPasswordUserAction } from \"actions/user/user-reset-password.action\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport SelectBox from \"components/Select/SelectBox\"\r\nimport swal from 'sweetalert';\r\nimport { IsProhibitSpecial, IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport {itemSelectBoxsHoldTime} from \"views/user/data/User.data\"\r\nimport {\r\n    MESSAGE_HOLDTIME_NOT_FOUND,\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_EMPLOYEE_ID_NOTFOUND,\r\n} from \"constants/message.constant\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserResetPassword() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        address: \"\",\r\n        mobile: \"\",\r\n        line: \"\",\r\n        email: \"\",\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        hold_time: \"\",\r\n        remark: \"\"\r\n    })\r\n    const [remark, setRemark] = useState(\"\")\r\n    const [holdTime, setHoldTime] = useState(\"\")\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-reset-password-listcompany-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-reset-password-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-reset-password-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name: result.first_name_th,\r\n                    last_name: result.last_name_th,\r\n                    address: result.address,\r\n                    mobile: result.employee_mobile,\r\n                    line: result.employee_line,\r\n                    email: result.employee_email,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onResetPasswordClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const valuesObj = {\r\n            employee_id: employee_id.toString(),\r\n            remark,\r\n            hold_time: holdTime,\r\n            company_id: company_id.toString(),\r\n        }\r\n        if (resetPasswordUserMiddleware(valuesObj)) {\r\n            dispatch(ResetPasswordUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n   \r\n    //-----------------------Middleware for Create \r\n    function resetPasswordUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.employee_id) {\r\n            swal(\"Warning!\", MESSAGE_EMPLOYEE_ID_NOTFOUND, \"warning\");\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsProhibitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        } else if(!valuesObj.hold_time){\r\n            swal(\"Warning!\", MESSAGE_HOLDTIME_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, hold_time: MESSAGE_HOLDTIME_NOT_FOUND })\r\n        }\r\n        // else if (!valuesObj.last_name) {\r\n        //     swal(\"Warning!\", MESSAGE_LAST_NAME_NOTFOUND, \"warning\");\r\n        //     setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_NOTFOUND })\r\n        //     return false;\r\n        // } else if (IsProhibitSpecial(valuesObj.last_name)) {\r\n        //     swal(\"Warning!\", MESSAGE_LAST_NAME_PROHIBIT_SPECIAL, \"warning\");\r\n        //     setMessageErr({ ...messageErr, last_name: MESSAGE_LAST_NAME_PROHIBIT_SPECIAL })\r\n        //     return false;\r\n        // } \r\n\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            address: \"\",\r\n            mobile: \"\",\r\n            line: \"\",\r\n            email: \"\"\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>แก้ไขข้อมูลผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Edit user information</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Label\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Label\r\n                                        title=\"ชื่อ\"\r\n                                        value={userInfo.first_name}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <Label\r\n                                        title=\"นามสกุล\"\r\n                                        value={userInfo.last_name}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={6} md={6}>\r\n                                    <SelectBox\r\n                                        title=\"เลือกเวลาในการ Reset password\"\r\n                                        setValue={setHoldTime}\r\n                                        value={holdTime}\r\n                                        items={itemSelectBoxsHoldTime}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.hold_time}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่ Reset password\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                className={classes.btnSave}\r\n                                onClick={onResetPasswordClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>lock_reset</Icon>}\r\n                            >Reset Password</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer }) => ({ mainReducer, privilegeGetAllReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetPrivilegeAllAction,\r\n    GetUserByID,\r\n    ResetPasswordUserAction,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserResetPassword);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { modalStyle } from 'utils/modalStyle.utils'\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\"\r\nimport { headerTable } from 'views/Company/Edit/data/Company-edit-data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\nimport { setSelectCompanySuccess, setClearSelectCompany } from \"actions/company/company-selected.action\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserAddOrDeleteListComapnySelectCompany() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const classesModal = modalStyle();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadListCompanyListSelectCompanyForm();\r\n    }, []);\r\n    async function loadListCompanyListSelectCompanyForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            const valuesObj = {\r\n                company_code_or_name: textSearch\r\n            }\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyAllAction(history, valuesObj, authStore));\r\n            dispatch(setClearSelectCompany());\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadListCompanyListSelectCompanyForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const company_id = event.target.getAttribute(\"company_id\")\r\n        if (company_id) {\r\n            dispatch(setSelectCompanySuccess({ company_id }));\r\n            history.push(\"/user-addordelete-listcompany-list\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เลือกโครงการที่จะเข้าไป เพิ่ม/ลด โครงการในการดูแลของผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select company for add/delete comapny list</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"รหัสโครงการ/ชื่อโครงการ\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_code}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {headerTable.company_name}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.company_promotion}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {headerTable.status}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.companyGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.companyGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.company_id ? row.company_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classesModal.btnSelect}\r\n                                                            endIcon={<Icon company_id={row.company_id} company_name={row.company_name}>pin_end</Icon>}\r\n                                                            company_id={row.company_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span company_id={row.company_id}>เลือก</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.company_code ? row.company_code : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.company_name ? row.company_name : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.company_promotion ? row.company_promotion : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.status ? row.status : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.companyGetAllReducer.result ? Store.companyGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyGetAllReducer }) => ({ mainReducer, companyGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyAllAction,\r\n    checkJWTTOKENAction,\r\n    setSelectCompanySuccess\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddOrDeleteListComapnySelectCompany);","import { styles } from \"views/Company/Add/Company-style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useState, useEffect } from 'react'\r\nimport TableCustom from \"components/Table/TableCustom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { useSelector } from 'react-redux'\r\nimport { GetCompanyListAllAction } from \"actions/user/user-get-list.action\"\r\nimport { setSelectUserSuccess,setClearSelectUser } from 'actions/user/user-select.action'\r\nimport { userHeaderTable } from 'views/user/data/User.data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ButtonSearch from 'components/Button/ButtonSearch'\r\nimport { editCompantStyle } from \"views/Company/Edit/Company-edit-style\"\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst useStyles2 = makeStyles(editCompantStyle);\r\nfunction UserAddOrDeleteListCompanyList() {\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const Store = useSelector(store => store);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const emptyRows = calEmptyRows(Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result : 0);\r\n\r\n    //---------------------on load\r\n    useEffect(() => {\r\n        loadAddOrDeleteCompanyForm();\r\n    }, []);\r\n    async function loadAddOrDeleteCompanyForm(textSearch) {\r\n        const authStore = Store.loginReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            if (Store.companySelectedReducer.result) {\r\n                const valuesObj = {\r\n                    company_id: Store.companySelectedReducer.result.company_id,\r\n                    full_name: textSearch\r\n                }\r\n                dispatch(setClearSelectUser());\r\n                dispatch(checkJWTTOKENAction(history, Store));\r\n                dispatch(GetCompanyListAllAction(history, valuesObj, authStore));\r\n            } else {\r\n                history.push(\"/user-addordelete-listcompany-select\");\r\n            }\r\n\r\n        }\r\n    }\r\n    //---------------On Search Click\r\n    function onSearchClick(e) {\r\n        loadAddOrDeleteCompanyForm(e);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    //--------cal Row Height\r\n    function calEmptyRows(rowsLength) {\r\n        return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage)\r\n    }\r\n\r\n    //--------Style\r\n    const styleTableHeader = {\r\n        backgroundColor: \"rgb(144,138,138)\",\r\n        color: \"white\",\r\n        fontSize: 14,\r\n        fontWeight: 600\r\n    }\r\n    //--------------Show Modal Edit\r\n    function onShowModal(event) {\r\n        const employee_id = event.target.getAttribute(\"employee_id\")\r\n        if(employee_id){\r\n            dispatch(setSelectUserSuccess({employee_id}))\r\n            history.push(\"/user-addordelete-listcompany\")\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>เลือก User เพื่อเข้าไป เพิ่ม/ลด โครงการในการดูแลผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Select user for add/delete comapny list</p>\r\n                        </CardHeader>\r\n\r\n                        <CardBody>\r\n                            <ButtonSearch\r\n                                placeholder=\"ชื่อ/นามสกุล\"\r\n                                searchFunc={e => onSearchClick(e)}\r\n                            />\r\n                            <br></br>\r\n                            <TableContainer component={Paper}>\r\n                                <Table className={classes.table} aria-label=\"custom pagination table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell style={{ width: 80, ...styleTableHeader }} align=\"left\">\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 160, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.username}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.first_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ ...styleTableHeader }}>\r\n                                                {userHeaderTable.last_name_th}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 120, ...styleTableHeader }} align=\"left\">\r\n                                                {userHeaderTable.employee_privilege_type}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {(rowsPerPage > 0\r\n                                            ? Store.userListGetAllReducer.result.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            : Store.userListGetAllReducer.result\r\n                                        ).map((row) => (\r\n                                            <TableRow key={row.employee_id ? row.employee_id : '0'}>\r\n                                                <TableCell style={{ width: 80 }} align=\"left\">\r\n                                                    <div className={classes2.tableRowBtn}>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            size=\"small\"\r\n                                                            className={classes.button}\r\n                                                            endIcon={<Icon employee_id={row.employee_id}>create</Icon>}\r\n                                                            employee_id={row.employee_id}\r\n                                                            onClick={onShowModal}\r\n                                                        >\r\n                                                            <span employee_id={row.employee_id}>แก้ไข</span>\r\n                                                        </Button><br></br>\r\n\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 160 }} align=\"left\">\r\n                                                    {row.username ? row.username : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.first_name_th ? row.first_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.last_name_th ? row.last_name_th : ''}\r\n                                                </TableCell>\r\n                                                <TableCell style={{ width: 120 }} align=\"left\">\r\n                                                    {row.employee_privilege_type ? row.employee_privilege_type : ''}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        {emptyRows > 0 && (\r\n                                            <TableRow style={{ height: 53 * emptyRows }}>\r\n                                                <TableCell colSpan={6} />\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </TableBody>\r\n                                    <TableFooter>\r\n                                        <TableRow>\r\n                                            <TablePagination\r\n                                                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                                                colSpan={3}\r\n                                                count={Store.userListGetAllReducer.result ? Store.userListGetAllReducer.result.length : 0}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                SelectProps={{\r\n                                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                                    native: true,\r\n                                                }}\r\n                                                onChangePage={handleChangePage}\r\n                                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                                ActionsComponent={TableCustom}\r\n                                            />\r\n                                        </TableRow>\r\n                                    </TableFooter>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, userListGetAllReducer }) => ({ mainReducer, userListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    GetCompanyListAllAction,\r\n    checkJWTTOKENAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddOrDeleteListCompanyList);","import { setFetching, setSuccess, setFailed } from 'actions/main/main.action'\r\nimport { MAIN_URL, ADD_OR_DELETE_COMPANY_LIST_USER_API } from 'constants/api-route'\r\nimport { httpClientPOSTMethodFormData } from 'utils/httpClient.utils'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport const AddOrDeleteCompanyListUserAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${ADD_OR_DELETE_COMPANY_LIST_USER_API}`\r\n            const valuesObj = { ...credential }\r\n            const result = await httpClientPOSTMethodFormData({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\");\r\n            } else {\r\n                swal(\"Success\", result.message, \"success\")\r\n                    .then(() => {\r\n                        dispatch(setSuccess());\r\n                        history.push('/user-addordelete-listcompany-list')\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { styles } from \"views/styles/card.style\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter\"\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CardIcon from \"components/Card/CardIcon.js\";\r\nimport TransferList from \"components/TransferList/TransferList\"\r\nimport Label from \"components/Label/Label\"\r\nimport InputFile from \"components/Input/InputFile\"\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\"\r\nimport { GetCompanyListAllAction } from \"actions/company/company-list.action\"\r\nimport { GetUserByID } from \"actions/user/user-get-info.action\"\r\nimport { AddOrDeleteCompanyListUserAction } from \"actions/user/user-addordelete.action\"\r\nimport swal from 'sweetalert';\r\nimport {\r\n    MESSAGE_COMPANY_ID_NOTFOUND,\r\n    MESSAGE_REMARK_SPECIAL,\r\n    MESSAGE_REMARK_NOT_FOUND,\r\n    MESSAGE_NOTSELECTIMAGE,\r\n    MESSAGE_FILE_IMAGE_INVALID,\r\n} from \"constants/message.constant\"\r\nimport { IsHomeProbitSpecial } from \"utils/formatCharacter.util\"\r\nimport { getExtension, isImage } from \"utils/funcImage.utils\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction UserAddOrDeleteListCompany() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    // const classesBtn = buttonStyle();\r\n    const Store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    //-----------------state\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        company_list: null\r\n    })\r\n    const [messageErr, setMessageErr] = useState({\r\n        companylist: \"\"\r\n    })\r\n    const [image, setImage] = useState(null)\r\n    const [remark, setRemark] = useState(\"\");\r\n    const [companyListItemRight, setCompanyListItemRight] = useState([]);\r\n    const [companyListItemLeft, setCompanyListItemLeft] = useState([]);\r\n    //-----------------Form load\r\n    useEffect(() => {\r\n        loadMainForm();\r\n    }, []);\r\n    async function loadMainForm() {\r\n        const authStore = Store.loginReducer.result;\r\n        const companyStore = Store.companySelectedReducer.result;\r\n        const userStore = Store.userSelectReducer.result;\r\n        if (!authStore) {\r\n            history.push(\"/login\");\r\n        } else if (!companyStore) {\r\n            history.push(\"/user-addordelete-listcompany-select\");\r\n        } else if (!userStore) {\r\n            history.push(\"/user-addordelete-listcompany-list\");\r\n        } else {\r\n            dispatch(checkJWTTOKENAction(history, Store));\r\n            dispatch(GetCompanyListAllAction(history, authStore))\r\n            const valuesObj = {\r\n                company_id: companyStore.company_id,\r\n                employee_id: userStore.employee_id\r\n            }\r\n            const getData = await GetUserByID(dispatch, valuesObj, authStore)\r\n            if (getData.error) {\r\n                swal(\"Warning!\", getData.message, \"warning\").then(() => {\r\n                    history.push(\"/user-addordelete-listcompany-list\");\r\n                })\r\n            } else {\r\n                const result = getData.result;\r\n                const company_list = JSON.parse(result.company_list)\r\n                setUserInfo({\r\n                    username: result.username,\r\n                    first_name:result.first_name_th,\r\n                    last_name:result.last_name_th,\r\n                    company_list,\r\n                })\r\n\r\n            }\r\n        }\r\n    }\r\n    if (Store.companyListGetAllReducer.result.length > 0 && companyListItemLeft.length === 0 && companyListItemRight.length === 0 && userInfo.company_list) {\r\n        const company_list_from_get = userInfo.company_list ? userInfo.company_list : [];\r\n\r\n        const company_list_right = company_list_from_get.map((comList) => {\r\n            const comp_list = Store.companyListGetAllReducer.result.map(item => {\r\n                return { value: item.company_name, id: item.company_id }\r\n            }).filter(fil => fil.id == comList)\r\n            return comp_list[0];\r\n        }).filter(fil => fil.id != Store.companySelectedReducer.result.company_id)\r\n\r\n        const company_list_left = Store.companyListGetAllReducer.result.map(item => {\r\n            return { value: item.company_name, id: item.company_id }\r\n        }).filter(function (fil) {\r\n            return company_list_from_get.indexOf(fil.id) < 0\r\n        })\r\n\r\n\r\n        setCompanyListItemRight(company_list_right);\r\n        setCompanyListItemLeft(company_list_left);\r\n    }\r\n\r\n    //-----------------------On Create Click\r\n    function onChangeAddOrDeleteCompanyListClick() {\r\n        const company_id = parseInt(Store.companySelectedReducer.result.company_id)\r\n        const employee_id = parseInt(Store.userSelectReducer.result.employee_id)\r\n        const company_list_right = companyListItemRight.map(item => item.id)\r\n        const company_list = [company_id, ...company_list_right]\r\n        const valuesObj = {\r\n            image,\r\n            company_list: JSON.stringify(company_list),\r\n            remark,\r\n            company_id: company_id.toString(),\r\n            employee_id: employee_id.toString()\r\n        }\r\n        if (addOrDeleteCompanyListUserMiddleware(valuesObj)) {\r\n            dispatch(AddOrDeleteCompanyListUserAction(history, valuesObj, Store.loginReducer.result));\r\n        }\r\n    }\r\n    //-----------------------Middleware for Create \r\n    function addOrDeleteCompanyListUserMiddleware(valuesObj) {\r\n        resetTextError();\r\n        if (!valuesObj.company_id) {\r\n            swal(\"Warning!\", MESSAGE_COMPANY_ID_NOTFOUND, \"warning\");\r\n            return false;\r\n        } else if (!valuesObj.image) {\r\n            swal(\"Warning!\", MESSAGE_NOTSELECTIMAGE, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_NOTSELECTIMAGE })\r\n            return false;\r\n        } else if (!isImage(getExtension(valuesObj.image.name))) {\r\n            swal(\"Warning!\", MESSAGE_FILE_IMAGE_INVALID, \"warning\");\r\n            setMessageErr({ ...messageErr, image: MESSAGE_FILE_IMAGE_INVALID })\r\n            return false;\r\n        } else if (!valuesObj.remark) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_NOT_FOUND, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n            return false;\r\n        } else if (IsHomeProbitSpecial(valuesObj.remark)) {\r\n            swal(\"Warning!\", MESSAGE_REMARK_SPECIAL, \"warning\");\r\n            setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function resetTextError() {\r\n        setMessageErr({\r\n            privilege: \"\",\r\n            image: \"\",\r\n            remark: \"\",\r\n        })\r\n    }\r\n    //----------------------------------------------------\r\n    return (\r\n        <div>\r\n            <GridContainer>\r\n                <GridItem xs={12} sm={12} md={10}>\r\n                    <Card>\r\n                        <CardHeader style={{ background: \"linear-gradient(60deg, #007bff, #1e88e5)\" }} color=\"primary\">\r\n                            <h4 className={classes.cardTitleWhite}>เพิ่ม/ลด โครงการในการดูแลของผู้ใช้งาน</h4>\r\n                            <p className={classes.cardCategoryWhite}>Add/delete company list</p>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={5} md={5}>\r\n                                    <Label\r\n                                        title=\"Username\"\r\n                                        value={userInfo.username}\r\n                                    />\r\n                                </GridItem>\r\n                                <GridItem xs={12} sm={7} md={7}>\r\n                                    <Label\r\n                                        title=\"ชื่อ-นามสกุล\"\r\n                                        value={`${userInfo.first_name} ${userInfo.last_name}`}\r\n                                    />\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <br></br>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <Card>\r\n                                        <CardHeader color=\"warning\" stats icon>\r\n                                            <CardIcon color=\"success\">\r\n                                                <Icon>supervised_user_circle</Icon>\r\n                                            </CardIcon>\r\n                                            <p className={classes.cardCategory}>User Setting</p>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            <GridContainer>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <h4 style={{ textAlign: \"center\" }}>เลือกโครงการที่ดูแลเพิ่มเติม</h4>\r\n                                                </GridItem>\r\n                                                <br></br>\r\n                                                <GridItem xs={12} sm={12} md={12}>\r\n                                                    <TransferList\r\n                                                        titleLeft=\"โครงการที่ยังไม่เลือก\"\r\n                                                        titleRight=\"โครงการที่ถูกเลือก\"\r\n                                                        leftItems={companyListItemLeft}\r\n                                                        setLeftItems={setCompanyListItemLeft}\r\n                                                        rightItems={companyListItemRight}\r\n                                                        setRightItems={setCompanyListItemRight}\r\n                                                    />\r\n                                                </GridItem>\r\n                                            </GridContainer>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <InputFile\r\n                                        title=\"เลือกรูปภาพหลักฐานการแจ้งเปลี่ยนแปลงโครงการที่ผู้ใช้งานดูแล\"\r\n                                        setValue={setImage}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.image}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                            <GridContainer>\r\n                                <GridItem xs={12} sm={12} md={12}>\r\n                                    <CustomInput\r\n                                        labelText=\"เหตุผลที่เปลี่ยนแปลงโครงการที่ผู้ใช้งานดูแล\"\r\n                                        formControlProps={{\r\n                                            fullWidth: true,\r\n                                        }}\r\n                                        inputProps={{\r\n                                            maxLength: \"255\",\r\n                                            value: remark,\r\n                                            multiline: true,\r\n                                            rows: 4,\r\n                                            onChange: event => setRemark(event.target.value),\r\n                                            onBlur: event => {\r\n                                                if (!event.target.value) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_NOT_FOUND })\r\n                                                }\r\n                                                else if (IsHomeProbitSpecial(event.target.value)) {\r\n                                                    setMessageErr({ ...messageErr, remark: MESSAGE_REMARK_SPECIAL })\r\n                                                } else {\r\n                                                    setMessageErr({ ...messageErr, remark: \"\" })\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <span style={{ color: \"red\" }}>{messageErr.remark}</span>\r\n                                </GridItem>\r\n                            </GridContainer>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"primary\"\r\n                                onClick={onChangeAddOrDeleteCompanyListClick}\r\n                                endIcon={<Icon style={{ fontSize: \"25px\" }}>save</Icon>}\r\n                            >บันทึก</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </GridItem>\r\n            </GridContainer>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ mainReducer, companyListGetAllReducer }) => ({ mainReducer, companyListGetAllReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    checkJWTTOKENAction,\r\n    GetCompanyListAllAction,\r\n    GetUserByID,\r\n    AddOrDeleteCompanyListUserAction,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddOrDeleteListCompany);","import swal from 'sweetalert';\r\nimport {\r\n    setFetching,\r\n    setSuccess,\r\n    setFailed,\r\n} from 'actions/main/main.action'\r\nimport {\r\n    HTTP_GET_SLOT_MAX_SUCCESS,\r\n    HTTP_GET_SLOT_MAX_CLEAR\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_COMPANYID_NOTFOUND\r\n} from 'constants/message.constant'\r\nimport { MAIN_URL, GET_SLOT_MAX_API } from 'constants/api-route'\r\nimport { httpClientGetMethodWithPost } from 'utils/httpClient.utils'\r\n\r\n\r\nexport const setGetSlotMaxSuccess = (payload) => ({\r\n    type: HTTP_GET_SLOT_MAX_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const setClearSlotMax = () => ({\r\n    type: HTTP_GET_SLOT_MAX_CLEAR,\r\n})\r\n\r\nexport const GetSlotMaxAction = (history, credential, authStore) => {\r\n    return async dispatch => {\r\n        if (getSlotNotUseMiddleware(history,credential)) {\r\n            dispatch(setFetching());\r\n            const urlClient = `${MAIN_URL}${GET_SLOT_MAX_API}`\r\n            const valuesObj = { company_id : parseInt(credential.company_id) }\r\n            const result = await httpClientGetMethodWithPost({ urlClient, valuesObj, authStore })\r\n            if (result.error) {\r\n                dispatch(setFailed());\r\n                swal(\"Warning!\", result.message, \"warning\").then(() => {\r\n                    history.goBack();\r\n                });\r\n            } else {\r\n                if (result.result)\r\n                    dispatch(setGetSlotMaxSuccess(result.result));\r\n                else\r\n                    dispatch(setClearSlotMax(null));\r\n                dispatch(setSuccess());\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getSlotNotUseMiddleware(history,valuesObj) {\r\n    if (!valuesObj.company_id) {\r\n        swal(\"Warning!\", MESSAGE_COMPANYID_NOTFOUND, \"warning\");\r\n        history.goBack();\r\n    }\r\n    return true\r\n}","export const SlotCompantStyle = {\r\n    tableRowBtn: {\r\n        display: \"flex\"\r\n    }, btnInRow: {\r\n        marginLeft: \"5px\"\r\n    }\r\n}\r\nexport const styles = {\r\n    cardCategoryWhite: {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n      color: \"#FFFFFF\",\r\n      marginTop: \"0px\",\r\n      minHeight: \"auto\",\r\n      fontWeight: \"300\",\r\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n      marginBottom: \"3px\",\r\n      textDecoration: \"none\",\r\n    },\r\n    cardHeader:{\r\n        background:\"linear-gradient(81deg, #66bb6a, #43a047)\"\r\n    }\r\n  };\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { Card, CardHeader, CardContent } from '@mui/material';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '70%',\r\n    // height: '88%',\r\n    bgcolor: 'background.paper',\r\n    border: '1px solid #b3b3b3',\r\n    borderRadius: '13px',\r\n    boxShadow: 24\r\n    // p: 4\r\n};\r\n\r\nTransitionsModal.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    subheader: PropTypes.string.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    setOpen: PropTypes.func.isRequired,\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default function TransitionsModal({ title, subheader, open, setOpen, children }) {\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                // onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    {/* <Box sx={style}> */}\r\n                    <Card sx={style}>\r\n                        <CardHeader\r\n                            action={\r\n                                <IconButton\r\n                                    aria-label=\"delete\"\r\n                                    size=\"large\"\r\n                                    onClick={handleClose}\r\n                                    // sx={{ position: 'absolute', top: '13px', right: '13px' }}\r\n                                >\r\n                                  <ClearIcon sx={{ fontSize: 35 }} />\r\n                                </IconButton>\r\n                            }\r\n                            title={title}\r\n                            subheader={subheader}\r\n                            sx={{ borderBottom: '1px solid #b3b3b3', boxShadow: '5px 3px 12px #b3b3b3cc' }}\r\n                        />\r\n                        <CardContent\r\n                            sx={{\r\n                                maxHeight: '80vh',\r\n                                overflowY: 'auto',\r\n                               \r\n                            }}\r\n                        >\r\n                            {children}\r\n                        </CardContent>\r\n                    </Card>\r\n                    {/* </Box> */}\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import { setFetching, setSuccess, setFailed } from \"actions/main/main.action\";\r\nimport { MAIN_URL, ADD_SLOT_MANUAL_API } from \"constants/api-route\";\r\nimport { httpClientPOSTMethodVerifyAuth } from \"utils/httpClient.utils\";\r\nimport {\r\n  MESSAGE_COMPANYID_NOTFOUND,\r\n  MESSAGE_SLOT_COUNT_NOT_FOUND,\r\n  MESSAGE_GUARDHOUSE_ID_NOT_FOUND,\r\n  MESSAGE_GUARDHOUSE_CODE_NOT_FOUND,\r\n} from \"constants/message.constant\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst AddSlotAction = (history, credential, authStore) => {\r\n  return async (dispatch) => {\r\n    if (addSlotMiddleware(credential)) {\r\n      dispatch(setFetching());\r\n      const urlClient = `${MAIN_URL}${ADD_SLOT_MANUAL_API}`;\r\n      const valuesObj = {\r\n        company_id: credential.company_id,\r\n        slot_count: parseInt(credential.slot_count),\r\n        guardhouse_id: parseInt(credential.guardhouse_id),\r\n        guardhouse_code: credential.guardhouse_code,\r\n      };\r\n      const result = await httpClientPOSTMethodVerifyAuth({\r\n        urlClient,\r\n        valuesObj,\r\n        authStore,\r\n      });\r\n      if (result.error) {\r\n        dispatch(setFailed());\r\n        swal(\"Warning!\", result.message, \"warning\");\r\n      } else {\r\n        dispatch(setSuccess());\r\n        swal(\"Success\", result.message, \"success\").then(() => {\r\n          refreshPage();\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nfunction addSlotMiddleware(valuesObj) {\r\n  if (!valuesObj.company_id) {\r\n    swal(\"Warning!\", MESSAGE_COMPANYID_NOTFOUND, \"warning\");\r\n    return false;\r\n  } else if (!valuesObj.guardhouse_id) {\r\n    swal(\"Warning!\", MESSAGE_GUARDHOUSE_ID_NOT_FOUND, \"warning\");\r\n    return false;\r\n  } else if (!valuesObj.guardhouse_code) {\r\n    swal(\"Warning!\", MESSAGE_GUARDHOUSE_CODE_NOT_FOUND, \"warning\");\r\n    return false;\r\n  } else if (!valuesObj.slot_count) {\r\n    swal(\"Warning!\", MESSAGE_SLOT_COUNT_NOT_FOUND, \"warning\");\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction refreshPage() {\r\n  window.location.reload(false);\r\n}\r\n\r\nexport default AddSlotAction;\r\n","// import { Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector ,connect} from \"react-redux\";\r\nimport {  } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// component\r\nimport { DialogModal } from \"components/Modal\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\n// action\r\nimport { AddSlotAction } from \"actions/slot/add\";\r\nimport { modalStyle } from \"utils/modalStyle.utils\";\r\n// style\r\nimport { SlotAddModalStyle } from \"./SlotAddStyle\";\r\n\r\n\r\nconst useStyles = makeStyles(SlotAddModalStyle);\r\n\r\nfunction SlotAddModal(props) {\r\n  const { open, setOpen } = props;\r\n  const Store = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const classesModal = modalStyle();\r\n  const classes = useStyles();\r\n  // state\r\n  const [slotInfo, setSlotInfo] = useState({\r\n    slot_count: \"\",\r\n    guardhouse_id: \"\",\r\n    guardhouse_code: \"\",\r\n  });\r\n  //---------------------------------------------------\r\n  function addSlotClick() {\r\n    const company_id = parseInt(Store.companySelectedReducer.result.company_id);\r\n    dispatch(\r\n      AddSlotAction(\r\n        history,\r\n        {\r\n          company_id,\r\n          slot_count: slotInfo.slot_count,\r\n          guardhouse_id: slotInfo.guardhouse_id,\r\n          guardhouse_code: slotInfo.guardhouse_code,\r\n        },\r\n        Store.loginReducer.result\r\n      )\r\n    );\r\n  }\r\n  function cancelClick() {\r\n    setOpen(false);\r\n  }\r\n\r\n  //---------------------------------------------------\r\n  return (\r\n    <DialogModal\r\n      open={open}\r\n      setOpen={setOpen}\r\n      title={\"เพิ่มจำนวนเลข Slot\"}\r\n      subheader={\"เพิ่มจำนวนเลข Slot ให้กับโครงการ\"}\r\n    >\r\n      <Box className={classes.cardBody}>\r\n        <GridContainer>\r\n          <GridItem xs={12} sm={12} md={6}>\r\n            <CustomInput\r\n              labelText=\"Guardhouse ID\"\r\n              id=\"guardhouse-id\"\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                maxLength: \"5\",\r\n\r\n                value: slotInfo.guardhouse_id,\r\n                onChange: (event) =>\r\n                  setSlotInfo({\r\n                    ...slotInfo,\r\n                    guardhouse_id: event.target.value,\r\n                  }),\r\n              }}\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={12} md={6}>\r\n            <CustomInput\r\n              labelText=\"Guardhouse Code\"\r\n              id=\"guardhouse-code\"\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                maxLength: \"5\",\r\n\r\n                value: slotInfo.guardhouse_code,\r\n                onChange: (event) =>\r\n                  setSlotInfo({\r\n                    ...slotInfo,\r\n                    guardhouse_code: event.target.value,\r\n                  }),\r\n              }}\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} sm={3} md={3}>\r\n            <CustomInput\r\n              labelText=\"จำนวนเลข Slot ที่ต้องการเพิ่ม\"\r\n              id=\"slot-count\"\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                maxLength: \"5\",\r\n                type: \"number\",\r\n                value: slotInfo.slot_count,\r\n                onChange: (event) =>\r\n                  setSlotInfo({\r\n                    ...slotInfo,\r\n                    slot_count: event.target.value,\r\n                  }),\r\n              }}\r\n            />\r\n          </GridItem>\r\n        </GridContainer>\r\n\r\n        <br></br>\r\n\r\n        <GridContainer>\r\n          <GridItem xs={6} sm={6} md={6}>\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              className={classesModal.btnCancel}\r\n              onClick={cancelClick}\r\n            >\r\n              <span>Cancel</span>\r\n            </Button>\r\n          </GridItem>\r\n          <GridItem xs={6} sm={6} md={6} >\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              className={classesModal.btnAdd}\r\n              onClick={addSlotClick}\r\n            >\r\n              <span>เพิ่มเลข Slot</span>\r\n            </Button>\r\n          </GridItem>\r\n        </GridContainer>\r\n      </Box>\r\n    </DialogModal>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({AddSlotAction}) => ({AddSlotAction});\r\n  \r\n  const mapDispatchToProps = {AddSlotAction};\r\n  export default connect(mapStateToProps, mapDispatchToProps)(SlotAddModal);\r\n  ","export const SlotAddModalStyle = {\r\n    cardBody: {\r\n        marginLeft:\"25px\",\r\n        marginRight:\"25px\",\r\n        marginBottom:\"10px\"\r\n    }\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n// component\r\nimport { useState, useEffect } from \"react\";\r\nimport TableCustom from \"components/Table/TableCustom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkJWTTOKENAction } from \"actions/main/main.action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { GetCompanyAllAction } from \"actions/company/company-edit.action\";\r\nimport {\r\n  setSlotSelectCompanySuccess,\r\n  setSlotClearSelectCompany,\r\n  setClearSlotAll,\r\n  GetSlotNotUseAllAction,\r\n} from \"actions/slot/get/slot-get-not-use.controller\";\r\nimport { GetSlotMaxAction } from \"actions/slot/get/slot-get-max.controller\";\r\nimport { headerSlotNotUseListTable } from \"../data/data\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { modalStyle } from \"utils/modalStyle.utils\";\r\nimport { styles } from \"./SlotNotUseStyle\";\r\n// modal\r\nimport { SlotAddModal } from \"views/slot/add\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction SlotNotUsePage() {\r\n  const classes = useStyles();\r\n  const classesModal = modalStyle();\r\n  const Store = useSelector((store) => store);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const emptyRows = calEmptyRows(\r\n    Store.slotNotUseReducer.result ? Store.slotNotUseReducer.result : 0\r\n  );\r\n  // state\r\n  const [open, setOpen] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  //---------------------on load\r\n  useEffect(() => {\r\n    loadSlotMainForm();\r\n  }, []);\r\n  async function loadSlotMainForm() {\r\n    \r\n    const authStore = Store.loginReducer.result;\r\n    if (!authStore) {\r\n      history.push(\"/login\");\r\n    } else if (!Store.companySelectedReducer.result) {\r\n      history.push(\"/slot-main\");\r\n    } else {\r\n      const searchObj = {\r\n        company_id: Store.companySelectedReducer.result.company_id,\r\n      };\r\n      dispatch(checkJWTTOKENAction(history, Store));\r\n      dispatch(GetSlotNotUseAllAction(history, searchObj, authStore));\r\n      dispatch(GetSlotMaxAction(history, searchObj, authStore));\r\n    }\r\n  }\r\n  //---------------On Search Click\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  //--------cal Row Height\r\n  function calEmptyRows(rowsLength) {\r\n    return rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage);\r\n  }\r\n\r\n  //--------Style\r\n  const styleTableHeader = {\r\n    backgroundColor: \"rgb(144,138,138)\",\r\n    color: \"white\",\r\n    fontSize: 14,\r\n    fontWeight: 600,\r\n  };\r\n  //--------------Modal create\r\n  function onAddModalClick() {\r\n    setOpen(true);\r\n  }\r\n  //---------------------------------------------------\r\n  //----------------------------------------------------\r\n  return (\r\n    <div>\r\n      <SlotAddModal open={open} setOpen={setOpen}></SlotAddModal>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={10}>\r\n          <Card>\r\n            <CardHeader\r\n              style={{\r\n                background:\r\n                  \"linear-gradient(60deg, rgb(181 63 63), rgb(147 40 40))\",\r\n              }}\r\n              color=\"success\"\r\n            >\r\n              <h4 className={classes.cardTitleWhite}>\r\n                เลข Slot ที่ยังไม่ถูกใช้งาน\r\n              </h4>\r\n              <p className={classes.cardCategoryWhite}>Slot number not used</p>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n              <h3>โคงการ {Store?.slotMaxReducer?.result?.company_name}</h3>\r\n              <h4>จำนวนเลข Slot ทั้งหมด</h4>\r\n              <h5>{Store?.slotMaxReducer?.result?.visitor_slot_number}</h5>\r\n\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                className={classesModal.btnAdd}\r\n                onClick={onAddModalClick}\r\n              >\r\n                <span>เพิ่มเลข Slot</span>\r\n              </Button>\r\n\r\n              <br></br>\r\n              <br></br>\r\n              <TableContainer component={Paper}>\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-label=\"custom pagination table\"\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      \r\n                      <TableCell\r\n                        style={{ width: 160, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerSlotNotUseListTable.visitor_slot_number}\r\n                      </TableCell>\r\n                      <TableCell style={{ ...styleTableHeader }}>\r\n                        {headerSlotNotUseListTable.company_name}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ width: 120, ...styleTableHeader }}\r\n                        align=\"left\"\r\n                      >\r\n                        {headerSlotNotUseListTable.use_status}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {(rowsPerPage > 0\r\n                      ? Store.slotNotUseReducer.result.slice(\r\n                          page * rowsPerPage,\r\n                          page * rowsPerPage + rowsPerPage\r\n                        )\r\n                      : Store.slotNotUseReducer.result\r\n                    ).map((row) => (\r\n                      <TableRow\r\n                        key={row.visitor_slot_id ? row.visitor_slot_id : \"0\"}\r\n                      >\r\n                        \r\n                        <TableCell style={{ width: 160 }} align=\"left\">\r\n                          {row.visitor_slot_number\r\n                            ? row.visitor_slot_number\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.company_name ? row.company_name : \"\"}\r\n                        </TableCell>\r\n                        <TableCell style={{ width: 120 }} align=\"left\">\r\n                          {row.use_status ? \"ใช้งาน\" : \"ว่าง\"}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                    {emptyRows > 0 && (\r\n                      <TableRow style={{ height: 53 * emptyRows }}>\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                  <TableFooter>\r\n                    <TableRow>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[\r\n                          5,\r\n                          10,\r\n                          25,\r\n                          { label: \"All\", value: -1 },\r\n                        ]}\r\n                        colSpan={3}\r\n                        count={\r\n                          Store.slotNotUseReducer.result\r\n                            ? Store.slotNotUseReducer.result.length\r\n                            : 0\r\n                        }\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        SelectProps={{\r\n                          inputProps: { \"aria-label\": \"rows per page\" },\r\n                          native: true,\r\n                        }}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        ActionsComponent={TableCustom}\r\n                      />\r\n                    </TableRow>\r\n                  </TableFooter>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardBody>\r\n            <CardFooter></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  mainReducer,\r\n  companyGetAllReducer,\r\n  villagerImportExcelReducer,\r\n  villagerGetAllReducer,\r\n}) => ({\r\n  mainReducer,\r\n  companyGetAllReducer,\r\n  villagerImportExcelReducer,\r\n  villagerGetAllReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setSlotSelectCompanySuccess,\r\n  GetCompanyAllAction,\r\n  setSlotClearSelectCompany,\r\n  setClearSlotAll,\r\n  checkJWTTOKENAction,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SlotNotUsePage);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"components/Navbars/Navbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n// import FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\nimport secondRoutes from \"secondroutes.js\"\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\n// import imagine1 from \"assets/img/sidebar-1.jpg\";\r\n// import imagine2 from \"assets/img/sidebar-2.jpg\";\r\nimport imagine3 from \"./images/sidebar-3.jpg\";\r\n// import imagine4 from \"assets/img/sidebar-4.jpg\";\r\n// import bgImage from \"assets/img/sidebar-2.jpg\";\r\nimport logo from \"./images/logo-big.svg\";\r\nimport PageLoading from \"views/ErrorPage/PageLoading\"\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nlet ps;\r\n\r\nconst switchRoutes = (\r\n  <Switch>\r\n    {routes.map((prop, key) => {\r\n      if (prop.layout === \"\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n      return null;\r\n    })}\r\n    {secondRoutes.map((prop, key) => {\r\n      if (prop.layout === \"\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n      return null;\r\n    })}\r\n    <Redirect from=\"/\" to=\"/main\" />\r\n  </Switch>\r\n);\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Admin({ ...rest }) {\r\n  // styles\r\n  const classes = useStyles();\r\n  const authStore = useSelector(store => store);\r\n  const mainStore = authStore.mainReducer;\r\n  const loginStore = authStore.loginReducer.result;\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/maps\";\r\n  };\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, [mainPanel]);\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <PageLoading\r\n        showModal={mainStore.isFetching}\r\n      />\r\n      <Sidebar\r\n        rtlActive={false}\r\n        routes={routes}\r\n        secondRoutes={secondRoutes}\r\n        logoText={\"Web Admin\"}\r\n        logo={logo}\r\n        image={imagine3}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color={\"orange\"}\r\n        {...rest}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          color={\"info\"}\r\n          routes={routes}\r\n          loginStore={loginStore}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          {...rest}\r\n        />\r\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n        {getRoute() ? (\r\n          <div className={classes.content}>\r\n            <div className={classes.container}>{switchRoutes}</div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.map}>{switchRoutes}</div>\r\n        )}\r\n        {getRoute() ? <Footer /> : null}\r\n        {/* <FixedPlugin\r\n          handleImageClick={handleImageClick}\r\n          handleColorClick={handleColorClick}\r\n          bgColor={color}\r\n          bgImage={image}\r\n          handleFixedClick={handleFixedClick}\r\n          fixedClasses={fixedClasses}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.10.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n\r\nimport HomeImportData from \"views/Home/import/Home-import\";\r\nimport HomeList from \"views/Home/home-list/Home-list\"\r\nimport VillagerImportData from \"views/Villager/import/Villager-import\"\r\nimport VillagerList from \"views/Villager/villager-list/Villager-list\"\r\nimport UserAddSelectCompany from \"views/user/add/User-add-select-company\"\r\nimport UserAdd from \"views/user/add/User-add\"\r\nimport UserEditSelectCompany from \"views/user/edit-info/User-edit-select-company\"\r\nimport UserEditList from \"views/user/edit-info/User-edit-list\"\r\nimport UserEditInfo from \"views/user/edit-info/User-edit-info\"\r\nimport UserChangePrivilegeSelectCompany from \"views/user/change-privilege/User-change-privilege-select-company\"\r\nimport UserChangePrivilegeList from \"views/user/change-privilege/User-change-privilege-list\"\r\nimport UserChangePrivilege from \"views/user/change-privilege/User-change-privilege\"\r\nimport UserChangeComapnySelectCompany from \"views/user/change-main-company/User-change-company-select-company\"\r\nimport UserChangeCompanyList from \"views/user/change-main-company/User-change-company-list\"\r\nimport UserChangeCompany from \"views/user/change-main-company/User-change-company\"\r\nimport UserResetPassowrdSelectCompany from \"views/user/reset-password/User-reset-password-select-company\"\r\nimport UserResetPasswordList from \"views/user/reset-password/User-reset-password-select-user\"\r\nimport UserResetPassword from \"views/user/reset-password/User-reset-password\"\r\nimport UserAddOrDeleteListComapnySelectCompany from \"views/user/addordelete-companylist/User-addordelete-listcompany-select-company\"\r\nimport UserAddOrDeleteListCompanyList from \"views/user/addordelete-companylist/User-addordelete-listcompany-list\"\r\nimport UserAddOrDeleteListCompany from \"views/user/addordelete-companylist/User-addordelete-listcompany\"\r\nimport SlotNotUsePage from \"views/slot/notuse/SlotNotUsePage\"\r\n// core components/views for RTL layout\r\n\r\nconst secondRoutes = [\r\n  {\r\n    path: \"/home-import\",\r\n    component: HomeImportData,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/home-list\",\r\n    component: HomeList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/villager-import\",\r\n    component: VillagerImportData,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/villager-list\",\r\n    component: VillagerList,\r\n    layout: \"\",\r\n  }, {\r\n    path: \"/user-add-select\",\r\n    component: UserAddSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-add\",\r\n    component: UserAdd,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-edit-info-select\",\r\n    component: UserEditSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-edit-list\",\r\n    component: UserEditList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-edit-info\",\r\n    component: UserEditInfo,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-privilege-select\",\r\n    component: UserChangePrivilegeSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-privilege-list\",\r\n    component: UserChangePrivilegeList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-privilege\",\r\n    component: UserChangePrivilege,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-company-select\",\r\n    component: UserChangeComapnySelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-company-list\",\r\n    component: UserChangeCompanyList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-change-company\",\r\n    component: UserChangeCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-reset-password-listcompany-select\",\r\n    component: UserResetPassowrdSelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-reset-password-list\",\r\n    component: UserResetPasswordList,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-reset-password\",\r\n    component: UserResetPassword,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-addordelete-listcompany-select\",\r\n    component: UserAddOrDeleteListComapnySelectCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/user-addordelete-listcompany-list\",\r\n    component: UserAddOrDeleteListCompanyList,\r\n    layout: \"\",\r\n  }, {\r\n    path: \"/user-addordelete-listcompany\",\r\n    component: UserAddOrDeleteListCompany,\r\n    layout: \"\",\r\n  },{\r\n    path: \"/slot-not-use\",\r\n    component: SlotNotUsePage,\r\n    layout: \"\",\r\n  },\r\n  \r\n];\r\n\r\nexport default secondRoutes;\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst appStyle = (theme) => ({\r\n  wrapper: {\r\n    position: \"relative\",\r\n    top: \"0\",\r\n    height: \"100vh\",\r\n  },\r\n  mainPanel: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    ...transition,\r\n    maxHeight: \"100%\",\r\n    width: \"100%\",\r\n    overflowScrolling: \"touch\",\r\n  },\r\n  content: {\r\n    marginTop: \"70px\",\r\n    padding: \"30px 15px\",\r\n    minHeight: \"calc(100vh - 123px)\",\r\n  },\r\n  container,\r\n  map: {\r\n    marginTop: \"70px\",\r\n  },\r\n});\r\n\r\nexport default appStyle;\r\n","export default __webpack_public_path__ + \"static/media/sidebar-3.e667b13e.jpg\";","export default __webpack_public_path__ + \"static/media/logo-big.3a034137.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function PageLoading(props) {\r\n    const { showModal } = props;\r\n    const classes = useStyles();\r\n    // const handleOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    // };\r\n\r\n    return (\r\n        <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={showModal}\r\n            // onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            disableBackdropClick={false}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            <Fade in={showModal}>\r\n                <CircularProgress\r\n                    color=\"secondary\"\r\n                    size=\"100px\"\r\n                />\r\n            </Fade>\r\n        </Modal>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-big.2fbd0c23.svg\";","import { useState } from 'react'\r\nimport swal from 'sweetalert';\r\nimport { isNotEngCharOrNumber } from 'utils/formatCharacter.util'\r\nimport { connect } from 'react-redux'\r\nimport { loginAction } from '../../actions/login/login.action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from './logo-big.svg'\r\n\r\nfunction LoginPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    //---------------State\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function onLoginClick(e) {\r\n        e.preventDefault();\r\n        if (loginMiddleware()) {\r\n            dispatch(loginAction(history, { username: userName, password: password }))\r\n        }\r\n    }\r\n    function loginMiddleware() {\r\n        if (!userName) {\r\n            swal(\"Warning!\", \"กรุณากรอก Username\", \"warning\");\r\n            return false;\r\n        } else if (!password) {\r\n            swal(\"Warning!\", \"กรุณากรอก Password\", \"warning\");\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(userName)) {\r\n            swal(\"Warning!\", \"Username ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น\", \"warning\");\r\n            return false;\r\n        } else if (isNotEngCharOrNumber(password)) {\r\n            swal(\"Warning!\", \"Password ต้องเป็นอักษรภาษาอังกฤษ หรือตัวเลขเท่านั้น\", \"warning\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    //-----------------------------------------------\r\n    return (\r\n        <div className=\"limiter\">\r\n            <div className=\"container-login100\">\r\n                <div className=\"wrap-login100\">\r\n                    <div className=\"login100-pic js-tilt\" data-tilt>\r\n                        <img src={logo} alt=\"IMG\" />\r\n                    </div>\r\n                    <form className=\"login100-form validate-form\">\r\n                        <span className=\"login100-form-title\">\r\n                            Bannayuu Admin Login\r\n                    </span>\r\n                        {/* <div className=\"wrap-input100 validate-input\" data-validate=\"Valid email is required: ex@abc.xyz\"> */}\r\n                        <div className=\"wrap-input100 validate-input\" data-validate=\"Username is required\">\r\n                            <input className=\"input100\"\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                placeholder=\"Username\"\r\n                                value={userName}\r\n                                onChange={event => setUserName(event.target.value)}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i className=\"fa fa-user\" aria-hidden=\"true\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\r\n                            <input\r\n                                className=\"input100\"\r\n                                type=\"password\"\r\n                                name=\"pass\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={event => setPassword(event.target.value)}\r\n                            />\r\n                            <span className=\"focus-input100\" />\r\n                            <span className=\"symbol-input100\">\r\n                                <i className=\"fa fa-lock\" aria-hidden=\"true\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"container-login100-form-btn\">\r\n                            <button\r\n                                className=\"login100-form-btn\"\r\n                                onClick={e => onLoginClick(e)}\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"text-center p-t-136\">\r\n                            <a className=\"txt2\" href=\"#\">\r\n                                Power by Creative Innovation Technology\r\n                            </a>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ loginReducer,mainReducer }) => ({ loginReducer,mainReducer })\r\n\r\nconst mapDispatchToProps = {\r\n    loginAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","function Page500(){\r\n    return (\r\n        <div>\r\n            <h1>Page 500</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Page500;","import {\r\n    HTTP_LOGIN_FETCHING,\r\n    HTTP_LOGIN_SUCCESS,\r\n    HTTP_LOGIN_FAILED,\r\n    HTTP_LOGIN_CLEARVALUES,\r\n    LOGIN_FAILED_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from '../../constants/constants.utils'\r\n\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nlet globalState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    let localStr = null;\r\n    let localStageReturn = state;\r\n    switch (type) {\r\n        case HTTP_LOGIN_FETCHING:\r\n            return {\r\n                result: null,\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null\r\n            }\r\n        case HTTP_LOGIN_SUCCESS:\r\n            globalState = {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n            };\r\n            localStorage.setItem('authStorage', JSON.stringify(globalState))\r\n            return globalState\r\n        case HTTP_LOGIN_FAILED:\r\n            globalState = {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: true,\r\n                message: LOGIN_FAILED_MESSAGE,\r\n            };\r\n            localStorage.setItem('authStorage', JSON.stringify(globalState))\r\n            return globalState\r\n        case HTTP_LOGIN_CLEARVALUES:\r\n            localStorage.removeItem('authStorage')\r\n            return {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: null,\r\n            };\r\n        default:\r\n            localStr = localStorage.getItem('authStorage')\r\n            localStageReturn = !localStr ? state : JSON.parse(localStr);\r\n            return localStageReturn;\r\n    }\r\n}\r\n","import {\r\n    HTTP_LOGOUT_FETCHING,\r\n    HTTP_LOGOUT_SUCCESS,\r\n    SUCCESS_MESSAGE\r\n} from '../../constants/constants.utils'\r\n\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nexport default (state = initialState, { type }) => {\r\n    switch (type) {\r\n        case HTTP_LOGOUT_FETCHING:\r\n            return {\r\n                result: null,\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null\r\n            }\r\n        case HTTP_LOGOUT_SUCCESS:\r\n            localStorage.setItem('authStorage', null)\r\n            return {\r\n                result: SUCCESS_MESSAGE,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_FETCHING,\r\n    HTTP_SUCCESS,\r\n    HTTP_FAILED,\r\n    SUCCESS_MESSAGE,\r\n    FAILED_MESSAGE,\r\n} from '../../constants/constants.utils'\r\n\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null\r\n}\r\n\r\nexport default (state = initialState, { type }) => {\r\n    switch (type) {\r\n        case HTTP_FETCHING:\r\n            return {\r\n                result: null,\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null\r\n            }\r\n        case HTTP_SUCCESS:\r\n            return {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE\r\n            }\r\n        case HTTP_FAILED:\r\n            return {\r\n                result: null,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: FAILED_MESSAGE\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_SELECT_COMPANY_SUCCESS,\r\n    HTTP_SELECT_COMPANY_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_SELECT_COMPANY_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_SELECT_COMPANY_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_COMPANY_ALL_FETCHING,\r\n    HTTP_GET_COMPANY_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_ALL_FAILED,\r\n    HTTP_GET_COMPANY_ALL_CLEARSTORE,\r\n    HTTP_GET_COMPANY_ALL_GETDATASUCCESS,\r\n    SUCCESS_MESSAGE,\r\n    CLEAR_VALUE_MESSAGE,\r\n    GET_DATA_SUCCESSFULLY\r\n} from 'constants/constants.utils'\r\nimport {\r\n    MESSAGE_GET_COMPANY_ALL_FAILED,\r\n\r\n} from 'constants/message.constant'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_COMPANY_ALL_FETCHING:\r\n            return {\r\n                result: [],\r\n                isFetching: true,\r\n                isError: false,\r\n                message: null,\r\n                isReady: false\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_FAILED:\r\n            return {\r\n                result: [],\r\n                isFetching: false,\r\n                isError: true,\r\n                message: MESSAGE_GET_COMPANY_ALL_FAILED,\r\n                isReady: false\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_CLEARSTORE:\r\n            return {\r\n                result: [],\r\n                isFetching: false,\r\n                isError: false,\r\n                message: CLEAR_VALUE_MESSAGE,\r\n                isReady:false\r\n            }\r\n        case HTTP_GET_COMPANY_ALL_GETDATASUCCESS:\r\n            return {\r\n                result: [],\r\n                isFetching: false,\r\n                isError: false,\r\n                message: GET_DATA_SUCCESSFULLY,\r\n                isReady:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_COMPANY_LIST_ALL_SUCCESS,\r\n    HTTP_GET_COMPANY_LIST_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_COMPANY_LIST_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_COMPANY_LIST_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_HOME_SELECT_COMPANY_SUCCESS,\r\n    HTTP_HOME_CLEAR_COMPANY,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_HOME_SELECT_COMPANY_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_HOME_CLEAR_COMPANY:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_HOME_ALL_SUCCESS,\r\n    HTTP_GET_HOME_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_HOME_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_HOME_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_VILLAGER_SELECT_COMPANY_SUCCESS,\r\n    HTTP_VILLAGER_CLEAR_COMPANY,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_VILLAGER_SELECT_COMPANY_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_VILLAGER_CLEAR_COMPANY:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    HTTP_GET_VILLAGER_ALL_SUCCESS,\r\n    HTTP_GET_VILLAGER_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_VILLAGER_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_VILLAGER_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_PRIVILEGE_ALL_SUCCESS,\r\n    HTTP_GET_PRIVILEGE_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_PRIVILEGE_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_PRIVILEGE_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_USER_LIST_ALL_SUCCESS,\r\n    HTTP_GET_USER_LIST_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_USER_LIST_ALL_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_USER_LIST_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_SELECT_USER_SUCCESS,\r\n    HTTP_SELECT_USER_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: null,\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_SELECT_USER_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_SELECT_USER_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_SLOT_MAX_SUCCESS,\r\n    HTTP_GET_SLOT_MAX_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_SLOT_MAX_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_SLOT_MAX_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    HTTP_GET_SLOT_NOTUSE_SUCCESS,\r\n    HTTP_GET_SLOT_NOTUSE_CLEAR,\r\n    CLEAR_VALUE_MESSAGE,\r\n    SUCCESS_MESSAGE\r\n} from 'constants/constants.utils'\r\nconst initialState = {\r\n    result: [],\r\n    isFetching: false,\r\n    isError: false,\r\n    message: null,\r\n    isReady: false\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case HTTP_GET_SLOT_NOTUSE_SUCCESS:\r\n            return {\r\n                result: payload,\r\n                isFetching: false,\r\n                isError: false,\r\n                message: SUCCESS_MESSAGE,\r\n                isReady: true\r\n            }\r\n        case HTTP_GET_SLOT_NOTUSE_CLEAR:\r\n            return { ...initialState, message: CLEAR_VALUE_MESSAGE }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport loginReducer from 'reducers/login/login.reducer'\r\nimport logoutReducer from 'reducers/logout/logout.reducer'\r\nimport mainReducer from 'reducers/main/main.reducer'\r\nimport companySelectedReducer from 'reducers/company/company-selected.reducer'\r\nimport companyGetAllReducer from 'reducers/company/company-get-all.reducer'\r\nimport companyListGetAllReducer from 'reducers/company/company-list-get-all.recuder'\r\nimport homeImportExcelReducer from 'reducers/home/home-import-excel.reducer'\r\nimport homeGetAllReducer from 'reducers/home/home-get-all.reducer'\r\nimport villagerImportExcelReducer from 'reducers/villager/villager-import-excel.reducer'\r\nimport villagerGetAllReducer from 'reducers/villager/villager-get-all.reducer'\r\nimport privilegeGetAllReducer from 'reducers/privilege/privilege-get-all.reducer'\r\nimport userListGetAllReducer from 'reducers/user/user-list-get-all.reducer'\r\nimport userSelectReducer from 'reducers/user/user-select.reducer'\r\nimport slotMaxReducer from 'reducers/slot/slot-get-max.reducer'\r\nimport slotNotUseReducer from 'reducers/slot/slot-get-not-use.reducer'\r\n\r\nexport default combineReducers({\r\n    loginReducer,\r\n    logoutReducer,\r\n    mainReducer,\r\n    companySelectedReducer,\r\n    companyGetAllReducer,\r\n    companyListGetAllReducer,\r\n    homeImportExcelReducer,\r\n    homeGetAllReducer,\r\n    villagerImportExcelReducer,\r\n    villagerGetAllReducer,\r\n    privilegeGetAllReducer,\r\n    userListGetAllReducer,\r\n    userSelectReducer,\r\n    slotMaxReducer,\r\n    slotNotUseReducer\r\n})","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.10.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// core components\r\nimport Admin from \"layouts/Admin.js\";\r\nimport LoginPage from \"views/Login/Login-page.js\"\r\nimport Page500 from \"views/ErrorPage/Page500\"\r\nimport \"assets/css/material-dashboard-react.css?v=1.10.0\";\r\n//redux store\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\"\r\n// import logger from \"redux-logger\"\r\nimport { Provider } from \"react-redux\"\r\nimport reducers from \"reducers\"\r\n//redux devtool\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n// const store = createStore(reducers, \r\n//   composeWithDevTools(applyMiddleware(thunk, logger)),\r\n//   );\r\n\r\n  const store = createStore(reducers, \r\n    composeWithDevTools(applyMiddleware(thunk)),\r\n    );\r\n  \r\nconst ReduxApp = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={LoginPage} />\r\n        <Route exact path=\"/page500\" component={Page500} />\r\n        <Route path=\"/\" component={Admin} />\r\n        <Redirect from=\"/\" to=\"/main\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\nReactDOM.render(\r\n  ReduxApp,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}